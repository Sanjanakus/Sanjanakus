
  
  
<html>
 
<head>
<meta http-equiv="X-UA-Compatible" content="IE=Edge" />
<link rel="stylesheet" href="theme/Master.css" type="text/css">
<title>Inquire (view type op)</title>
 <script src="include/js/jQuery/jquery-3.4.1.min.js" type="text/javascript"></script>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"> 
<script src="spsJs/js/jscal2.js"></script>
<script src="spsJs/js/lang/en.js"></script>

<link rel="stylesheet" type="text/css" href="theme/css/jscal2.css" />

<link rel="stylesheet" type="text/css" href="theme/css/border-radius.css" />
<link rel="stylesheet" type="text/css" href="theme/css/steel/steel.css" />
<link href="theme/gfadmin.css" rel="stylesheet" type="text/css" />
<script src="spsJs/vpScripts.js"  type="text/javaScript" ></script>
<script src="SpryAssets/SpryTabbedPanels.js" type="text/javascript"></script>
<link href="SpryAssets/SpryTabbedPanels.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" language="javascript"
	src="dwr/engine.js"></script>
<script type="text/javascript" language="javascript"
	src="dwr/util.js"> </script>
<script type="text/javascript" language="javascript"
	src="dwr/interface/secCont.js"></script>
<script type="text/javascript" language="javascript"
	src="dwr/interface/docs.js"></script>
<!-- moving below up as per requirement of new DWR
<script type="text/javascript" language="javascript"
	src="dwr/engine.js"></script>
<script type="text/javascript" language="javascript"
	src="dwr/util.js"> </script> -->
<script src="spsJs/vpScripts.js"  type="text/javaScript" ></script>
<script type="text/javascript" src="include/js/esapi4js/ESAPI.js"></script>
<script type="text/javascript" src="include/js/esapi4js/resources/i18n/ESAPI_Standard_en_US.properties.js"></script>
<script type="text/javascript" src="include/js/esapi4js/resources/Base.esapi.properties.js"></script>
<script src="spsJs/sortable.js"  type="text/javaScript" ></script>

<script src="include/js/jQuery/jquery-3.4.1.min.js" type="text/javascript"></script>
<script src="include/js/jQuery/jquery-migrate-1.2.1.js" type="text/javascript"></script>
    <script src="include/js/jQuery/jquery-ui-1.8.2.custom.min.js" type="text/javascript"></script>
    <script src="include/js/jQuery/jquery.dialog.extend.js" type="text/javascript"></script>
    <script src="include/js/jQuery/jquery.selectbox-1.2.js" type="text/javascript"></script>
    <script src="include/js/jQuery/jquery.layout.min-1.2.0.js" type="text/javascript"></script>
    <script src="include/js/jQuery/jquery.maskedinput-1.2.2.min.js" type="text/javascript"></script>
    <script src="include/js/jQuery/jquery.maskedinput.rules.js" type="text/javascript"></script>
    <script src="include/js/jQuery/jquery.jstree.js" type="text/javascript"></script>
    <script src="include/js/jQuery/jquery.cookie.js" type="text/javascript"></script>
    
    <script src="include/js/jQuery/jquery.watermark.min.js" type="text/javascript"></script>
    <script src="include/js/jQuery/jquery.tooltip.min.js" type="text/javascript"></script>
    
    <script src="include/js/common.js" type="text/javascript"></script>
    <script src="include/js/syntaxhighlighter/shCore.js" type="text/javascript"></script>
    <script src="include/js/syntaxhighlighter/shBrushCSharp.js" type="text/javascript"></script>
    <script src="include/js/syntaxhighlighter/shBrushJScript.js" type="text/javascript"></script>
    <script src="include/js/syntaxhighlighter/shBrushXml.js" type="text/javascript"></script>
    <script src="include/js/syntaxhighlighter/shBrushCss.js" type="text/javascript"></script>
     <link rel="stylesheet" type="text/css" href="include/css/common.css" />
    <link href="include/css/syntaxhighlighter/shCore.css" rel="stylesheet" type="text/css" /><link href="include/css/syntaxhighlighter/shCoreDefault.css" rel="stylesheet" type="text/css" />
 <link href="include/css/blue/jquery-ui-1.8.2.custom.css" type="text/css" rel="stylesheet" /><link href="include/css/blue/jqueryThemeSupplement.css" type="text/css" rel="stylesheet" />
<style type="text/css">
	
	.hoverPointer {
		cursor:pointer;
	}
	
</style>
    
<script type="text/javascript" src="spsJs/maxlength.js"></script>
<script type='text/javascript' src='dwr/interface/configurationsCont.js'> </script>
<script type="text/javascript" language="javascript" src="dwr/interface/DWA.js"></script>


<style type="text/css">
 .even{
 BACKGROUND-COLOR: #ECF2F2;
 }
  .odd{
 BACKGROUND-COLOR: #EFEFEF;
 }
 .cleared{
  BACKGROUND-COLOR: #E1E1E1;
 }
 
 table.sortable tr.odd td {
	background-color: #ECF2F2;
}
table.sortable tr.even td {
	background-color: #ECF8F8;
}
a.ui-datepicker-prev,
a.ui-datepicker-next
{
    display: none;
}
</style>
 
<script type="text/javascript" language="javaScript">
var pgNbr;
var startRow;
var endRow;
var totalRecords;
var reportType;
var pageSize=12;

var totalSumryRecords;
var spsId=null;
var lastSelectedRow=null;
var originalChargeColor=null;
var certSelectRow=null;
var certOrigColor=null;
var modRowArr=new Array();
var colorHilate="#94C1D4";
//var roweles=['branchHid','accountHid','secNbr','dest','quantity','cusip','symbol'];
//var rowTexteles=['branch','account','sec','dest','quantity','cusip','symbol'];
//var certNames=['certPrefix','certNbr','certRegName','certQty','certMarketValue','certIssueDate','certOfac','certSic'];
var inqObj;
var depositRId;
var certGenricFunc;
var docEventId=null;
var isDocsexist=false;
var boxLoc;
var boxLocDesc;
var boxLocDescNotFound = false;
var boxType=null;
var actionType='inquire';
var userType='op';
var actionSubType='';
var screenType='';
var allowOfacCheckBySec='N';
var allowTrailerDesc='N';
var allowShippedDtind='N';
var isFAUsr='';
var isOpsUser='';
var branchUser='';
var ubsInd='';
var Apprrjt='';
var MarginUpd='';
var reportType="";
var acptInd=null;
var priceOnly=null;
var origAmount=null;
var spsReqEvent=null;
var delDocIds=new Array();
var ibClassName='cHidden';
var delvAddr=null;
var statusVal=null;
var msgTypeVal=null;
var colIndexOfCertQty;  // Column index of Quantity field on certificate rows
var colIndexOfCertAmt;  // Column index of Amount field on certificate rows
var colIndexOfCertDelBox; // Column index of Delete button/checkbox on certificate rows
var colIndexOfCertDlvBox; // Column index of Delivery checkbox on certificate rows
var newQuestionnaire='N';
var specifyType='';
var eventEleSelectedIndex=0;
var isUpdateAllowed=false;
var isDSRQdone=false;
var isDSRQChecked=false;
var dsrqQuestList;
var rstrInd=null;
var validBkpgCurrencyCd=null;
var dsrqReqd="",questionnaireReqd="",certificateTabReqd="",documentTabReqd="",dwacDrsTabReqd="";
var bookKeepingTabReqd="",auditTrailsTabReqd="",imagingTabReqd="",commentsTabReqd="",freeFormTrailerTabReqd="";
var allowBondRegType="", allowGiftInhInd="", allowNegotiableInd="",allowBearerInd="", allowDupCertRows="";allowAltBranch="",allowDeliverToBranchDisable="";
var allowOfacCheck="",allowCommentsOnPrintReceipt="",allowPrintLockupAdvice="";
var allowDelDocAfterReceive="",allowIBDelCerts="";allowPartialCleanUp="";
var allowDTCEligCheckInquire="";var allowSpecifyOnRepairToInquire="";
var allowAccountTypeInq="";var allowDeliveryChkBoxInquire="";
var allowDeliverToBranchInq="";var allowBoxMOnRepairToInquire="";
var multiCurrencyClient ='Y';
var defaultCurrencyCd='U$';
var defaultCountryCd='US';
var rushInd='Y';
var useHousePrice="";
var allowSuspenceInd="", accountFreezeProcess="";var accTypeCdDefault="";
var restrictedSecIndOnInquire="";
var branchAsTextInput='N';
var subDimeCheckReqd="";
var isSubDimedone=false;
var priceThreshold=0;
var allowBoxmOnHold="";
var isBoxmEligOnHold=false;
var destOld="";
var doNotUseSecurity=null; 
var limitCertDepositInd="";var limitCertDepositValue="";
var depositQtyCheck="";
var bdsClientIndInq="";
var bondTypePriceCheck="";
var accountTypeDisplay="";
var chkBoxTypeCd="";
var chkChillDepIndBlk="";
var locMovId=null;
var sortOrder = '';
var sortColumn = '';
var rstrSecurityNbrValue="";
var brdSecurityNbrValue="";
var cancelDepostsAfterDayOne='N';
var restrictedStockIndOnInquire = 'Y';
var certNumberMaxLength="";
var branchArray = null;
var msgType = null;
var showUpdateButton='N';
var errorString;
var cibcActionElement = null;
var newCIBCBox = null;
var oldCIBCBox = null;
var dlvMsgType = null;
var inquireTrailerDesc = null;
var selectedDepositRId = null;
var hideDeliveryCoverLetterButton = 'N';
var addArrCache = new Array();
var countryCode;
var chillIndVsDTCDstnCheck = 'Y';
var branch250FuncEnbl = 'Y';
var isBkpgCurrCodeValid = true;
var accountFreezeDisableSecout="";
var frozenAccOldVal=" ";
var allowContactTab="";
var allowDWACCommentsInq=""; 
var displayCancelBkpgs = 'N';
var allowDwacDrsDtcSuccess="";
var logonUsrId='V010SWAM';//Added as part of Metis#5324197
var doNotUseTxtVal="";
var nameChgSecVal = "";
onLoadInialize=function(){

    //document.getElementById("accountType").style.display="";
	hideDiv("depositfs",true);hideDiv("certfs",true);
	document.getElementById("goBack").className="cHidden";
	hideDiv("updButDiv",true);
	dwr.util.addOptions("branch",["ALL"]);  
	getClientSpecificFuncIndicators();
	if (userType != null && trim(userType) != 'cbibinq') {
		populateBox();
	}
	//populateStatus();
	populateStatusForBranchAll();
	setuserClassType();
	getReqById();
	fetchCountryCode();
	setBrFaUserInqLabels();
	
		
}
function labelchg()
{	
	if(ubsInd!=null && ubsInd == 'Y') {
		 document.getElementById('dwaclblName').innerHTML = 'DRS Deposits';
	}else{
		 document.getElementById('dwaclblName').innerHTML = 'DWAC/DRS Deposits';
	}	
}

function getClientSpecificFuncIndicators() {
	secCont.getClientSpecificFuncIndicators(function(result) {
		if(null != result) {
			dsrqReqd = result.dsrqReqdInd;
			questionnaireReqd = result.questionnaireReqdInd;
			certificateTabReqd = result.certificateTabReqdInd;
			documentTabReqd = result.documentTabReqdInd;
			dwacDrsTabReqd = result.dwacDrsTabReqdInd;
			bookKeepingTabReqd = result.bookKeepingTabReqdInd;
			auditTrailsTabReqd = result.auditTrailsTabReqdInd;
			imagingTabReqd = result.imagingTabReqdInd;
			commentsTabReqd = result.commentsTabReqdInd;
			freeFormTrailerTabReqd=result.allowFreeformTrailer;
			allowBoxmOnHold = result.allowBoxmOnHoldInd;
			subDimeCheckReqd = result.subDimeCheckInd;
			priceThreshold = result.priceThreshold;
			depositQtyCheck=result.depositQtyCheck;
			
			allowBondRegType  = result.allowBondRegType;
			allowGiftInhInd = result.allowGiftInhInd;
			allowNegotiableInd  = result.allowNegotiableInd;
			allowBearerInd= result.allowBearerInd;
			allowDupCertRows    = result.allowDupCertRows;
			allowOfacCheck     = result.allowOfacCheck;
			allowCommentsOnPrintReceipt = result.allowCommentsOnPrintReceipt;
			allowPrintLockupAdvice = result.allowPrintLockupAdvice;
			allowSuspenceInd   = result.allowSuspenceInd;
			useHousePrice         = result.useHousePrice;
			accountFreezeProcess = result.accountFreezeProcess;		
			allowDelDocAfterReceive = result.allowDelDocAfterReceive;
			allowIBDelCerts		= result.allowIBDelCerts;
			restrictedSecIndOnInquire = result.restrictedSecIndOnInquire;
			allowPartialCleanUp=result.allowPartialCleanUp;
			allowAltBranch=result.allowAlternateBranch;
            allowDTCEligCheckInquire=result.allowDTCEligCheckInquire;
            allowSpecifyOnRepairToInquire=result.allowSpecifyOnRepairToInquire;
            allowDeliveryChkBoxInquire=result.allowDeliveryChkBoxInquire;
            allowAccountTypeInq=result.allowAccountTypeInq;
            bdsClientIndInq=result.bdsClientIndInq;
            accTypeCdDefault=result.accTypeCdDefault;
           
            allowBoxMOnRepairToInquire=result.allowBoxMOnRepairToInquire;
            allowDeliverToBranchInq=result.allowDeliverToBranchInq;
            allowDeliverToBranchDisable=result.allowDeliverToBranchDisable;
            //defaultCountryCd=result.defaultCountryCd;
          limitCertDepositInd=result.limitCertDepositInd;
			limitCertDepositValue=result.limitCertDepositValue;
			restrictedStockIndOnInquire = result.restrictedStockIndicatorInquire;
			accountTypeDisplay=result.accountTypeDisplay;
			accountFreezeDisableSecout = result.accountFreezeDisableSecout;
			allowContactTab = result.contactTabReqdInd;
			allowDWACCommentsInq = result.allowDWACCommentsInq;
            if(allowAccountTypeInq=="Y"){
            document.getElementById("accountTypeCd").style.display="block";
			document.getElementById("account").onkeyup = function () { moveOnMax(this,'accountTypeCd')};
           }
           //alert("accTypeCdDefault:"+accTypeCdDefault);
           if (allowAltBranch == 'Y'){
            document.getElementById("altbranchtxt").style.display="block";
           }
            if (allowAccountTypeInq !='Y' && allowAltBranch != 'Y')
           {
           document.getElementById("BrLabel1").style.display="block";
           }
           if (allowAccountTypeInq =='Y' && allowAltBranch != 'Y')
           {
           document.getElementById("BrLabel2").style.display="block";
           document.getElementById("BrLabel1").style.display="none";
           }
            if (allowAccountTypeInq !='Y' && allowAltBranch == 'Y')
           {
           document.getElementById("BrLabel3").style.display="block";
           document.getElementById("BrLabel1").style.display="none";
           }
            if (allowAccountTypeInq =='Y' && allowAltBranch == 'Y')
           {
           document.getElementById("BrLabel4").style.display="block";
           document.getElementById("BrLabel1").style.display="none";
           }
           
           if( restrictedSecIndOnInquire=="Y") {
		document.getElementById("rstrIndDiv").className="cVisible";
			}
			cancelDepostsAfterDayOne=result.cancelDepositAfterDayOne;
			showUpdateButton=result.displayIBUpdateButton;
			hideDeliveryCoverLetterButton=result.hideDeliveryCoverLetterButton;
			chillIndVsDTCDstnCheck=result.chillIndVsDTCDstnCheck;
			branch250FuncEnbl=result.branch250FuncEnbl;
			  var destValue = document.getElementById('destination').value;
	           if(allowDWACCommentsInq=='Y' && userType=="op" && destValue!="DRS" && actionSubType=="dwacDrs"){
	        	    hideDiv("commentsTh",false);
	    			hideDiv("rcvcustacctnbrTh",false);
	           }else{
	        	    hideDiv("commentsTh",true);
	    			hideDiv("rcvcustacctnbrTh",true);
	           }
	           displayCancelBkpgs = result.displayCancelBkpgs;
	           allowDwacDrsDtcSuccess = result.allowDwacDrsDtcSuccess;
		}
		//alert ("allowAltBranch"+allowAltBranch);
//	if (allowAltBranch == 'Y')
//	{
//	hideDiv("altbranchtxt",false);
// ####	hideDiv("altbranchlbl",false);
	//document.getElementById("altbranchtxt").className="cVisible";
		//document.getElementById("altbranchlbl").className="cVisible";
//	}else
//	{
	//hideDiv("altbranchtxt",false);
// ####	hideDiv("altbranchlbl",false);
//	}
	});
	
	
	if (multiCurrencyClient =='Y') {
		document.getElementById("currencyCode").className="cVisible";
		document.getElementById("bkpgCurrDiv").className="cVisible";
	}
	
	if (restrictedStockIndOnInquire != null && restrictedStockIndOnInquire == 'Y') {
		document.getElementById("restrictedIndicatorDiv").style.display = "block";
	} else {
		document.getElementById("restrictedIndicatorDiv").style.display = "none";
	}
}

showHideRegNameSSN=function(){

 /*var ele=document.getElementById("dwacDepositsBody");
	   
	   

		var incoming= ele.rows[0].cells[5].firstChild.value;
		
		var ssnvalue=document.getElementById("dwacSsn").value;
		var regNameValue=document.getElementById("dwacRegName").value;

if(incoming=="I"){

if(trim(ssnvalue).length!=0){


document.getElementById("dwacSsn").disabled=false;
document.getElementById("dwacRegName").disabled=true;
document.getElementById("dwacRegName").value='';
}
else if( trim(regNameValue).length!=0)

{
document.getElementById("dwacRegName").disabled=false;
document.getElementById("dwacSsn").disabled=true;
document.getElementById("dwacSsn").value='';
}
else{


document.getElementById("dwacRegName").disabled=false;
document.getElementById("dwacSsn").disabled=false;

}
}
else{
document.getElementById("dwacRegName").disabled=false;
document.getElementById("dwacSsn").disabled=false;

}*/
//alert("HEY HEY HEY");

}

function loadPrimaryFunctions(id, name)
{
	dwr.util.useLoadingMessage();
	dwr.engine.beginBatch();
	dwr.util.addOptions(id,['Loading...']);
	configurationsCont.getLookupValuesNew(name, function(data)
			{
				dwr.util.removeAllOptions(id);
				if(data.length==0)
				{
					dwr.util.addOptions(id,['No Data Found']);
					return;
				}
				else
				{
					dwr.util.addOptions(id,[{id:"",desc:"--Please Select--"}],'id','desc');
					dwr.util.addOptions(id,data);
				}
				//createDynamicDivs(data);
			}

	);
	dwr.engine.endBatch();
}

function branchChange(){
	var brValue = getActualValue("branch");
	if (brValue==null || brValue=='' || brValue== 'ALL') {
		populateStatusForBranchAll();
	} else {
		populateStatus(brValue);
	}
	checkBranch250();
	if (userType != null && trim(userType) == 'cbibinq' && brValue != null) {
		if (brValue=='' || brValue == 'ALL') {
			secCont.retrieveBrs(function(result){
				populateBoxesForBranches(result);
			});
		} else {
			var brchAr = [brValue];
			populateBoxesForBranches(brchAr);
		}
	}
}

function retrieveSecDesc(){
	var ele=document.getElementById('secText');
	var secType=dwr.util.getValue('secType');
	var sec=trim(ele.value);
	if(secType=='C'){if(sec!=null && sec!="" && sec.length!=9){alert("CUSIP Should be of size 9"); return false;}}
	if(secType=='A'){if(sec!=null && sec!="" && sec.length !=7){alert("ADDP NUMBER Should be of size 7");return false;}}
	if(sec !=''){
		clearSecProp();
		$('#rstrIndChkBox').attr('disabled',true);
		fetchSecDesc(secType,ele.value);
	}
}
//populate bond types
populateBondRegTypes=function(bondRegTypesTxt){
	dwr.util.addOptions("bondRegType",['Fetching, Please wait...']);
	
	secCont.getBondRegTypes(bondRegTypesTxt,function(data){
		dwr.util.removeAllOptions("bondRegType");
		if(null==data){
			dwr.util.addOptions("bondRegType",[{id:"",desc:'No Bond Reg Types Found'}],'id','desc');
			document.getElementById('bondRegType').options[0].style.backgroundColor="#FF9F9F";
		}else{
			dwr.util.addOptions("bondRegType",[{id:"",desc:"Select Bond Type"}],'id','desc');
			dwr.util.addOptions("bondRegType",data,'id','desc');
		}});
}
///fetch sec desc
fetchSecDesc=function(sType,sVal){
var chillIndValue="";
chkChillDepIndBlk="";

var ele1=document.getElementById("certBody");
certrowId=ele1.rows.length-1;
var acVal="";
acVal=document.getElementById("account").value;
 
  var branch= $('#branch').val();
  
  var bracc=branch+acVal;
	secCont.getSecDesc(sType,sVal,function(result){
		if(trim(result.doNotUseDt) != null && trim(result.doNotUseTxt) != null && trim(result.doNotUseTxt) != '') {			
			doNotUseSecurity = 'Y';
			if(ubsInd=='Y')
			{
				doNotUseTxtVal = result.doNotUseTxt;
				nameChgSecVal = result.nameChgSec;
				result.securityDesc = result.securityDesc + '(' + trim(result.doNotUseTxt) +' REFER TO - '+trim(result.nameChgSec)+')';
			}
			else
			{
				result.securityDesc = result.securityDesc + '(' + trim(result.doNotUseTxt) +')';
			}
		} else {
			doNotUseSecurity = '';
		}
		if (trim(result.addSecDescTxt1) != "" && trim(result.addSecDescTxt2) != "") {
			document.getElementById("secDecText").innerHTML=trim(result.securityDesc)+" "+trim(result.addSecDescTxt1)+" "+trim(result.addSecDescTxt2) + ' ';		
		} else if(trim(result.addSecDescTxt2) == "" && trim(result.addSecDescTxt1) != "")  {
			document.getElementById("secDecText").innerHTML=trim(result.securityDesc)+" "+trim(result.addSecDescTxt1) + ' ';
		} else {
			document.getElementById("secDecText").innerHTML=trim(result.securityDesc)+ ' ';
		}
		document.getElementById("price").innerHTML=result.priceSecurityAmt;
		document.getElementById("dtcEligInd").innerHTML=result.dtcEligInd;
		document.getElementById("dtcEligText").innerHTML=result.dtcEligText;
		document.getElementById("reorgText").innerHTML=result.reorgText;
		document.getElementById("bondDecText").innerHTML=(trim(result.bondMaturityDt)!=null && trim(result.bondMaturityDt) != ''?" Maturity Dt : "+trim(result.bondMaturityDt):"")+" "+(trim(result.bondInterestRt)!=null&& trim(result.bondInterestRt) != ''?"Interest Rt : "+trim(result.bondInterestRt):"");
		document.getElementById("recordDtText").innerHTML=(trim(result.recordDt)&& trim(result.recordDt) != ''?"Record Dt : "+trim(result.recordDt):"");
		//document.getElementById("secDecText").className=(result.securityDesc.match("Security Not Found")=="Security Not Found"?"cErrors":"cSmallLabel");
		if(actionSubType!='dwacDrs'){
			if(ubsInd=='Y' && result.doNotUseTxt.toLowerCase().indexOf("name change")!== -1){
				alert("Can not Update Deposit for Name Change Security");
				return false;
			}
		}
		if(result.securityDesc.substring(0,18)=="Security Not Found") {
			document.getElementById("secDecText").className="cErrors";
			document.getElementById('secText').focus();
			document.getElementById("inqTabField").className="cHidden";
			disableenablecert(true);
			var ele=document.getElementById("certBody");
		} else {
			disableenablecert(false);
			document.getElementById("secDecText").className="cSmallLabel";
			document.getElementById("inqTabField").className="cVisible";
			bwADPNum=trim(result.brdSecurityNbr);
			rstrSecurityNbrValue=trim(result.rstrSecurityNbr);
			brdSecurityNbrValue=trim(result.brdSecurityNbr);
			if(sType=='C' && (result.cusip ==null || result.cusip=='') ) {
				bwCUSIP=sVal;
			} else {
				bwCUSIP=trim(result.cusip);
			}		
			bwSymbol=trim(result.symbol);
			
			if (multiCurrencyClient =='Y') {
			//bwCurrencyCd=result.currencyCd;
			checkCurrencyCd();
			} else if (trim(result.currencyCd).toUpperCase() != "U$") {
				getPriceInUSD();
			}
			
			if ((trim(result.chillDpstInd)!=null && trim(result.chillDpstInd) != ''?trim(result.chillDpstInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill DEPOSIT";
			//alert("chillDpstInd"+result.chillDpstInd);
			chkChillDepIndBlk="Y";
			}
			if ((trim(result.chillCodInd)!=null && trim(result.chillCodInd) != ''?trim(result.chillCodInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill COD";
			//alert("chillCodInd"+result.chillCodInd);
			}
			if ((trim(result.chillWtInd)!=null && trim(result.chillWtInd) != ''?trim(result.chillWtInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill WT";
			//alert("chillWtInd"+result.chillWtInd);
			}
			if ((trim(result.chillDoInd)!=null && trim(result.chillDoInd) != ''?trim(result.chillDoInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill DO";
			//alert("chillDoInd"+result.chillDoInd);
			}
			if ((trim(result.chillPledgeInd)!=null && trim(result.chillPledgeInd) != ''?trim(result.chillPledgeInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill PLEDGE";
			//alert("chillPledgeInd"+result.chillPledgeInd);
			}
			if ((trim(result.chillSgrtInd)!=null && trim(result.chillSgrtInd) != ''?trim(result.chillSgrtInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill SGRGT";
			//alert("chillDpstInd"+result.chillSgrtInd);
			}
			if ((trim(result.chillIntrDpst)!=null && trim(result.chillIntrDpst) != ''?trim(result.chillIntrDpst):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill INTR DPST";
			//alert("chillIntrDpst"+result.chillIntrDpst);
			}
			if ((trim(result.frznScrtyInd)!=null && trim(result.frznScrtyInd) != ''?trim(result.frznScrtyInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - FRZN SCRTY";
			//alert("frznScrtyInd"+result.frznScrtyInd);
			}
			if ( trim(chillIndValue) != '')
			{
			document.getElementById("recordDtText").innerHTML=chillIndValue;
			//alert("chillIndValue"+chillIndValue);
			}
			
			if(allowBondRegType=='Y' && sType=='C' && result.bondRegType !=null && trim(result.bondRegType) !='' ) {
				document.getElementById("bondRegTypeDiv").className="cVisible";
				populateBondRegTypes(trim(result.bondRegType));
			} else {
				document.getElementById("bondRegTypeDiv").className="cHidden";
			}
			if (result.bondRegType !=null && trim(result.bondRegType) !='')
			{
			bondTypePriceCheck='Y';
			}else
			{
			bondTypePriceCheck='N';
			}
			secPopData();	
			
			for(var i=0;i<=certrowId;i++)
			{
		$('#certSic'+i).attr('disabled',true);
		ofacCheckBySecurity(result.brdSecurityNbr,result.cusip,i,bracc);
			}
			
			// Focus the destination element only if it's not disabled
    		if(!document.getElementById('destination').disabled=="disabled") {
				document.getElementById('destination').focus();	
			}
			if(result.priceSecurityAmt==null || result.priceSecurityAmt==""){
				priceExistance=false;
				
			}else{
				priceExistance=true;
				
			}		
			
			if(isUpdateAllowed) {
			
		    secCheck(result.priceSecurityAmt);
			}
		}
		rstrIndCheck();
		$('#rstrIndChkBox').attr('disabled',false);
		if (chillIndVsDTCDstnCheck == 'Y') {
			chillVsDTCDstnCheck();
		}
	});
}

secCheck=function(newSecPrice){
var chillIndValue="";
	var priceConfirm=true;
	isSubDimedone=false;
	//alert(priceExistance + " - "+newSecPrice );
	if(subDimeCheckReqd == 'Y') {
		isSubDimedone=true;
		if(priceExistance && newSecPrice > priceThreshold ) {
			newSubDimeInd = 'N';
		} else {
			newSubDimeInd = 'Y';
			priceConfirm=confirm("Stock price is under $"+priceThreshold+" per share? Do you want to continue with the security change?");
		}
	}
	//alert("priceConfirm::"+priceConfirm);
	if(priceConfirm) {
	if(actionSubType=='dwacDrs')
	popDwacAmount();
	else
		updateAmtOnCusipChange();
		// show DSRQ questions and DSRQ Form only when it is configured for the client. Otherwise don't show.
		if(dsrqReqd == 'Y') {
		
			hideDiv("inquireForm",true);
			hideDiv("dsrqEligQuesDiv",false);
			showDsrqEligibilityQuestions();
		}
	} else {
		chkChillDepIndBlk="";
		isSubDimedone=false;
		bwADPNum=trim(document.getElementById("secNbr"+depositRId).innerHTML);
		bwCUSIP=trim(document.getElementById("cusip"+depositRId).innerHTML);
		bwSymbol=trim(document.getElementById("symbol"+depositRId).innerHTML);
		document.getElementById("secDecText").className="cSmallLabel";
		document.getElementById("secText").value=document.getElementById("cusip"+depositRId).innerHTML;
		var secTypetmp = "";
		var secValueTmp = "";
		if (trim(bwCUSIP) != '' && trim(bwCUSIP) != 'null') {
			dwr.util.setValue("secType","C");
			secTypetmp = 'C';
			secValueTmp = bwCUSIP;
		} else {
			dwr.util.setValue("secType","A");
			secTypetmp = 'A';
			secValueTmp = bwADPNum;
			document.getElementById("secText").value=document.getElementById("secNbr"+depositRId).innerHTML;
		}
		
		secCont.getSecDesc(secTypetmp,secValueTmp,function(result){
			document.getElementById("dtcEligInd").innerHTML=result.dtcEligInd;
			document.getElementById("dtcEligText").innerHTML=result.dtcEligText;
			document.getElementById("reorgText").innerHTML=result.reorgText;
			if (multiCurrencyClient =='Y') {
			//bwCurrencyCd=result.currencyCd;
			checkCurrencyCd();
			} else if (trim(result.currencyCd).toUpperCase() != "U$") {
				getPriceInUSD();
			}
			
			if (trim(result.addSecDescTxt1) != "" && trim(result.addSecDescTxt2) != "") {
				document.getElementById("secDecText").innerHTML=trim(result.securityDesc)+" "+trim(result.addSecDescTxt1)+" "+trim(result.addSecDescTxt2) + "  ";		
			} else if(trim(result.addSecDescTxt2) == "" && trim(result.addSecDescTxt1) != "")  {
				document.getElementById("secDecText").innerHTML=trim(result.securityDesc)+" "+trim(result.addSecDescTxt1)+ "  ";
			} else {
				document.getElementById("secDecText").innerHTML=trim(result.securityDesc)+ "  ";
			}
			rstrSecurityNbrValue=trim(result.rstrSecurityNbr);
			brdSecurityNbrValue=trim(result.brdSecurityNbr);
			bwADPNum=trim(result.brdSecurityNbr);

			document.getElementById("bondDecText").innerHTML=(trim(result.bondMaturityDt)!=null && trim(result.bondMaturityDt) != ''?" Maturity Dt : "+trim(result.bondMaturityDt):"");
			document.getElementById("recordDtText").innerHTML=(trim(result.recordDt)&& trim(result.recordDt) != ''?"Record Dt : "+trim(result.recordDt):"");
			//document.getElementById("secDecText").innerHTML=trim(result.securityDesc)+" ";
			if ((trim(result.chillDpstInd)!=null && trim(result.chillDpstInd) != ''?trim(result.chillDpstInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill DEPOSIT";
			//alert("chillDpstInd"+result.chillDpstInd);
			chkChillDepIndBlk="Y";
			}
			if ((trim(result.chillCodInd)!=null && trim(result.chillCodInd) != ''?trim(result.chillCodInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill COD";
			//alert("chillCodInd"+result.chillCodInd);
			}
			if ((trim(result.chillWtInd)!=null && trim(result.chillWtInd) != ''?trim(result.chillWtInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill WT";
			//alert("chillWtInd"+result.chillWtInd);
			}
			if ((trim(result.chillDoInd)!=null && trim(result.chillDoInd) != ''?trim(result.chillDoInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill DO";
			//alert("chillDoInd"+result.chillDoInd);
			}
			if ((trim(result.chillPledgeInd)!=null && trim(result.chillPledgeInd) != ''?trim(result.chillPledgeInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill PLEDGE";
			//alert("chillPledgeInd"+result.chillPledgeInd);
			}
			if ((trim(result.chillSgrtInd)!=null && trim(result.chillSgrtInd) != ''?trim(result.chillSgrtInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill SGRGT";
			//alert("chillDpstInd"+result.chillSgrtInd);
			}
			if ((trim(result.chillIntrDpst)!=null && trim(result.chillIntrDpst) != ''?trim(result.chillIntrDpst):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill INTR DPST";
			//alert("chillIntrDpst"+result.chillIntrDpst);
			}
			if ((trim(result.frznScrtyInd)!=null && trim(result.frznScrtyInd) != ''?trim(result.frznScrtyInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - FRZN SCRTY";
			//alert("frznScrtyInd"+result.frznScrtyInd);
			}
			if ( trim(chillIndValue) != '')
			{
			document.getElementById("recordDtText").innerHTML=chillIndValue;
			//alert("chillIndValue"+chillIndValue);
			}
			
			});

		document.getElementById("secDecText").innerHTML=document.getElementById("secDesc"+depositRId).innerHTML+" ";
		document.getElementById("price").innerHTML=document.getElementById("secPrice"+depositRId).innerHTML;
		
		priceOnly=priceVal();
		origAmount=document.getElementById("amount").value=document.getElementById("secAmount"+depositRId).innerHTML;
	}
	
}

showDsrqEligibilityQuestions=function(){
	secCont.getQuestions('DSRQ',function(data){
			dwr.util.removeAllRows("dsrqEligQuesBody");
			var count=0;
			var cellFuncs=[
			function(data){return "<label style=text-align:center>"+ count+"</label>";},
			function(data){return "<input type=hidden id=questCdHid"+data.rowId+" name=questCdHid"+data.rowId+" value='"+data.question_cd+"' /> <label style=text-align:left>"+data.question+"</label>";},
			function(data){return "<select id=questAns"+data.rowId+" name=questAns"+data.rowId+"><option value=''>Please Select</option><option value='Y'>Yes</option><option value='N'>No</option></select>";}];
			
			dwr.util.addRows("dsrqEligQuesBody",data ,cellFuncs , {
			rowCreator:function(options){
			var row=document.createElement("tr");
			if(options.rowIndex%2==0){
				row.className="even";
			}else{
				row.className="odd";
			}
			count++;
			row.id=options.rowIndex;
			return row;
			},
			cellCreator:function(options){
			options.escapeHtml=false;
			var cell=document.createElement('td');
			cell.align="center";
			return cell;
			},escapeHtml:false }						 
			 );
		});
		
}

validateDsrqAnswers=function(){
	
	var ansList = new Array();
	var ele=document.getElementById("dsrqEligQuesBody");
	
	for(var i=0; i < ele.rows.length; i++) {
		if( ele.rows[i].cells[2].firstChild.selectedIndex == 0) {
			alert("Please select the Answer for question "+ (i+1));
			ele.rows[i].cells[2].firstChild.focus();
			return false;
		}	
		ansList[i]=ele.rows[i].cells[2].firstChild.value ;
		}
		
	secCont.validateDsrqAnswers(ansList,function(result){
			//alert(result);
			if (result==null || result=='' || result=='N') {	
				hideDiv("dsrqEligQuesDiv",true);
				hideDiv("inquireForm",false);
			} else if(result=='Y'){
				hideDiv("questionDiv",false);
				hideDiv("dsrqEligQuesDiv",true);
				hideDiv("inquireForm",true);
				var questObj=window.open("questionnaire.jsp","quesWindow","scrollbars=1,resizable=1,menubar=1");
			} else {
				alert(result);
			}
		});
}

questDone=function(){
	hideDiv("questionDiv",true);
	hideDiv("inquireForm",false);
	isDSRQdone=true;
}


function populateBox(){
    var usr=userType;
    if(screenType!=null && trim(screenType)=='REPAIR_QUEUE')
    usr=usr+"~"+screenType;
	dwr.util.addOptions("destination",['Fetching, Please wait...']);
	secCont.getBoxes(usr,boxType,branchArray,function(data){
		dwr.util.removeAllOptions("destination");
		if(null==data){
			dwr.util.addOptions("destination",[{id:"",desc:'No Box Locations Found'}],'id','desc');
			document.getElementById('destination').options[0].style.backgroundColor="#FF9F9F";
		}else{
			dwr.util.addOptions("destination",[{id:"",desc:"--Please Select--"}],'id','desc');
			dwr.util.addOptions("destination",data,'id','desc');
		
		}});
}

function populateBoxesForBranches(branches) {
	if (branches != null) {
		branchArray = new Array();
		for(var i=0;i<branches.length;i++) {
			branchArray.push(branches[i]);	
		}
		populateBox();
	}
}

function populateBoxWithDes(des) {
	var usr=userType;
	if (usr == 'rb') {
		usr = 'op';
	} else if (usr == 'op') {
		usr = 'rb';
	}
    if(screenType!=null && trim(screenType)=='REPAIR_QUEUE')
    usr=usr+"~"+screenType;
	dwr.util.addOptions("destination",['Fetching, Please wait...']);
	secCont.getBoxes(usr,boxType,branchArray,function(data) {
		dwr.util.removeAllOptions("destination");
		if(null==data){
			dwr.util.addOptions("destination",[{id:"",desc:'No Box Locations Found'}],'id','desc');
			document.getElementById('destination').options[0].style.backgroundColor="#FF9F9F";
		}else{
			dwr.util.addOptions("destination",[{id:"",desc:"--Please Select--"}],'id','desc');
			dwr.util.addOptions("destination",data,'id','desc');
			dwr.util.setValue('destination',des);
		}});
}


accounStr=function(){
	var ele=document.getElementById("branch");
	var brval=ele.options[ele.selectedIndex].value;
	var acVal;
	if(branch250FuncEnbl=='Y' && brval=="250"){
		acVal=document.getElementById("account").value;
		ele=document.getElementById("250Acc");
		acVal=ele.options[ele.selectedIndex].value+acVal;
	}
	return acVal;
}

setAccounStr=function(accVal){
	if(branch250FuncEnbl=='Y' && dwr.util.getValue("branch")=="250"){
	dwr.util.setValue("account",accVal.substring(3));
	dwr.util.setValue("250Acc",accVal.substring(0,3));
	}else{
		dwr.util.setValue("account",accVal);
	}
}

branchSecCheck=function(){
}

pouchIdFieldChange=function() {
	if(getActualValue("pouchId") != null) {
		populateStatus(getActualValue("branch")); // All status
	} else {
		if(getActualValue("branch") == 'ALL') {
			populateStatusForBranchAll();
		} else {
			populateStatus(getActualValue("branch")); // All status
		}
	}
}

qtyOpChange=function() {
	document.getElementById("quantity").focus();
}

amtOpChange=function() {
	document.getElementById("amount").focus();
}


populateStatusForBranchAll=function(){
	
	dwr.util.removeAllOptions('statusCodes');
	if (actionSubType=="phyDsrq" || actionSubType=="dwacDsrq" || actionSubType=="mnsh" || actionSubType=="ofac" || actionSubType=="que" || actionSubType=="subDime"){
		dwr.util.addOptions("statusCodes",["HOLD"]);
	} else if (actionSubType=="trs" || actionSubType=="dlv" || actionSubType=="boxm" || actionSubType=="nyw" || actionType=="cancel") {
		dwr.util.addOptions("statusCodes",["TRANSIT"]);
	}  else if (actionType=="repair") {
		populateStatus("ALL");
		$('#statusCodes').attr('disabled',true);
	} else{
		populateStatus("ALL");
	}
	
}

populateStatus=function(brVal){
	
	dwr.util.addOptions("statusCodes",["Loading..."]);
	secCont.getStatuscodes(function(result){
		dwr.util.removeAllOptions('statusCodes');
		if(null==result){
			dwr.util.addOptions("statusCodes",["Not Loaded"]);
			document.getElementById('statusCodes').options[0].style.backgroundColor="#FF9F9F";
		}else{
			//dwr.util.addOptions("statusCodes",["Please Select"]);
			if(brVal !=null && brVal !='ALL') {
				dwr.util.addOptions("statusCodes",["ALL"]);
			}
			dwr.util.addOptions("statusCodes",result);
		}
	});
}

getReportType=function() {
	var repType="";
	if(userType=="ib" || userType=="op"|| userType=="rb") {
		if (actionType == 'history') {
			return "INQ-HISTORY";  
		} else if(actionSubType =="transinq"){
			return "INQ-TRANS";
		}else {
			return repType;  	
		}
	} else {
		switch(actionSubType) {
			case "phyDsrq": 	repType="INQ-PHY-DSRQ";
								break;
			case "dwacDsrq": 	repType="INQ-DD-DSRQ";
								break;
			case "mnsh": 		repType="INQ-MNSH";
								break;
			case "ofac": 		repType="INQ-OFAC";
								break;
			case "que": 		repType="INQ-QUE";
								break;
			case "subDime": 	repType="INQ-SUB-DIME";
								break;
			case "dlv": 		repType="DLV-CLEANUP";
								break;
			case "trs": 		repType="TRF-CLEANUP";
								break;
			case "boxm": 		repType="BOXM-CLEANUP";
								break;
			case "nyw": 		repType="NYW-CLEANUP";
								break;
			 case "transinq": 	repType="INQ-TRANS";
								break; 
		}
	}
	return repType;
}


getReqById=function(){
//alert(" GET REQ BY ID 1");
	hideDiv("certfs",true);hideDiv("updButDiv",true);
	reportType=getReportType();
	var reqId=document.getElementById("spsIdFromNew").value;
	spsId=reqId;
	//alert("Request Id:"+reqId);
	//From the 'repair Queue transactions page' this page will get called for specific spsId
	navigation();
	if(reqId!=null  && trim(reqId)!=""){  
		//alert("GET REQ BY ID 2");
		hideDiv("inquireBut", true); //hide the Search button 
		inqObj={spsId:reqId,branch:'ALL',account:null,accTypeCd:null,accDesc:null,security:null,secType:null,secDesc:null,secPrice:null,dest:null,pouchId:null,status:'ALL',amount:null,amtOp:null,quantity:null,qtyOp:null,creationDate:null};
		//alert("inqObj->"+inqObj+"; userType->"+userType+"; reportType->"+reportType+"; startRow->"+startRow+"; endRow->"+endRow);
		secCont.getInquireRequests(inqObj, userType,reportType,startRow,endRow,function(data){
		//secCont.getInquireRequests(inqObj, userType,reportType,0,20,function(data){
			dwr.util.removeAllRows("inqBody");
			//alert("Checking1");
			hideDiv("depositfs",false);
			if(null==data || data[0]==null || data[1]=="0" ){
				document.getElementById("inProgMsg").className = 'cHidden';
				if(data[1]=="0" || data[1]==null || data[0]==null) {
					navDisplay(0);
					alert("No Data Found");
					totalRecords=0;
					
				}
				return false;
				//recordsFound('NoRecsFound','RecsFound',true);
			} else {
		//	alert("INQUIRE CERTS 9");
		//alert("Checking2");
				populateRequests(data[0]);
				
				 totalRecords=data[1];
				 navDisplay(pgNbr);
			}
				
		});
	}
}
///very initial call by search
inquireCertsSubmit=function(){
pgNbr=1;
inquireCerts(false,true);

}

inquireCerts=function(needPrevious,noDataFoundMsg){
	disableButtons();
	//alert("INQUIRE CERTS");
	//inqObj={pouchId:getActualValue("pouchId"),branch:'ALL',account:null,accDesc:null,security:null,secType:null,secDesc:null,secPrice:null,dest:null,status:'ALL',amount:null,amtOp:null,quantity:null,qtyOp:null,creationDate:null};
	document.getElementById("branch").readOnly=false;
	document.getElementById("account").readOnly=false;		
	document.getElementById("secText").readOnly=false;
	navigation();
	var currTypeValue=null;
	if (multiCurrencyClient =='Y') {
	currTypeValue=getActualValue("currencyCode");
	//alert ("currTypeValue"+currTypeValue);
	}
	if(!needPrevious){
		if(getActualValue("pouchId") != null ) {
		//alert("INQUIRE CERTS 1");
			inqObj={branch:null,spsId:getActualValue("vpsId"), pouchId:getActualValue("pouchId"), account:accounStr(),accTypeCd:getActualValue("accountTypeCd"),security:getActualValue("secText"),secType:getActualValue("secType"),secDesc:trim(unescapeHTML(getActualValue("secDecText"))),secPrice:getActualValue("price"),dest:getActualValue("destination"),status:getActualValue("statusCodes"),amount:getActualValue("amount"),amtOp:getActualValue("amtOp"),quantity:getActualValue("quantity"),qtyOp:getActualValue("quantOp"),creationDate:getActualValue("cdate"),dtcEligInd:getActualValue("dtcEligInd"),dtcEligText:getActualValue("dtcEligText"),reorgText:getActualValue("reorgText"),altBranch:getActualValue("altbranchtxt"),iraAccountInd:getActualValue("iraAcctDesc"),currType:currTypeValue,daysAgedOp:getActualValue("daysAgedOp"),daysAged:getActualValue("daysAged"),sortOrder:sortOrder,sortColumn:sortColumn};
		} else {
			//alert("INQUIRE CERTS 2");
			inqObj={branch:getActualValue("branch"),spsId:getActualValue("vpsId"), pouchId:null, account:accounStr(),accTypeCd:getActualValue("accountTypeCd"),accDesc:getActualValue("accDesc"),security:getActualValue("secText"),secType:getActualValue("secType"),secDesc:trim(unescapeHTML(getActualValue("secDecText"))),secPrice:getActualValue("price"),dest:getActualValue("destination"),status:getActualValue("statusCodes"),amount:getActualValue("amount"),amtOp:getActualValue("amtOp"),quantity:getActualValue("quantity"),qtyOp:getActualValue("quantOp"),creationDate:getActualValue("cdate"),dtcEligInd:getActualValue("dtcEligInd"),dtcEligText:getActualValue("dtcEligText"),reorgText:getActualValue("reorgText"),altBranch:getActualValue("altbranchtxt"),iraAccountInd:getActualValue("iraAcctDesc"),currType:currTypeValue,daysAgedOp:getActualValue("daysAgedOp"),daysAged:getActualValue("daysAged"),sortOrder:sortOrder,sortColumn:sortColumn};	
		} 
	}
		//alert("INQUIRE CERTS 3");
	hideDiv("certfs",true);hideDiv("updButDiv",true);
	reportType=getReportType();  
		//alert("INQUIRE CERTS 4");
	if(inqObj.dest==null && (actionSubType=="dwacDrs" || actionSubType=="dwacDsrq") ) {
		inqObj.dest="DWAC_DRS";  
		
	
	}
   
	
	document.getElementById("inProgMsg").className = 'cErrors';
	navigation();
	hideDiv("inquireBut",true);
	dwr.engine.beginBatch();
	var uType = '';
	if ((isFAUsr!=null && isFAUsr=='true')) {
		    uType = 'FA';
		} else if ((isOpsUser!=null && isOpsUser=='true')) {
			uType = 'OPS';
		} else if ((branchUser!=null && branchUser=='true')) {
			uType = 'BR';
		}
	//	alert(' after uType User '+uType);
	secCont.getInquireRequests(inqObj,userType,reportType,startRow,endRow,uType,function(data){
	//alert("INQUIRE CERTS 6");
			dwr.util.removeAllRows("inqBody");
			//	alert("INQUIRE CERTS 7");
			hideDiv("depositfs",false);
			//	alert("INQUIRE CERTS 8");
			
			if(null==data || data[0]==null || data[1]=="0" ){
				document.getElementById("inProgMsg").className = 'cHidden';
				if(noDataFoundMsg || data[0]==null || data[0].size==0 || data[1]=="0" || data[1]==null ) {
					alert("No Data Found");
					totalRecords=0;
					navDisplay(0);
				}
				hideDiv("inquireBut",false);
				return false;
				//recordsFound('NoRecsFound','RecsFound',true);
				
			} else {
				populateRequests(data[0]);
				
				 totalRecords=data[1];
				 //show sorting
				if (totalRecords > pageSize) {
					hideshowSortSymbols(true);
				} else {
					hideshowSortSymbols(false);
				}
				 navDisplay(pgNbr);
			}
			hideDiv("inquireBut",false);
		});
		
	dwr.engine.endBatch();
	
	
}


populateRequests=function(data){
	var destValue = document.getElementById('destination').value;	
	if(allowDWACCommentsInq=="Y" && userType=="op" && actionSubType=="dwacDrs" && (destValue=="DWAC" || trim(destValue)=="")){
		$("#inquiredCerts").remove();
		$("#inqHeader").remove();
		$("#inqBody").remove();
		var table ="<table id='inquiredCerts' name='inquiredCertsNew' class='sortable;ui-widget-content' width='100%' border='0' cellspacing='1' cellpadding='1'>";
	var someRow= table + "<thead  class='cGrid ui-widget-header' id='inqHeader'><tr id='RecsFound' name='RecsFound'><td align='center'>VPS ID</td><td align='center' >Branch</td><td align='center' >Account</td><td align='center' >Security</td><td align='center' ><strong>Destination</strong></td><td align='center' >Quantity</td><td align='center' >Amount</td><td align='center' >CUSIP</td><td align='center' >Symbol</td><td align='center' >Comments</td><td align='center' >DWAC Control Number</td><td align='center' >Msg Type</td><td align='center' >Status</td><td align='center' >Days Aged</td><td align='center' >Create Dt</td><td align='center' >Update Dt</td><td align='center' class='ui-button' id='acceptTd'></td></tr></thead><tbody id='inqBody' name='inqBody' class='cGrid'></tbody>";
	 $("#depositDiv").append(someRow);
	}else if(allowDWACCommentsInq=="Y" && userType=="op" && actionSubType=="dwacDrs" && destValue=="DRS"){
		$("#inquiredCerts").remove();
		$("#inqHeader").remove();
		$("#inqBody").remove();
		var table ="<table id='inquiredCerts' name='inquiredCertsNew' class='sortable;ui-widget-content' width='100%' border='0' cellspacing='1' cellpadding='1'>";
	var someRow= table + "<thead  class='cGrid ui-widget-header' id='inqHeader'><tr id='RecsFound' name='RecsFound'><td align='center'>VPS ID</td><td align='center' >Branch</td><td align='center' >Account</td><td align='center' >Security</td><td align='center' ><strong>Destination</strong></td><td align='center' >Quantity</td><td align='center' >Amount</td><td align='center' >CUSIP</td><td align='center' >Symbol</td><td align='center' >Msg Type</td><td align='center' >Status</td><td align='center' >Days Aged</td><td align='center' >Create Dt</td><td align='center' >Update Dt</td><td align='center' class='ui-button' id='acceptTd'></td></tr></thead><tbody id='inqBody' name='inqBody' class='cGrid'></tbody>";
	 $("#depositDiv").append(someRow);
	}
	sortables_init(); 
 	
	
	//alert("HI POPULATE REQUESTS");
	//alert("User - "+userType+" "+actionType+" "+actionSubType);
	
	if(allowContactTab == 'Y' && actionSubType=='transinq') {
		//$("input[name=confirmInd][value=" + data[rowId].confirmInd + "]").attr('checked', 'checked');
		// $('input[name="' + name+ '"][value="' + SelectdValue + '"]').prop('checked', true);
		$("#confirmIndDev").show();
	}else{
		$("#confirmIndDev").hide();
	}

	if ((userType=="op" && actionType=='inquire' && (actionSubType!="dwacDrs" && actionSubType!="transinq"))||(userType=="rb" && actionType=='inquire' && actionSubType!="dwacDrs") || (userType=="sp" && actionType=="inquire")) 
	{
		
	//alert("1");	
		document.getElementById("receiveTd").innerHTML="Receive<input type=checkBox name=rcvAllChkBox id=rcvAllChkBox  onClick='checkReceiveAll();'/>";
	//alert("2");	
	} else if ((userType=="op" && actionSubType=="dwacDrs" )||(userType=="rb" && actionSubType=="dwacDrs" )) {
	
	
		document.getElementById("acceptTd").innerHTML="Accept<input type=checkBox name=acptAllChkBox id=acptAllChkBox  onClick='checkAcptAll();'/>";
	} 
	else if (userType=="margin" && actionSubType=="dwacDrs" ) {
	
	//alert("Margin block");
		document.getElementById("acceptTd").innerHTML="Margin Accept<input type=checkBox name=acptAllChkBox id=acptAllChkBox  onClick='checkAcptAll();'/>";
	} 
	//alert("HIHI");
	var cellFuncs=[
	function(data){return "<label class=cVisible name=spsid"+data.rowId+" id=spsid"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.spsId+" </label>";
},
	
	function(data){return "<label class=cVisible name=branch"+data.rowId+" id=branch"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.branch+" </label>";},
	function(data){return "<label class=cVisible name=account"+data.rowId+" id=account"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.account+"</label>";},
	function(data){return "<label class=cVisible name=secNbr"+data.rowId+" id=secNbr"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.security+" </label>";}];
	if (actionSubType=="boxm") {
		cellFuncs[cellFuncs.length]=function(data){return "<label class=cVisible name=fromLoc"+data.rowId+" id=fromLoc"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.fromLoc+" </label>";}
	}
	cellFuncs[cellFuncs.length]=function(data){return "<label class=cVisible name=dest"+data.rowId+" id=dest"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.dest+" </label> <label class=cHidden style=display:none id=destType"+data.rowId+"  name=destType"+data.rowId+" >"+data.destType+"</label>";}
	cellFuncs[cellFuncs.length]=function(data){

	return "<label class=cVisible name=quantity"+data.rowId+" id=quantity"+data.rowId+" style=text-align:right onClick=depositClick(event,"+data.rowId+");>"+data.quantity+" </label>";
	}
	cellFuncs[cellFuncs.length]=function(data){return "<label class=cVisible name=secAmount"+data.rowId+" id=secAmount"+data.rowId+" style=text-align:right onClick=depositClick(event,"+data.rowId+");>"+"$"+data.secAmount+" </label>";}
	cellFuncs[cellFuncs.length]=function(data){return "<label class=cVisible name=cusip"+data.rowId+" id=cusip"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.cusip+" </label> <label class=cHidden style=display:none id=secPrice"+data.rowId+"  name=secPrice"+data.rowId+" >"+data.secPrice+"</label><label class=cHidden style=display:none id=secDesc"+data.rowId+"  name=secDesc"+data.rowId+" >"+data.secDesc+"</label>";}
	cellFuncs[cellFuncs.length]=function(data){return "<label class=cVisible name=symbol"+data.rowId+" id=symbol"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.symbol+" </label>";}
	
	if(allowDWACCommentsInq=="Y" && userType=="op" && actionSubType=="dwacDrs" && destValue!="DRS"){
		hideDiv("commentsTh",false);
		hideDiv("rcvcustacctnbrTh",false);
		cellFuncs[cellFuncs.length]=function(data){return "<label class=cVisible name=comments"+data.rowId+" id=comments"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.comments+" </label>";}
		cellFuncs[cellFuncs.length]=function(data){return "<label class=cVisible name=rcvCustAcctNbr"+data.rowId+" id=rcvCustAcctNbr"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.rcvCustAcctNbr+" </label>";}
	}else if(allowDWACCommentsInq=="Y" && userType=="op" && actionSubType=="dwacDrs" && destValue=="DRS"){
	    hideDiv("commentsTh",true);
	    hideDiv("rcvcustacctnbrTh",true);
	}
	
	cellFuncs[cellFuncs.length]=function(data){return "<label class=cVisible name=msgType"+data.rowId+" id=msgType"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.msgType+" </label><label class=cHidden style=display:none id=negotiableIndHid"+data.rowId+"  name=negotiableIndHid"+data.rowId+" >"+data.negotiable+"</label> <label class=cHidden style=display:none id=deliverToBranchHid"+data.rowId+"  name=deliverToBranchHid"+data.rowId+" >"+data.deliverToBranch+"</label>  <label class=cHidden style=display:none id=accTypeCdHid"+data.rowId+"  name=accTypeCdHid"+data.rowId+" >"+data.accTypeCd+"</label>    <label class=cHidden style=display:none id=roleTypeCdHid"+data.rowId+"  name=roleTypeCdHid"+data.rowId+" >"+data.roleTypeCd+"</label><label class=cHidden style=display:none id=bearerIndHid"+data.rowId+"  name=bearerIndHid"+data.rowId+" >"+data.bearerInd+"</label><label class=cHidden style=display:none id=currencyHid"+data.rowId+"  name=currencyHid"+data.rowId+" >"+data.currency+"</label><label class=cHidden style=display:none id=bkpgCurrencyHid"+data.rowId+"  name=bkpgCurrencyHid"+data.rowId+" >"+data.bkpgCurrency+"</label><label class=cHidden style=display:none id=suspenseIndHid"+data.rowId+"  name=suspenseIndHid"+data.rowId+" >"+data.suspenseInd+"</label><label class=cHidden style=display:none id=bondRegTypeHid"+data.rowId+"  name=bondRegTypeHid"+data.rowId+" >"+data.bondRegType+"</label><label class=cHidden style=display:none id=giftInhIndHid"+data.rowId+"  name=giftInhIndHid"+data.rowId+" >"+data.giftInhInd+"</label><label class=cHidden style=display:none id=restrcitedStockIndHid"+data.rowId+"  name=restrcitedStockIndHid"+data.rowId+" >"+data.restrictedStockInd+"</label><label class=cHidden style=display:none id=frozenAccTypeHid"+data.rowId+"  name=frozenAccTypeHid"+data.rowId+" >"+data.frozenAccType+"</label><label class=cHidden style=display:none id=confirmIndHid"+data.rowId+"  name=confirmIndHid"+data.rowId+" >"+data.confirmInd+"</label>";}
	cellFuncs[cellFuncs.length]=function(data){return "<label class=cVisible name=status"+data.rowId+" id=status"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.status+" </label><label class=cHidden style=display:none id=docEventCdHid"+data.rowId+"  name=docEventCdHid"+data.rowId+" >"+data.docEventCd+"</label><label class=cHidden style=display:none id=guiLockInd"+data.rowId+"  name=guiLockInd"+data.rowId+" >"+data.guiLockInd+"</label><label class=cHidden style=display:none id=dsrqInd"+data.rowId+"  name=dsrqInd"+data.rowId+" >"+data.dsrqInd+"</label><label class=cHidden style=display:none id=subDimeInd"+data.rowId+"  name=subDimeInd"+data.rowId+" >"+data.subDimeInd+"</label><label class=cHidden style=display:none id=restrictedInd"+data.rowId+"  name=restrictedInd"+data.rowId+" >"+data.restrictedInd+"</label><label class=cHidden style=display:none id=itemReceiveInd"+data.rowId+"  name=itemReceiveInd"+data.rowId+" >"+data.itemReceiveInd+"</label><label class=cHidden style=display:none id=inOutInd"+data.rowId+"  name=inOutInd"+data.rowId+" >"+data.inOutInd+"</label><label class=cHidden style=display:none id=canEligInd"+data.rowId+"  name=canEligInd"+data.rowId+" >"+data.canEligInd+"</label> <label class=cHidden style=display:none id=locMovId"+data.rowId+"  name=locMovId"+data.rowId+" >"+data.locMovId+"</label> <label class=cHidden style=display:none id=altBranchCdHid"+data.rowId+"  name=altBranchCdHid"+data.rowId+" >"+data.altBranch+"</label> <label class=cHidden style=display:none id=dtcByPassIndHid"+data.rowId+"  name=dtcByPassIndHid"+data.rowId+" >"+data.byPassToDTC+"</label>";}
	
	cellFuncs[cellFuncs.length]=function(data){return "<label class=cVisible name=agedDays"+data.rowId+" id=agedDays"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.agedDays+" </label>";}
	cellFuncs[cellFuncs.length]=function(data){return "<label name=createDate"+data.rowId+" id=createDate"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.createDate+" </label>";}
	cellFuncs[cellFuncs.length]=function(data){return "<label class=cVisible name=udate"+data.rowId+" id=udate"+data.rowId+" onClick=depositClick(event,"+data.rowId+");>"+data.udate+" </label>";}
	if((userType=="op" && actionType=='inquire' && (actionSubType!="dwacDrs" && actionSubType!="transinq"))||((userType=="rb" && actionType=='inquire' && actionSubType!="dwacDrs")) || (userType=="sp" && actionType=="inquire")) {
		cellFuncs[cellFuncs.length]=function(data){return "<input type='checkbox' class=cLabel name=rcvChkBox"+data.rowId+" id=rcvChkBox"+data.rowId+" value='' />";}
	
	} else if( (userType=="op" && actionSubType=="dwacDrs")||(userType=="rb" && actionSubType=="dwacDrs") ) {
		cellFuncs[cellFuncs.length]=function(data){return "<input type='checkbox' class=cLabel name=acptChkBox"+data.rowId+" id=acptChkBox"+data.rowId+" value='' />";}
	}else if( userType=="margin" && actionSubType=="dwacDrs" ) {
		cellFuncs[cellFuncs.length]=function(data){return "<input type='checkbox' class=cLabel name=acptChkBox"+data.rowId+" id=acptChkBox"+data.rowId+" value='' /><label class=cHidden style=display:none id=createdUsrId"+data.rowId+"  name=createdUsrId"+data.rowId+" >"+data.createdUsrId+"</label><label class=cHidden style=display:none id=lastUpdatedUsrId"+data.rowId+"  name=lastUpdatedUsrId"+data.rowId+" >"+data.lastUpdatedUsrId+"</label>";}//Created user id is Added as part of Metis#5324197
	}
	dwr.util.addRows("inqBody",data ,cellFuncs , {
		rowCreator:function(options){
			var row=document.createElement("tr");
			var inqrLen=document.getElementById('inqBody').rows.length;
			if(inqrLen%2==0){
				row.className="even";
			}else{
				row.className="odd";
			}
			row.id=options.rowIndex;
			return row;
		},
	
		cellCreator:function(options){
			options.escapeHtml=false;
			var cell=document.createElement('td');
			cell.align="center";
			return cell;
			},escapeHtml:false 
	});	 
	//alert("check HERE");
	if((userType=="op" && actionType=='inquire' && (actionSubType!="dwacDrs" && actionSubType!="transinq"))||(userType=="rb" && actionType=='inquire' && actionSubType!="dwacDrs")) {
		//dwr.util.setValue("dtcByPassInd", getActualValue("dtcByPassInd0"));
		var ele=document.getElementById('inqBody');	
		for(var rc=0; rc < ele.rows.length; rc++) {
			if(getActualValue("status"+rc) != "INITIAL") {
				document.getElementById("rcvChkBox"+rc).className="cHidden";
			}
		}
	}
	
	
	if(ubsInd=="Y"){
		if((userType=="op" && actionSubType=="dwacDrs")||(userType=="rb" && actionSubType=="dwacDrs")||(userType=="margin" && actionSubType=="dwacDrs")) {
			var ele=document.getElementById('inqBody');	
			for(var rc=0; rc < ele.rows.length; rc++) {
			
				if (getActualValue("status"+rc) == "INITIAL") {
					
					if ( (userType=="op" && getActualValue("inOutInd"+rc) == 'I')||(userType=="rb" && getActualValue("inOutInd"+rc) == 'I') || (userType=="margin" && getActualValue("inOutInd"+rc) == 'O') || (userType=="margin" && getActualValue("inOutInd"+rc) == 'I') ) {
					//alert("I AM HERE 111");
						if(userType=="margin" && (logonUsrId==getActualValue("lastUpdatedUsrId"+rc)))//Added as part of Metis#5324197
							document.getElementById("acptChkBox"+rc).className="cHidden";
						else if(userType=="op")//Added as part of Metis# on 08-Nov-21 Starts here
							document.getElementById("acptChkBox"+rc).className="cHidden";
					} else {
					//alert("HERE I AM 111");
						document.getElementById("acptChkBox"+rc).className="cHidden";
					}			
				} else {
					document.getElementById("acptChkBox"+rc).className="cHidden";
				}
			}
		}
		
	}else{
	
	
	if((userType=="op" && actionSubType=="dwacDrs")||(userType=="rb" && actionSubType=="dwacDrs")||(userType=="margin" && actionSubType=="dwacDrs")) {
		var ele=document.getElementById('inqBody');	
		for(var rc=0; rc < ele.rows.length; rc++) {
		
			if (getActualValue("status"+rc) == "INITIAL") {
				
				if ( (userType=="op" && getActualValue("inOutInd"+rc) == 'I')||(userType=="rb" && getActualValue("inOutInd"+rc) == 'I') || (userType=="margin" && getActualValue("inOutInd"+rc) == 'O') ) {
				//alert("I AM HERE 222");
					// we need to show the checkbox
				} else {
				//alert("HERE I AM 222");
					document.getElementById("acptChkBox"+rc).className="cHidden";
				}			
			} else {
				document.getElementById("acptChkBox"+rc).className="cHidden";
			}
		}
	}
	}
	if(userType=="sp" && actionType=="inquire") {
		var ele=document.getElementById('inqBody');	
		for(var rc=0; rc < ele.rows.length; rc++) {
			if(getActualValue("itemReceiveInd"+rc) != 'Y') {
				document.getElementById("rcvChkBox"+rc).className="cHidden";
			}
		}
	}
	
 	if((userType=="op" && actionType=='inquire' && actionSubType!='dwacDrs')){
		document.getElementById("dtcByPassDiv").className="cVisible";
		//document.getElementById("bkpgByPassDiv").className="cVisible";
		
	}else{
		document.getElementById("dtcByPassDiv").className="cHidden";
		//document.getElementById("bkpgByPassDiv").className="cHidden";
	} 

	bearerChange();
	document.getElementById("inProgMsg").className = 'cHidden';
}

checkReceiveAll=function(checkType){
	var ele=document.getElementById('inqBody');
	
	if(document.getElementById('rcvAllChkBox').checked){
		for(var i=0;i<ele.rows.length;i++){
			if(userType=="op"|| userType=="rb" ) {
				document.getElementById("rcvChkBox"+i).checked = true;
			}
		}

	}else{
		for(var i=0;i<ele.rows.length;i++){
			if(userType=="op" || userType=="rb") {
				document.getElementById("rcvChkBox"+i).checked=false;
			}
		}
	}
}

checkAcptAll=function(checkType){
	var ele=document.getElementById('inqBody');
	
	if(document.getElementById('acptAllChkBox').checked){
		for(var i=0;i<ele.rows.length;i++){
			document.getElementById("acptChkBox"+i).checked=true;
		}

	}else{
		for(var i=0;i<ele.rows.length;i++){
			document.getElementById("acptChkBox"+i).checked=false;
		}
	}
}




depositClick=function(e,i){
labelchg();
var value=$('#account'+i).html();
var acctval=value;
var frozenAccVal = $('#frozenAccTypeHid'+i).html();
frozenAccOldVal = frozenAccVal;
$('#account').val(value);
msgType = $('#msgType'+i).html();
var branchval=$('#branch'+i).html();
$('#branch').val(branchval);

if(allowContactTab == 'Y' && actionSubType=='transinq') {
	var selectedRadioval = getActualValue("confirmIndHid"+i);
	if(selectedRadioval!=undefined && selectedRadioval!=null && trim(selectedRadioval)!=""){
		$("input[name=confirmInd][value=" + selectedRadioval + "]").prop('checked', 'checked');
	}else{
		$('input[name=confirmInd]').prop('checked',false);
	}
}
	setRequestedSpsid(e);
	
	// Allow update button for IB only when the deposit status is in 'INITIAL'.
	if (userType=='ib' || userType=='cbibinq') {
	//alert("IB");
	// Disable the deliver to branch drop down for branch users(cibc and ib)
		if(allowDeliverToBranchDisable=="Y") {
			$('#deliverToBranch').attr('disabled',true);
		}
		
		if (getActualValue("status"+depositRId)=='INITIAL') {
			hideDiv("ibUpdButton",false);
			hideDiv("ibubsUpdButton",true);
			isUpdateAllowed=true;
			if(allowIBDelCerts=='Y') {
				//document.getElementById("dlvCertThDiv").className="cVisible";  don't allow delivery for ib
				document.getElementById("delCertThDiv").className="cVisible";
				document.getElementById("newCertButDiv").className="cVisible";
			} 
		} else {
			if (userType=='cbibinq') {
				hideDiv("ibUpdButton",false);
			} else {
				hideDiv("ibUpdButton",true);
				
				hideDiv("ibubsUpdButton",false);
			}
			
			if(allowShippedDtind=='Y'){
				hideDiv("ibubsUpdButton",false);
				//hideDiv("ibUpdButton",true);
			}
			var tempMsgType = getActualValue("msgType"+depositRId);
			dlvMsgType = tempMsgType;
			newCIBCBox=getActualValue("dest"+depositRId);
			if (showUpdateButton != null && showUpdateButton == 'Y' && userType == 'ib' && tempMsgType != null && tempMsgType == 'DLV' && getActualValue("status"+depositRId)=='TRANSIT') {
				hideDiv("ibUpdButton",false);
			}
			document.getElementById("newCommentDiv").className="cHidden";
			//reset if del/del buttons have allowed
			if(allowIBDelCerts=='Y') {
				//document.getElementById("dlvCertThDiv").className="cHidden";
				document.getElementById("delCertThDiv").className="cHidden";
				document.getElementById("newCertButDiv").className="cHidden";		
			} 
		}
	}
	
	
	var reqEle=document.getElementById("docBody");
	for(var i=0;i<reqEle.rows.length;i++){
		if(allowShippedDtind=='Y'){
			 reqEle.rows[i].cells[1].firstChild.disable=true;
			//document.getElementById("docCheckBox"+i).disabled=true;
		}else{
			 reqEle.rows[i].cells[1].firstChild.disable=false;
			//document.getElementById("docCheckBox"+i).disabled=false;
		}
		
	} 
	
	
	
	document.getElementById("currencyCode").disabled=true;
	
	if(allowBondRegType=='Y' && getActualValue("bondRegTypeHid"+depositRId) !=null && getActualValue("bondRegTypeHid"+depositRId) !='' ) {
		document.getElementById("bondRegTypeDiv").className="cVisible";
		dwr.util.setValue("bondRegType", getActualValue("bondRegTypeHid"+depositRId) );
		bondTypePriceCheck='Y';
	} else {
		document.getElementById("bondRegTypeDiv").className="cHidden";
		bondTypePriceCheck='N';
	}
/*	if (allowBondRegType=='Y' result.bondRegType !=null && trim(result.bondRegType) !='')
	{
	bondTypePriceCheck='Y';
	
	}else
	{
		bondTypePriceCheck='N';
		}
		*/
	statusVal=trim(document.getElementById("status"+depositRId).innerHTML);
	msgTypeVal=trim(document.getElementById("msgType"+depositRId).innerHTML);
	if((userType=='op' && actionType=='inquire' && actionSubType!='dwacDrs')||(userType=='rb' && actionType=='inquire' && actionSubType!='dwacDrs')) {	
		if (hideDeliveryCoverLetterButton != "Y" && statusVal=='TRANSIT' && msgTypeVal=='DLV') {
			hideDiv("printDlvCoverBut",false);
		} else {
			hideDiv("printDlvCoverBut",true);
		}	
		
		if(document.getElementById("destType"+depositRId).innerHTML=='D' && trim(document.getElementById("dest"+depositRId).innerHTML) !='FBOX' && statusVal !='COMPLETE-DAMP') {
			hideDiv("printDtcCoverBut",false); 
		} else {
			hideDiv("printDtcCoverBut",true);  //Hide the DTC cover letter button for non DTC destinations
		}
	}
	
	isBoxmEligOnHold = false;
	if((userType=='op'||userType=='rb') && actionType=='inquire') {
		if(document.getElementById("guiLockInd"+depositRId).innerHTML=='Y') {
			// Allowing the BOXM on HOLD items is configurable by cleint. Also, it is allowed to specific destinations only.
			if(getActualValue("status"+depositRId) == 'HOLD' && allowBoxmOnHold == 'Y' ) {
				isBoxmEligOnHold = true;
				
				document.getElementById("guiMsgLabel").innerHTML="Deposit is on Hold - No changes can be done at this time, EXCEPT BOX MOVEMENT";
				boxType="HOLD";
				
				populateBox();
				
			} else if(statusVal!="CANCEL") {
			//alert("CANCEL");
				//userType="ib";
				if (actionSubType =='dwacDrs') {
					hideDiv("acptButton",true);
					hideDiv("rejButton",true);
					hideDiv("dtcAcptButton",true);
					commentsTabReqd='Y';
					isUpdateAllowed=false;
					subDimeCheckReqd=false;
					hideDiv("updButton",true);	
				} else {
					hideDiv("updButton",true);			
				}				
				if(getActualValue("status"+depositRId) == 'HOLD') {
					document.getElementById("guiMsgLabel").innerHTML="Deposit is on Hold - No changes can be done at this time.";
				} else {
					document.getElementById("guiMsgLabel").innerHTML="Deposit is in Transit- No changes can be done at this time.";
				}
			}
			// don't allow changes to certificates	
			if(allowDeliveryChkBoxInquire=="Y"){
			document.getElementById("dlvCertThDiv").className="cHidden";
				document.getElementById("deliverChkBox").disabled="disabled";
				}
			document.getElementById("delCertThDiv").className="cHidden";
			document.getElementById("newCertButDiv").className="cHidden";
		
			//document.getElementById("addnewBut").disabled="disabled";
			
		} else {
			if (actionSubType =='dwacDrs') {
			//alert("HI HI");
				hideDiv("acptButton",false);
				//alert("REJECT BUTTON");
				hideDiv("rejButton",false);
				hideDiv("dtcAcptButton", !(allowDwacDrsDtcSuccess=="Y"));
				commentsTabReqd='Y';
				subDimeCheckReqd=false;
				//alert("Hello");
				//hideDiv("updButton",false);
				isUpdateAllowed=false;
				//dsrqReqd='Y';	
			} else {
			
				hideDiv("updButton",false);
				isUpdateAllowed=true;
				if(allowDeliveryChkBoxInquire=="Y"){
				document.getElementById("dlvCertThDiv").className="cVisible";
				
				document.getElementById("deliverChkBox").disabled=false;
				}
				//document.getElementById("guiMsgLabel").innerHTML="";
				// Allow delete and add only in Initial or Receive state
				if(statusVal =='INITIAL' || statusVal =='RECEIVE') {  
				
					document.getElementById("delCertThDiv").className="cVisible";
					document.getElementById("newCertButDiv").className="cVisible";
				} else {  	
				   
					document.getElementById("delCertThDiv").className="cHidden";
					document.getElementById("newCertButDiv").className="cHidden";
				}	
			}
			
		}
	}
	
	
	
	if((userType=="ib" && actionSubType=="dwacDrs")||(userType=="op" && actionSubType=="dwacDrs")||(userType=="margin" && actionSubType=="dwacDrs")) {
			var isUbsUser = document.getElementById("isUbsUser").value;
			if(isUbsUser!=null && isUbsUser == 'Y') { 
				hideDiv("printRepBut",true);	
			} else { 
				hideDiv("printRepBut",false);
			}
		
	}
	if((userType=='op'|| userType=='ib') && actionType=='inquire'){
		//var faUsr=document.getElementById('faUser').value;
			if(isFAUsr!=null && isFAUsr=='true'){
				hideDiv("tab4",true);
		   		hideDiv("tab5",true);
		   		hideDiv("tab7",true);
			}else{
				hideDiv("tab4",false);
		   		hideDiv("tab5",false);
		   		hideDiv("tab7",false);
			}
		}
	if((userType=="op" && actionSubType=="dwacDrs")||(userType=="rb" && actionSubType=="dwacDrs")||(userType=="margin" && actionSubType=="dwacDrs")) {
	//alert(userType);
		hideDiv("acptButton",false);
		hideDiv("rejButton",false);
		if (userType!="margin" && allowDwacDrsDtcSuccess=="Y") {
		    hideDiv("dtcAcptButton",false);
		}
		commentsTabReqd='Y';
		isUpdateAllowed=false;
		//hideDiv("updButton",false);
		
		//isUpdateAllowed=true;
		subDimeCheckReqd=false;
		//dsrqReqd='Y';
		if (statusVal == "INITIAL") {
		//alert("HU HU HU");
		
		if(ubsInd=="Y"){
			if ( (userType=="op" && getActualValue("inOutInd"+depositRId) == 'I')||(userType=="rb" && getActualValue("inOutInd"+depositRId) == 'I') || (userType=="margin" && getActualValue("inOutInd"+depositRId) == 'O') ||  (userType=="margin" && getActualValue("inOutInd"+depositRId) == 'I') ) {
				// we need to allow Accept and reject buttons
			} else {
			
				hideDiv("acptButton",true);
				hideDiv("rejButton",true);
				hideDiv("dtcAcptButton",true);
			}
			//Added as part of Metis#5324197 Starts here
			if(userType=="margin" && statusVal=='INITIAL' && actionSubType=="dwacDrs") {
				if(logonUsrId==getActualValue("lastUpdatedUsrId"+depositRId)){
					//alert("Details block");
					hideDiv("acptButton",true);
					//hideDiv("rejButton",true);
				}
			}
			//Added as part of Metis#5324197 Ends here
			//Added as part of Metis# on 08-Nov-21 Starts here
			if(userType=="op" && actionSubType=="dwacDrs") {
					hideDiv("acptButton",true);
					hideDiv("rejButton",true);
			}
			//Added as part of Metis# on 08-Nov-21 Ends here
		}else{
			
			if ( (userType=="op" && getActualValue("inOutInd"+depositRId) == 'I')||(userType=="rb" && getActualValue("inOutInd"+depositRId) == 'I') || (userType=="margin" && getActualValue("inOutInd"+depositRId) == 'O') ) {
				// we need to allow Accept and reject buttons
			} else {
			
				hideDiv("acptButton",true);
				hideDiv("rejButton",true);
				hideDiv("dtcAcptButton",true);
			}
		}
		} else if ((statusVal == "TRANSIT" && userType=="op")||(statusVal == "TRANSIT" && userType=="rb") ){
			// we need to allow Accept and reject buttons for operations to manually perform DTCC success and reject.
			if(ubsInd=="Y"){//For OP/Dwac drs inq - UBS User hiding Approve and Reject buttons
				hideDiv("acptButton",true);
				hideDiv("rejButton",true);
				}
		} else {
			hideDiv("acptButton",true);
			hideDiv("rejButton",true);
			hideDiv("dtcAcptButton",true);
		}
	}
	
	
	
	
	
	var depStatus=trim(getActualValue("status"+depositRId));
	var roleTypeCd=trim(getActualValue("roleTypeCdHid"+depositRId));

	var canEligInd=trim(document.getElementById("canEligInd"+depositRId).innerHTML);
	if((userType=="ib" || (userType=="op" && actionType!="repair" && actionType!="cancel" && actionType!="history" )|| (userType=="rb" && actionType!="repair" && actionType!="cancel" && actionType!="history" ))
	&&(actionSubType!="dwacDrs")
	) {
		var usrLstDate ='';
		var msusrLstDate='';
	if (getActualValue("udate"+depositRId)!=null && getActualValue("udate"+depositRId)!='')
	{
		
		usrLstDate = new Date(getActualValue("udate"+depositRId));
		msusrLstDate = Date.UTC(usrLstDate.getFullYear(), usrLstDate.getMonth()+1, usrLstDate.getDate());
	}
	var sysdate = new Date();

	
	//var msusrLstDate = Date.UTC(usrLstDate.getFullYear(), usrLstDate.getMonth()+1, usrLstDate.getDate());
    var msSysdate = Date.UTC(sysdate.getFullYear(), sysdate.getMonth()+1, sysdate.getDate());
	
	//alert ("depStatus"+depStatus+" defaultCountryCd"+defaultCountryCd);
		if (depStatus=='CLOSED' && defaultCountryCd!='CA')
		{
				hideDiv("updButton",true);
		}

	// if cancel Button is shown then hide the button
	//alert("userType"+userType+"depStatus"+depStatus);
		if((cancelDepostsAfterDayOne != null && cancelDepostsAfterDayOne == "Y") || ((canEligInd != null && canEligInd =="Y" && (userType=='ib' || userType=='cbibinq') && (roleTypeCd=='IB' || roleTypeCd=='CBIBDEP') )  && (depStatus=='INITIAL'||depStatus=='CLOSED'))|| ((userType=='op'||userType=='rb') && (depStatus=='INITIAL'||(depStatus=='CLOSED' && parseFloat(msusrLstDate) ==parseFloat(msSysdate))) ))
		{
			hideDiv("cancelDepositButton",false);
		} else {
			hideDiv("cancelDepositButton",true);
		}
		//if(frozenAccVal=="SECOUT" && accountFreezeDisableSecout=="Y"){
		if(frozenAccVal=="SECOUT" && accountFreezeDisableSecout=="Y" && checkAcctFreeze(branchval,acctval)==true){
		$("#cancelDepositButton").attr('onclick','').unbind('click');
		$("#cancelDepositButton").click(cancelSecDeposit);
		//$("#branch").attr('onchange',undefined).change(function() { cancelSecDeposit(); });
		//$("#account").attr('onchange',undefined).change(function() { cancelSecDeposit(); });
		
		}else{
		//document.getElementById("cancelDepositButton").disabled = false;
		$( "#cancelDepositButton" ).attr('onclick','').unbind('click');
		$("#cancelDepositButton").click(cancelDeposit);
		}
		if(((canEligInd != null && canEligInd =="Y" && (userType=='ib' || userType=='cbibinq') && (roleTypeCd=='IB' || roleTypeCd=='CBIBDEP'))  && (depStatus=='INITIAL'||depStatus=='CLOSED'))|| ((userType=='op'||userType=='rb') && (depStatus=='INITIAL'||(depStatus=='CLOSED' && parseFloat(msusrLstDate) ==parseFloat(msSysdate))) )) {
			hideDiv("updButton",false);
		}		
	}
	
	
	
	
	if(getActualValue("status"+depositRId) == 'CANCEL') {
				
				//document.getElementById("guiMsgLabel").innerHTML="Deposit is Cancelled - No changes can be done at this time";
				hideDiv("cancelDepositButton",true);
				hideDiv("updButton",true);
				if (actionSubType =='dwacDrs') {
				
				hideDiv("acptButton",true);
				hideDiv("rejButton",true);
				hideDiv("dtcAcptButton",true);
				}
				$('#cancelDepositButton').attr('disabled',true);
				document.getElementById("guiMsgLabel").innerHTML="Deposit is Canceled- No changes can be done at this time.";
				if(allowDeliveryChkBoxInquire != null && allowDeliveryChkBoxInquire=="Y"){
					if (document.getElementById("dlvCertThDiv") != null) {
						document.getElementById("dlvCertThDiv").className="cVisible";
					}
					if (document.getElementById("deliverChkBox") != null) {
						document.getElementById("deliverChkBox").disabled=true;
					}
				}
				//document.getElementById("delCertThDiv").className="cHidden";
				if(document.getElementById("delCertThDiv") != null) {
					document.getElementById("delCertThDiv").className="cVisible";
				}
				if(document.getElementById("newCertButDiv") != null) {
					document.getElementById("newCertButDiv").className="cVisible";
				}
				if(document.getElementById("addnewBut") != null) {
					document.getElementById("addnewBut").disabled=true;
				}
				//hideDiv("delCertRow"+i,true);
				//hideDiv("certDlvCheckBox"+i,true);
				isUpdateAllowed=false;
			}else{
				$('#cancelDepositButton').attr('disabled',false);	
			}
	
	highLiteRow(e);
	//makeRowEditable(depositRId);
	
	effectBaseScr();
	
	tabsDispCleanUp();
	
	destOld=$('#destination').val();
//alert(destOld);
	
	//alert("Docs len dc - "+document.getElementById('docBody').rows.length);
	//top.barCodeFrame.barCodeGen(spsId);
	/*
	var x=document.getElementById("barCodeFrame");
	var y=(x.contentWindow || x.contentDocument);
	if (y.document)y=y.document;
	y.barcodeForm.barCodeGen(spsId);*/

	//Hide sort symbols
	hideshowSortSymbols(false);
	selectedDepositRId = depositRId;
}



setRequestedSpsid=function(e){
      // alert("browser name = " + navigator.appName);

	var ie=document.all;
	var source=ie?e.srcElement:e.target;
	
	var ns6=document.getElementById && !document.all;

	var parEle=ns6? source.parentNode : source.parentElement;
	
	var grandParEle=ns6? parEle.parentNode : parEle.parentElement;


	if("input"==source.type){
		return false;
	}else if("button"==source.type){
		depositRId=grandParEle.id;
	}else if("TR"==grandParEle.tagName){
		depositRId=grandParEle.id;
	}else if("TR"==parEle.tagName){
		depositRId=parEle.id;
	}

    //var spsidObj =  document.getElementById("spsid"+depositRId);
	//spsId = spsidObj.innerHTML;
	spsId=getActualValue("spsid"+depositRId);	
	locMovId=getActualValue("locMovId"+depositRId);	
	document.getElementById("requestSpsId").innerHTML=""+spsId+"";
	//alert(spsId);
}


effectBaseScr=function(){
var chillIndValue="";
chkChillDepIndBlk="";
	setAccount(trim(document.getElementById("branch"+depositRId).innerHTML),trim(document.getElementById("account"+depositRId).innerHTML));
	accChangeEvent();
	
	bwADPNum=trim(document.getElementById("secNbr"+depositRId).innerHTML);
	bwCUSIP=trim(document.getElementById("cusip"+depositRId).innerHTML);
	bwSymbol=trim(document.getElementById("symbol"+depositRId).innerHTML);
	document.getElementById("secDecText").className="cSmallLabel";
	document.getElementById("secText").value=document.getElementById("cusip"+depositRId).innerHTML;
	document.getElementById("secDecText").innerHTML=document.getElementById("secDesc"+depositRId).innerHTML+" ";
	var secTypetmp = "";
	var secValueTmp = "";
	if (trim(bwCUSIP) != '' && trim(bwCUSIP) != 'null') {
		dwr.util.setValue("secType","C");
		secTypetmp = 'C';
		secValueTmp = bwCUSIP;
	} else {
		dwr.util.setValue("secType","A");
		secTypetmp = 'A';
		secValueTmp = bwADPNum;
		document.getElementById("secText").value=document.getElementById("secNbr"+depositRId).innerHTML;
	}
	
	secCont.getSecDesc(secTypetmp,secValueTmp,function(result){
		document.getElementById("dtcEligInd").innerHTML=result.dtcEligInd;
		document.getElementById("dtcEligText").innerHTML=result.dtcEligText;
		document.getElementById("reorgText").innerHTML=result.reorgText;
		//Added below for nameChange Secutrity desc Starts here
		if(trim(result.doNotUseDt) != null && trim(result.doNotUseTxt) != null && trim(result.doNotUseTxt) != '') {			
			doNotUseSecurity = 'Y';
			if(ubsInd=='Y')
			{
				doNotUseTxtVal = result.doNotUseTxt;
				nameChgSecVal = result.nameChgSec;
				result.securityDesc = result.securityDesc + '(' + trim(result.doNotUseTxt) +' REFER TO - '+trim(result.nameChgSec)+')';
			}
		} else {
			doNotUseSecurity = '';
		}
		//Added below for nameChange Secutrity desc Ends here
		if (multiCurrencyClient =='Y') {
			//bwCurrencyCd=result.currencyCd;
			checkCurrencyCd();
			}
		if (trim(result.addSecDescTxt1) != "" && trim(result.addSecDescTxt2) != "") {
			document.getElementById("secDecText").innerHTML=trim(result.securityDesc)+" "+trim(result.addSecDescTxt1)+" "+trim(result.addSecDescTxt2);		
		} else if(trim(result.addSecDescTxt2) == "" && trim(result.addSecDescTxt1) != "")  {
			document.getElementById("secDecText").innerHTML=trim(result.securityDesc)+" "+trim(result.addSecDescTxt1);
		} else {
			document.getElementById("secDecText").innerHTML=trim(result.securityDesc);
		}
		rstrSecurityNbrValue=trim(result.rstrSecurityNbr);
		bwADPNum=trim(result.brdSecurityNbr);
		document.getElementById("bondDecText").innerHTML=(trim(result.bondMaturityDt)!=null && trim(result.bondMaturityDt) != ''?" Maturity Dt : "+trim(result.bondMaturityDt):"");
		document.getElementById("recordDtText").innerHTML=(trim(result.recordDt)&& trim(result.recordDt) != ''?"Record Dt : "+trim(result.recordDt):"");
		if ((trim(result.chillDpstInd)!=null && trim(result.chillDpstInd) != ''?trim(result.chillDpstInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill DEPOSIT";
			//alert("chillDpstInd"+result.chillDpstInd);
			chkChillDepIndBlk="Y";
			}
			if ((trim(result.chillCodInd)!=null && trim(result.chillCodInd) != ''?trim(result.chillCodInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill COD";
			//alert("chillCodInd"+result.chillCodInd);
			}
			if ((trim(result.chillWtInd)!=null && trim(result.chillWtInd) != ''?trim(result.chillWtInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill WT";
			//alert("chillWtInd"+result.chillWtInd);
			}
			if ((trim(result.chillDoInd)!=null && trim(result.chillDoInd) != ''?trim(result.chillDoInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill DO";
			//alert("chillDoInd"+result.chillDoInd);
			}
			if ((trim(result.chillPledgeInd)!=null && trim(result.chillPledgeInd) != ''?trim(result.chillPledgeInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill PLEDGE";
			//alert("chillPledgeInd"+result.chillPledgeInd);
			}
			if ((trim(result.chillSgrtInd)!=null && trim(result.chillSgrtInd) != ''?trim(result.chillSgrtInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill SGRGT";
			//alert("chillDpstInd"+result.chillSgrtInd);
			}
			if ((trim(result.chillIntrDpst)!=null && trim(result.chillIntrDpst) != ''?trim(result.chillIntrDpst):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - Chill INTR DPST";
			//alert("chillIntrDpst"+result.chillIntrDpst);
			}
			if ((trim(result.frznScrtyInd)!=null && trim(result.frznScrtyInd) != ''?trim(result.frznScrtyInd):"N")=="Y")
			{
			chillIndValue=chillIndValue+" - FRZN SCRTY";
			//alert("frznScrtyInd"+result.frznScrtyInd);
			}
			if ( trim(chillIndValue) != '')
			{
			document.getElementById("recordDtText").innerHTML=chillIndValue;
			//alert("chillIndValue"+chillIndValue);
			}
			
			//Show and allow to change 'Restricted' indicator only for operations
			if( restrictedSecIndOnInquire=="Y") {
				document.getElementById("rstrIndDiv").className="cVisible";
				rstrInd = document.getElementById("restrictedInd"+depositRId).innerHTML;
				if(rstrInd =='R') {
					document.getElementById("rstrIndChkBox").checked=true;
					bwADPNum=trim(rstrSecurityNbrValue);
				} else {
					document.getElementById("rstrIndChkBox").checked=false;
				}
				
			}
			
	 });
	document.getElementById("price").innerHTML=document.getElementById("secPrice"+depositRId).innerHTML;
	
	priceOnly=priceVal();
	origAmount=document.getElementById("amount").value=document.getElementById("secAmount"+depositRId).innerHTML;
	
	
	 //dwr.util.setValue('destination',boxLoc);
	//document.getElementById("amount").value=document.getElementById("reqAmount"+depositRId).value;
	//document.getElementById("accDesc").innerHTML=document.getElementById("reqBrDesc"+depositRId).value;
	
	//retrieveSecDesc(true);
	//sceActionChg();
	
	boxLoc=trim(document.getElementById("dest"+depositRId).innerHTML);
	dwr.util.setValue('destination',boxLoc);
	boxLocDesc=dwr.util.getValue('destination');
	if (boxLocDesc == '') {
		boxLocDescNotFound = true;
		populateBoxWithDes(boxLoc);
	}
	dwr.util.setValue('statusCodes',trim(document.getElementById("status"+depositRId).innerHTML));
	document.getElementById('statusCodes').disabled="disabled";
	document.getElementById("requestSpsIdStatus").innerHTML=statusVal;
	document.getElementById("requestSpsIdMsgType").innerHTML=msgTypeVal;
	dwr.util.setValue('quantity',trim(document.getElementById("quantity"+depositRId).innerHTML)); 
	dwr.util.setValue('cdate',trim(document.getElementById("createDate"+depositRId).innerHTML)); 
	document.getElementById("quantOp").disabled="disabled";
	document.getElementById("amtOp").disabled="disabled";
	document.getElementById('daysAged').disabled="disabled";	
	if(depositQtyCheck=="Y"){
	if(document.getElementById("totUserQuantity")!=null)
	document.getElementById("totUserQuantity").value=document.getElementById("quantity").value;}	
	
	document.getElementById('cdate').disabled="disabled";
	$('#cdate').datepicker('disable'); 
	
	hideDiv("cdateTd",true);
	hideDiv("inquireBut",true);
	hideDiv("goBack",false);
	if(userType=='op'||userType=='rb') {
	
	if (actionType=='inquire'|| (allowBoxMOnRepairToInquire=='Y' && screenType=="REPAIR_QUEUE")){
			document.getElementById('destination').disabled=false;
		}else{
			document.getElementById('destination').disabled="disabled";
		}
	}
	   if(statusVal=="TRANSIT" || statusVal=="COMPLETE" )
		{
         hideDiv("updButton",true);
         hideDiv("cancelDepositButton",true);
		} 
	  else
		  {
		  hideDiv("updButton",false);
		  hideDiv("cancelDepositButton",false);
		  }
	
	if(actionSubType =='dwacDrs') {
		var entitled= document.getElementById('entitled').value;	
		var approveEntitled=document.getElementById('isapproveEntitled').value;
		var updateEntitled=document.getElementById('isupdateEntitled').value;
		var marginentitled=document.getElementById('marginentitled').value;
	document.getElementById("branch").readOnly=true;
	document.getElementById("account").readOnly=true;		
	document.getElementById("secText").readOnly=true;
	if((updateEntitled=="true" && approveEntitled=="true") || (Apprrjt=="true" && MarginUpd=="true" ))
		{
    document.getElementById("newComment").readOnly=false;
	if(userType!="ib")
		{
	document.getElementById("acptButton").disabled=false;
	document.getElementById("rejButton").disabled=false;
	if (userType!= "margin" && allowDwacDrsDtcSuccess=="Y") {
	    document.getElementById("dtcAcptButton").disabled=false;
	    }
		}
	
	$('#restrictedStockInd').attr('disabled',false);
	
      if(userType=="ib")
		{
		document.getElementById("ibUpdButton").disabled=false;

		}
      else if(userType!="margin")
			{
			document.getElementById("updButton").disabled=false;
			}
		}
	
	else if(approveEntitled=="true" || Apprrjt=="true")
		{
		document.getElementById("newComment").readOnly=false;
		if(userType!="ib")
			{
		document.getElementById("acptButton").disabled=false;
		document.getElementById("rejButton").disabled=false;
		if (userType!= "margin" && allowDwacDrsDtcSuccess=="Y") {
		    document.getElementById("dtcAcptButton").disabled=false;
		    }
			}
		
		$('#restrictedStockInd').attr('disabled',true);
		
	      if(userType=="ib")
			{
			document.getElementById("ibUpdButton").disabled="disabled";

			}
	      else if(userType!="margin")
				{
				document.getElementById("updButton").disabled="disabled";
				}
			}
	
	else if(updateEntitled=="true" || MarginUpd=="true")
	{
	document.getElementById("newComment").readOnly=false;
	if(userType!="ib")
		{
	document.getElementById("acptButton").disabled="disabled";
	document.getElementById("rejButton").disabled="disabled";
	if (userType!="margin") {
	    document.getElementById("dtcAcptButton").disabled="disabled";
	    }
		}
	
	$('#restrictedStockInd').attr('disabled',false);
	
      if(userType=="ib")
		{
		document.getElementById("ibUpdButton").disabled=false;

		}
      else if(userType!="margin")
			{
			document.getElementById("updButton").disabled=false;
			}
		}
		
	else
		{
		document.getElementById("newComment").readOnly=true;
		if(userType!="ib")
			{
		document.getElementById("acptButton").disabled="disabled";
		document.getElementById("rejButton").disabled="disabled";
		if (userType!="margin") {
		    document.getElementById("dtcAcptButton").disabled="disabled";
		    }
			}
		
		$('#restrictedStockInd').attr('disabled',true);
		
	      if(userType=="ib")
			{
			document.getElementById("ibUpdButton").disabled="disabled";

			}
	      else if(userType!="margin")
				{
				document.getElementById("updButton").disabled="disabled";
				}

	
		}//alert("New alert for dwac");
		//Start for METIS#5259747(Hiding approve button for other than INITIAL for op users)
		if(userType == 'op' && statusVal!="INITIAL")
		{
			hideDiv("acptButton",true);
		} 
		//End for METIS#5259747
	//document.getElementById("cusip"+depositRId).disabled=true;
	//document.getElementById("symbol"+depositRId).disabled=true;
	//document.getElementById("secDesc"+depositRId).disabled=true;
	//document.getElementById("dtcEligInd").disabled=true;
	}
	
	
	if(multiCurrencyClient=="Y") {
		dwr.util.setValue("currencyCode", getActualValue("currencyHid"+depositRId));
		dwr.util.setValue("bkpgCurrCode", getActualValue("bkpgCurrencyHid"+depositRId));
	}
	
	if(allowNegotiableInd=="Y" && actionSubType !='dwacDrs') {
		document.getElementById("negoIndDiv").className="cVisible";
		dwr.util.setValue("negotiableInd", getActualValue("negotiableIndHid"+depositRId));
	}
		
	if(allowGiftInhInd=="Y" && actionSubType !='dwacDrs') {
		document.getElementById("giftInhIndDiv").className="cVisible";
		dwr.util.setValue("giftInhInd", getActualValue("giftInhIndHid"+depositRId));
	}
	
	
	if(allowDeliverToBranchInq=="Y" && actionSubType !='dwacDrs') {
		document.getElementById("deliverToBranchDiv").className="cVisible";
		dwr.util.setValue("deliverToBranch", getActualValue("deliverToBranchHid"+depositRId));
	}
	
	if (restrictedStockIndOnInquire == 'Y' && actionSubType !='dwacDrs') {
		document.getElementById("restrictedIndicatorDiv").style.display="block";
		dwr.util.setValue("restrictedStockInd", getActualValue("restrcitedStockIndHid"+depositRId));
	}
	if(userType=="op" && actionSubType !='dwacDrs'){
		//console.log("userType :"+userType+" actionSubType:"+actionSubType+" dtcBYpass Value:"+getActualValue("dtcByPassIndHid"+depositRId));
		dwr.util.setValue("dtcByPassInd", getActualValue("dtcByPassIndHid"+depositRId));
		
		//dwr.util.setValue("bkpgByPassInd", "N");
	}
	
	if(allowAccountTypeInq=="Y") {
	
		var accTypeCd=getActualValue("accTypeCdHid"+depositRId);

		if(accTypeCd==null || trim(accTypeCd).length==0)
		accTypeCd=accTypeCdDefault;
		dwr.util.setValue("accountTypeCd", accTypeCd );
	}
	

	if(allowBearerInd=="Y" && actionSubType !='dwacDrs') {
		document.getElementById("bearerIndDiv").className="cVisible";
		dwr.util.setValue("bearerInd", getActualValue("bearerIndHid"+depositRId));
		bearerChange();
	}
	
	
	if(allowSuspenceInd=="Y") {
		document.getElementById("suspIndDiv").className="cVisible";
		if(getActualValue("suspenseIndHid"+depositRId) =='Y') {
			document.getElementById("suspInd").innerHTML='Y';
		} else {
			document.getElementById("suspInd").innerHTML='N';
		}
		document.getElementById("agedDays").innerHTML=getActualValue("agedDays"+depositRId);
	}
	
	
	
	
	
	
	if(allowPrintLockupAdvice=='Y' && (userType=='op'||userType=='rb') && actionType=='inquire' && actionSubType !='dwacDrs') {
		if(boxLoc =='LCSK' || boxLoc=='LSKUS') {  // Temp solution. It should come from database?
			hideDiv("printLockupAdviseBut",false);
		} else {
			hideDiv("printLockupAdviseBut",true);
		}	
	}
  //alert("effectBaseScr"); 
}

function getPriceInUSD(){
	var ele=document.getElementById('secText');
	var secText = "";
	if (ele != null) {
		secText = ele.value;
	}
	var secType=dwr.util.getValue('secType');
	hideDiv("updButDiv",true);
	var priceChk=trim(document.getElementById("price").innerHTML);
	
	secCont.validateCurrency(secType,secText,"U$",null,function(result)
	{
		if (priceChk!=null && priceChk!="")
		{
			document.getElementById("price").innerHTML=parseFloat(result[2]);
			updateAmtOnCusipChange();
		}
		if (document.getElementById("certfs").style.visibility=="visible") {
			hideDiv("updButDiv",false);
		}
	});
}

//validate currencyCd;
var validCurrencyCd;
function checkCurrencyCd(){
var ele=document.getElementById('secText');
var secText = "";
if (ele != null) {
	secText = ele.value;
}
var secType=dwr.util.getValue('secType');
var newCurrencyCd=trim(document.getElementById("currencyCode").value);
document.getElementById("currencyChk").className="cSmallLabel";
document.getElementById("currencyChk").innerHTML="";
hideDiv("updButDiv",true);
var oldCurrencyCd=trim(document.getElementById("currencyCode").title);
secCont.validateCurrency(secType,secText,newCurrencyCd,null,function(result)
{
bwCurrencyCd=result[0];
validCurrencyCd=result[0];
//alert ("bwCurrencyCd"+bwCurrencyCd+"---"+"newCurrencyCd"+newCurrencyCd+"---"+"bwCurrencyCd"+bwCurrencyCd);
if(bwCurrencyCd!="" &&  newCurrencyCd!="" && bwCurrencyCd=="N"){
document.getElementById("currencyChk").className="cErrors";
document.getElementById("currencyChk").innerHTML=" Please Enter Valid Currency Code.";
}else
{
var priceChk=trim(document.getElementById("price").innerHTML);
if (priceChk!=null && priceChk!="")
{
if (newCurrencyCd != oldCurrencyCd) {
document.getElementById("price").innerHTML=parseFloat(result[2]);
updateAmtOnCusipChange();
}
//alert ("-------"+document.getElementById("price").innerHTML+";;;;;;;;;;;origPrice;;;"+origPrice+"IIIIIIIIIIresult[1]"+result[1]);
}

}
if (document.getElementById("certfs").style.visibility=="visible")
{
hideDiv("updButDiv",false);
}


});


}
//vlidate bkpg cruuency cd

function checkBkpgCurrencyCd(){
if (multiCurrencyClient =='Y'){
   		var errorStr="";
   		var bkpgCurrencyCd=document.getElementById("bkpgCurrCode").value;
		var newCurrencyCd=trim(document.getElementById("currencyCode").value);
		hideDiv("updButDiv",true);
		var ele=document.getElementById('secText');
		var secText = "";
		if (ele != null) {
			secText = ele.value;
		}
		var secType=dwr.util.getValue('secType');
		//alert ("document.getElementById('bkpgCurrCode').value"+bkpgCurrencyCd);
		secCont.validateCurrency(secType,secText,bkpgCurrencyCd,null,function(result)
		{
		bwCurrencyCd=result[0];
		validBkpgCurrencyCd=result[0];
		if(bwCurrencyCd!="" &&  bkpgCurrencyCd!="" && bwCurrencyCd=="N" ){
				errorStr="InValid Book Keeping Currency Code ";
				showErrors(errorStr);
				isBkpgCurrCodeValid = false;
		}
		else
		{
		showErrors("");
			isBkpgCurrCodeValid = true;
		}
if (document.getElementById("certfs").style.visibility=="visible")
{
hideDiv("updButDiv",false);
}
});
}
	
}

tabsDispCleanUp=function(){
	//alert("tab cleanup");
   if(boxLoc=="DWAC" || boxLoc=="DRS") {
   		hideDiv("tab1",true);	
   		hideDiv("tab2",false);
   		hideDiv("tab3",true);
   		hideDiv("tab8",true);
   		hideDiv("tab11",false);
   		document.getElementById('trailerDesc').disabled=true;
   		// always hide tab1, tab3 and tab8 for dwac/drs requests
   		
   		if(bookKeepingTabReqd != 'Y') {
   			hideDiv("tab4",true);
   		}
   		if(auditTrailsTabReqd != 'Y') {
   			hideDiv("tab5",true);
   		}
   		if(imagingTabReqd != 'Y') {
   			hideDiv("tab6",true);
   		}
   		if(commentsTabReqd != 'Y') {
   			hideDiv("tab7",true);
   		}
   		if(dsrqReqd != 'Y') {
   			hideDiv("tab9",true);
   		}
   		if(freeFormTrailerTabReqd != 'Y') {
   			hideDiv("tab10",true);
   		}
   		if(allowContactTab != 'Y' || actionSubType!='transinq') {
   			hideDiv("tab12",true);
   		}
   		selectedTabFunc(2);
   		// mozilla does not understand .click()
   			//document.getElementById("tab2").click();
   		fireEvent(document.getElementById("tab2"),'click');
   			
         //$(function() {$("ul.tabs#tab2").addClass("active").show();});
         //$(function() {$(".tab_content:#tab2").show();}); 	
         var isReTrnsEntitled=document.getElementById('isReTrnsEntitled').value;
         if (isReTrnsEntitled=="true" && statusVal=="PENDING")
         {
	        hideDiv("reTrnsBut",false);
	        hideDiv("rejButton",false);
			hideDiv("dtcAcptButton", !(allowDwacDrsDtcSuccess=="Y"));
	        document.getElementById("dwacTrsAcct").readOnly=true;
	        document.getElementById("dwacSsn").readOnly=true;
	        document.getElementById("dwacRegName").readOnly=true;
	        document.getElementById("suretyNumber").disabled=true;
	        document.getElementById("quantityTransmission").disabled=true;
	     } else {
	         hideDiv("reTrnsBut",true);
	         document.getElementById("secText").readOnly=false;
	         document.getElementById("account").readOnly=false;
	         document.getElementById("accountTypeCd").readOnly=false;
         }
         
         if(statusVal=="PENDING")
        	 {
        	 hideDiv("rejButton",false);
        	 }
         
         
         var approveEntitled=document.getElementById('isapproveEntitled').value;
         if(userType=="op" && (approveEntitled=="true" || Apprrjt=="true") && (statusVal=="CANCEL" || statusVal=="REJECT" || statusVal=="COMPLETE" ))
  		{
  		hideDiv("cancelDepositButton",true);
  		}
  	  else
  		{	
  		hideDiv("cancelDepositButton",false);
  		}
	} else {
   		hideDiv("tab1",false);
   		hideDiv("tab2",true);
   		hideDiv("tab3",false);
   		hideDiv("tab8",false);
   		hideDiv("tab11",true);
   		// always hide tab2 for physical deposits
   		
   		if(documentTabReqd != 'Y') {
   			hideDiv("tab3",true);
   		} else {
   			// Update button functionality will look into the existing documents even when we didn't click on Doc tab. So, we must perform this function irrespective of the status
   			docFetch();
   		}
   		
   		
   		
   		if(bookKeepingTabReqd != 'Y') {
   			hideDiv("tab4",true);
   		}
   		if(auditTrailsTabReqd != 'Y') {
   			hideDiv("tab5",true);
   		}
   		if(imagingTabReqd != 'Y') {
   			hideDiv("tab6",true);
   		}
   		if(commentsTabReqd != 'Y') {
   			hideDiv("tab7",true);
   		}
   		if(questionnaireReqd != 'Y') {
   			hideDiv("tab8",true);
   		}
   		if(dsrqReqd != 'Y') {
   			hideDiv("tab9",true);
   		}
   		if(freeFormTrailerTabReqd != 'Y') {
   			hideDiv("tab10",true);
   		}else{
   			//hideDiv("tab10",true);
   			
   		}
   		
   		if (statusVal=='INITIAL' || statusVal=='RECEIVE' || statusVal=='PENDING' || statusVal=='CANCEL' )
		{
		//hideDiv("tab10",true);
		document.getElementById('trailerDesc').disabled=false;
		}
   		else
   			{
   			document.getElementById('trailerDesc').disabled=true;
   			}
   		
   		if (statusVal!="" && statusVal=="HOLD" )
   			{
   			hideDiv("updButton",true);
   			hideDiv("cancelDepositButton",true);
   			}
   		else
   			{
   			hideDiv("updButton",false);
   			hideDiv("cancelDepositButton",false);
   			}
   		
   		if(allowContactTab != 'Y' || actionSubType!='transinq') {
   			hideDiv("tab12",true);
   		}
   		selectedTabFunc(1);
   		//document.getElementById("tab1").click();
   		fireEvent(document.getElementById("tab1"),'click');
   		
   } 
  
  
	hideDiv("depositfs",true);
	hideDiv("certfs",false);	
	hideDiv("updButDiv",false);
	document.getElementById('certErrorDiv').innerHTML="";
	document.getElementById("newComment").value="";

	document.getElementById("newContact").value="";
	document.getElementById("newPhoneNbr").value="";

	if((userType=='op'||userType=='rb') && actionType=='inquire' && allowDeliveryChkBoxInquire=="Y"){
		document.getElementById('deliverChkBox').checked=false;
	}
	
	//Documenents can be specified only by the operations and if status is not INITIAL/HOLD. Also, it shouldn't be from repair queue.
	if(userType=='ib' || userType=='cbibinq' || userType=='sp' || (actionType=='repair' ) || statusVal=='INITIAL' || statusVal=='HOLD') {
		document.getElementById("specDocs").className="cHidden";
		if (statusVal=='INITIAL')
			{
			hideDiv("receiveButInq",false);
			}else
				{
				hideDiv("receiveButInq",true);
				}
	} else {
		document.getElementById("specDocs").className="cVisible";
		hideDiv("receiveButInq",true);
	}

     if(screenType=="REPAIR_QUEUE" && allowSpecifyOnRepairToInquire=='Y'){
    
     document.getElementById("specDocs").className="cVisible";
     repairDocFetch();
     }
	document.getElementById('docInfoDiv').innerHTML="";
	hideDiv("docInfoDiv",true);
	if (userType=='op' && getActualValue("status"+depositRId)=='INITIAL') {
		hideDiv("docInfoDiv",false);
		document.getElementById('docInfoDiv').innerHTML="Documents can't be specified until you receive the Deposits!";
	}

	hideDiv("questInfoDiv",true);
	document.getElementById('questInfoDiv').innerHTML="";
	//alert("exiting tabcleanup");
}

setAccount=function(br,acc){
	var tmp;
	var acEle;
	var ele=document.getElementById("branch");
	if (ele.type == 'text') {
		document.getElementById("branch").value=br;
		document.getElementById("account").value=acc;
	} else {
		for(var i=0;i<ele.length;i++){
			if(ele.options[i].value==br){
				ele.options[i].selected="selected";
				if(branch250FuncEnbl=='Y' && br=="250"){
					hideFunc("v");
					acEle=document.getElementById("250Acc");
					for(var i=0;i<acEle.length;i++){
						tmp=acc.substring(0,3);
						if(acEle.options[i].value==tmp){
							acEle.options[i].selected="selected";
							document.getElementById("account").value=acc.substring(3,5);
							break;
						}
					}
				}else{
					document.getElementById("account").value=acc;
				}
				break;
			}
		}
	}
	
}

function highLiteRow(e){
	
	var ie=document.all;
	var source=ie?event.srcElement:e.target;
	//Find out if the browser supports document.all or not. document.all() is a non-standard way of accessing DOM elements and only IE6 and above supports it.
	var ns6=document.getElementById&&!document.all;
	var parent=ns6? source.parentNode : source.parentElement;
	var grandPar=ns6? parent.parentNode : parent.parentElement;
	
	if (lastSelectedRow != null) { 
		lastSelectedRow.style.backgroundColor = originalRowColor; 
	}
		
	originalRowColor =  grandPar.style.backgroundColor;
	if("TR"==grandPar.tagName){
		grandPar.style.backgroundColor=colorHilate;
		lastSelectedRow = grandPar;
		//alert("grandPar - "+grandPar);
	}else if("TR"==parent.tagName){
		parent.style.backgroundColor=colorHilate;
		lastSelectedRow = source.parentElement;
	}

}

// Highlite the row with SPSId last updated
function highLiteLastUpdatedRow(){
	
	for(var rId=0; rId < document.getElementById('inqBody').rows.length; rId++) {
		if (spsId == getActualValue("spsid"+rId)) {
			//alert(spsId + " - "+document.getElementById("spsid"+rId).innerHTML);
			var ns6=document.getElementById&&!document.all;
			var source=document.getElementById("spsid"+rId);
			var parent=ns6? source.parentNode : source.parentElement;
			var grandPar=ns6? parent.parentNode : parent.parentElement;
			originalRowColor =  grandPar.style.backgroundColor;
			if(ns6) {
				grandPar.style.backgroundColor=colorHilate;
				lastSelectedRow = grandPar;
			} else {
				grandPar.style.backgroundColor=colorHilate;
				lastSelectedRow = grandPar;
				//alert("Found "+ rId + "  " +spsId);
			}
			
		}
	}
}



reTransmitToDTC=function(){
	var spsidArr=new Array();
	var tokId = document.getElementById("tokId").value;
	var actionEvent="RESUBMIT";
	spsidArr[0]=trim(spsId+'~'+locMovId);
	if(userType=='op' || userType=='margin') {
	var	br=document.getElementById("branch").value;
	var	acc=document.getElementById("account").value;
		// checkAcctFreeze(br,acc);
   if(checkAcctFreeze(br,acc)==true)
		{
	alert("Account is Frozen.. Cannot Resubmit");
	}
	else
	{
		secCont.statusChangeSpsIds(spsidArr, 'PENDING', 'TRANSIT', tokId,actionEvent, function(result){
			var res=result.split("||");
			inquireCerts(true,false);hideDiv("goBack",true);
			resetSearch();
			alert(res[0]);
			
		   });
		
	 	}
	 	}
		
	}



receiveDeposits=function(){
/* capture the sps ids selected for receive and update the status to 'RECEIVE' on database */
   var spsidArr=new Array();
  var spsvalidList=new Array();
	
	//var str1="";
	var ele=document.getElementById('inqBody');
	var chkEle;
	var cnt=0;
	var actionEvent='';
	for(var i=0;i<ele.rows.length;i++){
		chkEle=document.getElementById("rcvChkBox"+i);
	var	br=document.getElementById("branch"+i).innerHTML;
	var	acc=document.getElementById("account"+i).innerHTML;
		if(chkEle.checked==true && chkEle.className!="cHidden"){
		// checkAcctFreeze(br,acc);
		   if(checkAcctFreeze(br,acc)==true)
				{
					spsvalidList[cnt]=trim(document.getElementById("spsid"+i).innerHTML)+'~'+trim(document.getElementById("locMovId"+i).innerHTML);
				}else
				{
					spsidArr[cnt]=trim(document.getElementById("spsid"+i).innerHTML)+'~'+trim(document.getElementById("locMovId"+i).innerHTML);
				}
					cnt++;
				  
		}	
	}
	
	if (cnt > 0) {
	
	 if(spsidArr!=null || spsidArr!='')
	{ 
		try {
			var tokId = document.getElementById("tokId").value;
			 if(!checkAcctFreeze(br,acc)==true)
			{ 
			if(userType=='op'|| userType=='rb') {
				secCont.statusChangeSpsIds(spsidArr, 'INITIAL', 'RECEIVE', tokId,actionEvent, function(result){
					var res=result.split("||");
					inquireCerts(true,false);hideDiv("goBack",true);
					resetSearch();
					alert(res[0]);
					if(cnt == 1) {
						spsId=spsidArr[0];
						highLiteLastUpdatedRow();
					}
				   });
				      
			 	} else {
			 		secCont.destinationChangeSpsIds(spsidArr, 'HOLD', null, 'PENRDG' , tokId, function(result){
					var res=result.split("||");
					inquireCerts(true,false);hideDiv("goBack",true);
					resetSearch();
					alert(res[0]);
					if(cnt == 1) {
						spsId=spsidArr[0];
						highLiteLastUpdatedRow();
					}
				   });
			 	}
			 	 }
			   else
			{
			alert("Account is Frozen.. Cannot Recieve");
			}  
			 	
		} catch(e) {
			alert("Error in saving...");
		}  
		}
			else
			{
			alert("Account is Frozen.. Cannot Recieve");
			}
		
	} else {
		alert("No Requests Selected For Receive");
	}
}


// receive indivisual deposits
receiveIndiDeposits=function(){
	var spsidArr=new Array();
	var actionEvent='';
	var tokId = document.getElementById("tokId").value;
	spsidArr[0]=trim(spsId+'~'+locMovId);
	if(userType=='op') {
	var	br=document.getElementById("branch").value;
	var	acc=document.getElementById("account").value;
		// checkAcctFreeze(br,acc);
   if(checkAcctFreeze(br,acc)==true)
		{
	alert("Account is Frozen.. Cannot Recieve");
	}
	else
	{
		secCont.statusChangeSpsIds(spsidArr, 'INITIAL', 'RECEIVE', tokId,actionEvent, function(result){
			var res=result.split("||");
			inquireCerts(true,false);hideDiv("goBack",true);
			resetSearch();
			alert(res[0]);
			
		   });
	 	}
	 	}
}


var acctFrzInd="";
checkAcctFreeze=function(brval,acVal)
{
	if (accountFreezeProcess!=null && accountFreezeProcess != 'Y') {
		return false;
	}
secCont.getAccountFreezeInd(brval,acVal,userType,actionType,{async:false, callback:function(result){
                     //alert ("freeze ind"+result[0]);
                           acctFrzInd = result[0];
                           } });
                           
                       
                           if(acctFrzInd!="" && acctFrzInd=='Y'){
                     //alert ("freeze ind reason"+result[1]);
                                  
                                  return true;
                           } else {
                           
                           return false;
                          
                            }
                             return true;                 
}


var br="";
var acc="";

acceptMultipleDeposits=function(){
/* capture the sps ids selected for accept and send it to database to get them processed through events */
	var spsidList=new Array();
	var spsvalidList=new Array();
	//var str1="";
	var ele=document.getElementById('inqBody');
	var chkEle;
	var cnt=parseInt(0);
	//alert(cnt);
	for(var i=0;i<ele.rows.length;i++){
	
		chkEle=document.getElementById("acptChkBox"+i);
		br=document.getElementById("branch"+i).innerHTML;
			acc=document.getElementById("account"+i).innerHTML;
		if(chkEle!=null && chkEle.checked==true && chkEle.className!="cHidden"){
		   // alert("inside mult accept::"+document.getElementById("spsid"+i).innerHTML);
		   //checkAcctFreeze(br,acc);
		   
   if(checkAcctFreeze(br,acc)==true)
		{
			spsvalidList[cnt]={spsId:trim(document.getElementById("spsid"+i).innerHTML),status:trim(document.getElementById("status"+i).innerHTML), dwacDrsDepAcptInd:'Y',locMovId:trim(document.getElementById("locMovId"+i).innerHTML)};
		}
		
			else
			{
			spsidList[cnt]={spsId:trim(document.getElementById("spsid"+i).innerHTML),status:trim(document.getElementById("status"+i).innerHTML), dwacDrsDepAcptInd:'Y',locMovId:trim(document.getElementById("locMovId"+i).innerHTML)};
			
			}
			
	
			
			cnt++;
		}	
		
}
	
	if (cnt > 0) {
	if(spsidList!=null && spsidList.length > 0)
	{
		try {
			var tokId = document.getElementById("tokId").value;
			//alert(spsidList[0].spsId);

			secCont.receiveOrAcceptDeposits(spsidList, null, userType, tokId, {async:false, callback:function(result){
				var res=result.split("||");
				inquireCerts(true,false);hideDiv("goBack",true);
				resetSearch();
				alert(res[0]);
				if(cnt == 1) {
					spsId=spsidList[0].spsId;
					highLiteLastUpdatedRow();
				}
			}});
			} catch(e) {
				alert("Error in saving...");
			} 
			}
			else
			{
			alert("Account is Frozen... can not accept");
			}
			
			
	}  else {
		alert("No requests selected for Accept!");
	}
	
}



/* SPS tab functions  */
selectedTabFunc=function(selInd){
	switch (selInd){
		case 1:
			certGenricFunc=getCertifs;
			break;
		case 2:
			certGenricFunc=getDwacDeposits;
			break;
		case 3:
		    
		    
			 certGenricFunc=docFetch;
			break;
		case 4:
			certGenricFunc=bookKeeping;
			break;
		case 5:
			certGenricFunc=getAuditTrail;
			break;
		case 6:
			certGenricFunc=getSpsImaging;
			break;
		case 7:
			certGenricFunc=getComments;
			break;
		case 8:
			certGenricFunc=getAnsweredQuestions;
			break;
		case 9:
			certGenricFunc=getDsrqQuestions;
			break;
		case 10:
			certGenricFunc=getTrailerDesc;
			break;
		case 11:
			certGenricFunc=getForeignAddress;
			break;
		case 12:
			certGenricFunc=getContactDetails;
			//certGenricFunc=getCertifs;
			break;
		default:
			certGenricFunc=getCertifs;
			break;
	}
	certGenricFunc();
}


getCertifs=function(){
	hideDiv("certfs",false);
	hideDiv("updButDiv",false);
	
	spsId=trim(spsId);
	fetchCountryCode();
	secCont.getCerts(spsId,locMovId,function(data){
		dwr.util.removeAllRows("certBody");
		createCertRows(data,false);
		for (var i= 0; i < document.getElementById("certBody").rows.length;i++)
		{
			//VPS-5540485: Ensure transaction id is maintained for deposits in transit STARTS here...
			if(userType=='op' && actionType=='inquire' && actionSubType!='dwacDrs' && statusVal == 'TRANSIT'){
				document.getElementById("branch").disabled=true;
				document.getElementById("account").disabled=true;
				document.getElementById("secType").disabled=true;
				document.getElementById("destination").disabled=true;
				document.getElementById("secText").disabled=true;
				document.getElementById("rstrIndChkBox").disabled=true;
				document.getElementById("pouchId").disabled=true;
				document.getElementById("vpsId").disabled=true;
				document.getElementById("quantity").disabled=true;
				document.getElementById("amount").disabled=true;
				document.getElementById("daysAgedOp").disabled=true;
				document.getElementById("certPrefix"+i).disabled=true;
				document.getElementById("certNbr"+i).disabled=true;
				document.getElementById("certRegName"+i).disabled=true;
				document.getElementById("certQty"+i).disabled=true;
				document.getElementById("certIssueDate"+i).disabled=true;
				$('#certIssueDate'+i).datepicker({}).next('button').attr('disableSelection', 'true');
				document.getElementById("certDlvCheckBox"+i).disabled=true;
			}
			//VPS-5540485: Ensure transaction id is maintained for deposits in transit ENDS here...
			if(statusVal!="CANCEL")
			//$(function() {
				var inputDate = $("#certIssueDate"+i);
				var changeYearButtons = function() {
		    	changeMonthAndYear(inputDate);
				};
				$("#certIssueDate"+i).datepicker({
				beforeShow: changeYearButtons,
		    	onChangeMonthYear: changeYearButtons,
				showOn: 'button',
				buttonImage: 'images/calendar.png',
				dateFormat:'mm/dd/yy'});
			//});
		}
	});
}

function fetchCountryCode() {
	secCont.getCountryCode(function(data) {
		if (data != null && trim(data).length !=0) {
			countryCode = trim(data);
			if (trim(data) == "CA") {
				certNumberMaxLength = "15";
			} else {
				certNumberMaxLength = "12";
			}
		}
	});
}

createCertRows=function(data, isNewRow){

	var cellFuncs=[
			function(data){
			if(statusVal!="CANCEL" && data.deletedCertInd!='Y' && actionSubType!='transinq')
			return "<input tabindex="+(data.rowId+1)+" type=text id=certPrefix"+data.rowId+" name=certPrefix"+data.rowId+" value='"+data.certPrefix+"' title='"+data.certPrefix+"' size=5 maxlength=4  onkeyup=moveOnMax(this,'certNbr"+data.rowId+"') onBlur='toUpper(this);' />"; 
			else
			return "<input tabindex="+(data.rowId+1)+" type=text id=certPrefix"+data.rowId+" name=certPrefix"+data.rowId+" value='"+data.certPrefix+"' title='"+data.certPrefix+"' size=5 maxlength=4  onkeyup=moveOnMax(this,'certNbr"+data.rowId+"') disabled onBlur='toUpper(this);' />"; },
			
			function(data){
			if(statusVal!="CANCEL" && data.deletedCertInd!='Y' && actionSubType!='transinq')
			return "<input tabindex="+(data.rowId+1)+"  type=text id=certNbr"+data.rowId+" name=certNbr"+data.rowId+" value='"+data.certNbr+"' title='"+data.certNbr+"' size=17 maxlength="+certNumberMaxLength+" onkeyup=moveOnMax(this,'certRegName"+data.rowId+"') onBlur='toUpper(this);'/>"; 
			else
			return "<input tabindex="+(data.rowId+1)+"  type=text id=certNbr"+data.rowId+" name=certNbr"+data.rowId+" value='"+data.certNbr+"' disabled title='"+data.certNbr+"' size=17 maxlength="+certNumberMaxLength+" onkeyup=moveOnMax(this,'certRegName"+data.rowId+"') onBlur='toUpper(this);'/>"; },
			
			function(data){
				if(allowOfacCheckBySec!="" && allowOfacCheckBySec=='Y')
				{		
					return "<input tabindex="+(data.rowId+1)+" type=text id=certRegName"+data.rowId+" name=certRegName"+data.rowId+" value='"+data.regName.replace(/\'/g,'&apos;')+"' title='"+data.regName.replace(/\'/g,'&apos;')+"' size=40 onChange='toUpper(this);'  />" ;
				}
			if(statusVal!="CANCEL" && data.deletedCertInd!='Y' && actionSubType!='transinq')
			return "<input tabindex="+(data.rowId+1)+" type=text id=certRegName"+data.rowId+" name=certRegName"+data.rowId+" value='"+data.regName.replace(/\'/g,'&apos;')+"' title='"+data.regName.replace(/\'/g,'&apos;')+"' size=40 onChange='toUpper(this);checkOfac(this);'  />" ;
			else
			return "<input tabindex="+(data.rowId+1)+" type=text id=certRegName"+data.rowId+" name=certRegName"+data.rowId+" value='"+data.regName.replace(/\'/g,'&apos;')+"' disabled title='"+data.regName.replace(/\'/g,'&apos;')+"' size=40 onChange='toUpper(this);checkOfac(this);'  />" ;},
		
			
			function(data){
			if(statusVal!="CANCEL" && data.deletedCertInd!='Y' && actionSubType!='transinq')
			return "<input tabindex="+(data.rowId+1)+"  type=text id=certQty"+data.rowId+" name=certQty"+data.rowId+" value='"+data.quantity+"' title='"+data.quantity+"' size=18 maxlength=16 onChange='popMarketValue("+data.rowId+")'  style=text-align:right />" ;
			else
			return "<input tabindex="+(data.rowId+1)+"  type=text id=certQty"+data.rowId+" name=certQty"+data.rowId+" value='"+data.quantity+"' title='"+data.quantity+"' size=18 maxlength=16 onChange='popMarketValue("+data.rowId+")' disabled style=text-align:right />" ;},
			
			function(data){
			return "<label>$</label><input type=text id=certMarketValue"+data.rowId+" disabled name=certMarketValue"+data.rowId+" value='"+(data.quantity*((null==priceOnly)?0.0:priceOnly)).toFixed(2)+"' title='"+(data.quantity*((null==priceOnly)?0.0:priceOnly)).toFixed(2)+"' disabled style=text-align:right />" ;},
			
			function(data){
			if (userType=='cbibinq' && data.roleTypeCode == 'CBIBDEP') {
				if(data.compareCreateAndSysdateEqualsFlag) {
			    	hideDiv("cancelDepositButton",false);
			    	hideDiv("cibcRecButton",false);
			    	hideDiv("cibcUpdButton",false);
			    } else {
			    	hideDiv("cancelDepositButton",true);
			    	hideDiv("cibcRecButton",true);
			    	hideDiv("cibcUpdButton",true);
			    }
			}

			if (userType=='cbibinq' && data.roleTypeCode == 'CBOPDEP') {
				hideDiv("cancelDepositButton",true);
			}

			if (userType =='cbibinq' && data.roleTypeCode == 'CBOPDEP') {
				$('#certBody').attr('disabled',true);
				$('#docInfoDiv').attr('disabled',true);
				$('#negotiableInd').attr('disabled',true);
				$('#bearerInd').attr('disabled',true);
				$('#deliverToBranch').attr('disabled',true);
				$('#pouchId').attr('disabled',true);
				$('#vpsId').attr('disabled',true);
				$('#statusCodes').attr('disabled',true);
				$('#quantOp').attr('disabled',true);
				$('#quantity').attr('disabled',true);
				$('#amtOp').attr('disabled',true);
				$('#amount').attr('disabled',true);
				$('#daysAgedOp').attr('disabled',true);
				$('#daysAged').attr('disabled',true);
				$('#cdate').attr('disabled',true);
				$('#branch').attr('disabled',true);
				$('#account').attr('disabled',true);
				$('#accountTypeCd').attr('disabled',true);
				$('#secType').attr('disabled',true);
				$('#secText').attr('disabled',true);
				$('#currencyCode').attr('disabled',true);
				$('#rstrIndChkBox').attr('disabled',true);
				$('#newComment').attr('disabled',true);
				$('#trailerDesc').attr('disabled',true);
				$('#foreignAddressTd').attr('disabled',true);
			}
			if (userType=='op' && $('#statusCodes').val() == 'CLOSED') {
				if(data.roleTypeCode == 'CBOPDEP') {
					hideDiv("cancelDepositButton",true);
					hideDiv("updButton",true);
				}
			}

			if (userType=='cbibinq' && dlvMsgType!= null && dlvMsgType == 'DLV') {
				hideDiv("ibUpdButton",true);
				hideDiv("cibcRecButton",false);
				hideDiv("cibcUpdButton",false);
			} else if(userType=='cbibinq') {
				if($('#statusCodes').val() == 'CLOSED' || !data.compareCreateAndSysdateEqualsFlag) {
				 	hideDiv("ibUpdButton",true);
				} else {
				hideDiv("ibUpdButton",false);
				}
				hideDiv("cibcRecButton",true);
				hideDiv("cibcUpdButton",true);
			}

			if(freeFormTrailerTabReqd == 'Y') {
				inquireTrailerDesc = data.trailerDesc;
			}
			if(statusVal!="CANCEL" && data.deletedCertInd!='Y' && actionSubType!='transinq')
			return "<input type=text id=certIssueDate"+data.rowId+" name=certIssueDate"+data.rowId+" value='"+data.issueDate+"' title='"+data.issueDate+"' />";
			else
			return "<input type=text id=certIssueDate"+data.rowId+" name=certIssueDate"+data.rowId+" disabled value='"+data.issueDate+"' title='"+data.issueDate+"' />";}];
			
			
			if(!isNewRow){
				cellFuncs[cellFuncs.length]=function(data){return "<input type=text id=certOfac"+data.rowId+" name=certOfac"+data.rowId+" value='"+data.ofac+"' title='"+data.ofac+"'  size=2 maxlength=1 disabled />";}
				cellFuncs[cellFuncs.length]=function(data){return "<input type=text id=certSic"+data.rowId+" name=certSic"+data.rowId+" value='"+data.sic+"' title='"+data.sic+"' size=2 maxlength=1 disabled />";}
			} else {  // for new row default value is 'U'
				cellFuncs[cellFuncs.length]=function(data){return "<input type=text id=certOfac"+data.rowId+" name=certOfac"+data.rowId+" value='U' title='"+data.ofac+"'  size=2 maxlength=1 disabled />";}
				cellFuncs[cellFuncs.length]=function(data){return "<input type=text id=certSic"+data.rowId+" name=certSic"+data.rowId+" value='U' title='"+data.sic+"' size=2 maxlength=1  disabled />";}
			}
			/*if(allowGiftInhInd =='Y') {	
				cellFuncs[cellFuncs.length]=function(data){
				if(statusVal!="CANCEL" && data.deletedCertInd!='Y')
				return (data.giftInhInd == 'G')?"<select id=giftInhInd"+data.rowId+" title='"+data.giftInhInd+"'> <option value='N'>Normal</option> <option value='G' selected>Gift</option> <option value='I'>Inheritance</option> </select>":(data.giftInhInd == 'I')?"<select id=giftInhInd"+data.rowId+" title='"+data.giftInhInd+"'> <option value='N'>Normal</option> <option value='G'>Gift</option> <option value='I' selected>Inheritance</option> </select>":"<select id=giftInhInd"+data.rowId+" title='"+data.giftInhInd+"'> <option value='N' selected>Normal</option> <option value='G'>Gift</option> <option value='I'>Inheritance</option> </select>";
				
				else             
                return (data.giftInhInd == 'G')?"<select id=giftInhInd"+data.rowId+" title='"+data.giftInhInd+"' disabled> <option value='N'>Normal</option> <option value='G' selected>Gift</option> <option value='I'>Inheritance</option> </select>":(data.giftInhInd == 'I')?"<select id=giftInhInd"+data.rowId+" title='"+data.giftInhInd+" disabled'> <option value='N'>Normal</option> <option value='G'>Gift</option> <option value='I' selected>Inheritance</option> </select>":"<select id=giftInhInd"+data.rowId+" title='"+data.giftInhInd+" disabled'> <option value='N' selected>Normal</option> <option value='G'>Gift</option> <option value='I'>Inheritance</option> </select>";}
			}*/
			// for 'ib' user allow delete, delivery and add only in INITIAL status
			if(actionType=='inquire' && (userType=='op' || userType=='rb' || ((userType=='cbibinq') && allowIBDelCerts=='Y' && statusVal =='INITIAL')) && statusVal !="HOLD"){
				if((userType=='op'|| userType=='rb') && allowDeliveryChkBoxInquire=="Y") {
					cellFuncs[cellFuncs.length]=function(data){
					
					if(statusVal!="CANCEL" && data.deletedCertInd!='Y' && actionSubType!='transinq')
					return "<input type='checkBox'  name='certDlvCheckBox"+data.rowId+"'  id='certDlvCheckBox"+data.rowId+"'  />";
					else
					return "<input type='checkBox'  name='certDlvCheckBox"+data.rowId+"' disabled id='certDlvCheckBox"+data.rowId+"'  />";
					}
				}
				if(statusVal =="INITIAL" || statusVal =="RECEIVE"  || statusVal=="CANCEL") {
					cellFuncs[cellFuncs.length]=function(data){
					if(isNewRow){
						return "<input type=image src=images/deRowImg.jpg id=delCertRow"+data.rowId+" name=delCertRow"+data.rowId+" width=15  height=15 value='deleteRow' onClick='delNewCertRow("+data.rowId+");' >";
					}
					else if(statusVal!="CANCEL"){
						
						if(data.deletedCertInd=='Y')
						return "<input type=checkbox id=delCertRow"+data.rowId+" name=delCertRow"+data.rowId+" title='"+data.deletedCertInd+"' checked onClick='updateTotQtyAndAmount();'/>";
						else
						return "<input type=checkbox id=delCertRow"+data.rowId+" name=delCertRow"+data.rowId+"  title='"+data.deletedCertInd+"' onClick='updateTotQtyAndAmount();'/>";
						
					
					}	else if(statusVal=="CANCEL"){
					
						return "<input type=checkbox id=delCertRow"+data.rowId+" disabled name=delCertRow"+data.rowId+"  />";
						
						}
						
					;}
				}
				cellFuncs[cellFuncs.length]=function(data){ return "";}
			} 
					
			dwr.util.addRows("certBody",data ,cellFuncs , {
			rowCreator:function(options){
			//cal.manageFields("butt"+options.rowIndex+"", "certIssueDate"+options.rowIndex+"", "%m/%d/%Y");
			var row=document.createElement("tr");	
			if(options.rowIndex%2==0){
				row.className="even";
			}else{
				row.className="odd";
			}
			row.id=options.rowIndex;
			
			return row;
			},
			cellCreator:function(options){
			options.escapeHtml=false;
			var cell=document.createElement('td');
			cell.align="center";
			return cell;
			},escapeHtml:false }						 
			 );
		
			 for(var i=0; i < document.getElementById("certBody").rows.length; i++)	{
				document.getElementById("certRegName"+i).value = document.getElementById("certRegName"+i).value.replace(/&apos;/g,"'");
				document.getElementById("certRegName"+i).title = document.getElementById("certRegName"+i).title.replace(/&apos;/g,"'");
			} 
}

/* certObjCreation=function(){
	var newcertArr=new Array();
	var oldCertArr=new Array();
	var ele=document.getElementById('certBody');
	if(ele.rows.length>0){
		if(userType=='op'){
		}
		for(var i=0;i<ele.rows.length;i++){
			newcertArr[i]={spsId:spsId,certPrefix:ele.rows[i].cells[0].value,certNbr:rows[i].cells[1].value,regName:rows[i].cells[2].value,quantity:rows[i].cells[3].value,marketValue:rows[i].cells[4].value,issueDate:rows[i].cells[5].value,ofac:rows[i].cells[6].value,sic:rows[i].cells[7].value};  
			oldCertArr[i]={spsId:spsId,certPrefix:ele.rows[i].cells[0].title,certNbr:rows[i].cells[1].title,regName:rows[i].cells[2].title,quantity:rows[i].cells[3].title,marketValue:rows[i].cells[4].title,issueDate:rows[i].cells[5].title,ofac:rows[i].cells[6].title,sic:rows[i].cells[7].title};
		}
	}
} */

addNewCert=function(){
	
	var secValue=document.getElementById('secVal').value;
	var cusipvalue=document.getElementById('cusipVal').value;
	var acVal="";
	acVal=document.getElementById("account").value;

	 var branch= $('#branch').val();
	 var bracc=branch+acVal;
	var latestIndex=document.getElementById('certBody').rows.length;
	
	if (limitCertDepositInd=='Y')
	{
	
	if (limitCertDepositValue!="" && latestIndex+1 > limitCertDepositValue)
	{
	alert("There is a limitation of "+limitCertDepositValue+" Certificates entered at Deposit");
	
	return false;
	}
	}
	var obj=[{spsId:spsId,certPrefix:"",certNbr:"",regName:"",quantity:"0",marketValue:"",issueDate:"",ofac:"",sic:"",rowId:latestIndex}];
	createCertRows(obj,true);
//cal.manageFields("butt"+latestIndex+"", "certIssueDate"+latestIndex+"", "%m/%d/%Y");
	//$(function() {
		var inputDate = $("#certIssueDate"+latestIndex);
		var changeYearButtons = function() {
    	changeMonthAndYear(inputDate);
		};
		$("#certIssueDate"+latestIndex).datepicker({
		beforeShow: changeYearButtons,
    	onChangeMonthYear: changeYearButtons,
		showOn: 'button',
		buttonImage: 'images/calendar.png'});
	//});

	bearerChange();
	if(allowOfacCheckBySec!="" && allowOfacCheckBySec=='Y')
	{
	ofacCheckBySecurity(bwADPNum,bwCUSIP,latestIndex,bracc);
	}
	
}

/*saveextraCert=function(rowId,spsId){
	if(ele.rows[i].cells[5].childNodes[1]){action="I";}else{action="U"}
	if(false==validateNewCert(rowId)){return false;}
	var certnewObj={spsId:spsId,certPrefix:getActualValue(certNames[0]+rowId),certNbr:getActualValue(certNames[1]+rowId),regName:getActualValue(certNames[2]+rowId),quantity:getActualValue(certNames[3]+rowId),issueDate:getActualValue(certNames[5]+rowId),ofac:getActualValue(certNames[6]+rowId),sic:getActualValue(certNames[7]+rowId)};
	secCont.saveCerts(certnewObj,function(result){alert(result);getCertifs();});
}*/
function validateField(field) {//AlphaNumericSpcChars  ^[a-zA-Z0-9 ]*$ are allowable characters
    var regex = "^[a-zA-Z0-9 ]*$";
    var re = new RegExp(regex);
    if (!field.match(re)) {
     //alert("Please enter valid value");
      field.value="";
    }
  }
  
function validateNumberField(field) {
    var regex = "^[0-9]*$";
    var re = new RegExp(regex);
    if (!field.match(re)) {
      alert("Please enter valid number value");
      field.value="";
    }
  }
delNewCertRow=function(delRowId){
	var ele=document.getElementById("certBody");
	
	if (delRowId != null)
	{
		ele.deleteRow(delRowId);
		//update rowId for the rows following the deleted row
		var txtCertPrf='';
		var txtCertNbr='';
		var txtReg='';
		var txtQty='';
		var txtMval='';
		var txtDt='';
		var txtOfac='';
		var txtSic='';
		var txtGiftInd='';
		//var nameArr=["certPrefix","certNbr","certRegName","certQty","certMarketValue","certIssueDate","certOfac","certSic","certDlvCheckBox"]; change the element id and names individually
		//update rowId for the rows following the deleted row. (Note: Newly added rows will always be followed by the existing certs rows)
		for(var i=delRowId;i<=ele.rows.length-1;i++){
			ele.rows[i].rowId=i;
			var colIndex=0;
			//you cannot call a java class directly in JS like ESAPI.encoder().decodeForHTML
			txtCertPrf=ele.rows[i].cells[colIndex].firstChild.value;
			validateField(txtCertPrf);
			ele.rows[i].cells[colIndex++].innerHTML="<input type=text id=certPrefix"+i+" name=certPrefix"+i+" maxlength=4 size=5 onkeyup=moveOnMax(this,'certNbr"+i+"') onBlur=toUpper(this) value="+txtCertPrf+" >";
			
			txtCertNbr=ele.rows[i].cells[colIndex].firstChild.value;
			validateField(txtCertNbr);
			ele.rows[i].cells[colIndex++].innerHTML="<input type=text id=certNbr"+i+" name=certNbr"+i+" maxlength=12 size=14 onkeyup=moveOnMax(this,'certRegName"+i+"') onBlur=toUpper(this) value="+txtCertNbr+" >";
			
			txtReg=ele.rows[i].cells[colIndex].firstChild.value;
			validateField(txtReg);
			ele.rows[i].cells[colIndex++].innerHTML="<input type=text id=certRegName"+i+" name=certRegName"+i+" size=40 onChange='toUpper(this);checkOfac(this);' value='"+txtReg+"'>";
			
			txtQty=ele.rows[i].cells[colIndex].firstChild.value;
			validateNumberField(txtQty);
			ele.rows[i].cells[colIndex++].innerHTML="<input type=text id=certQty"+i+" name=certQty"+i+" style=text-align:right size=18 maxlength=16 onChange=popMarketValue("+i+") value="+txtQty+" >";
			
			txtMval=ele.rows[i].cells[colIndex].firstChild.value;
			validateField(txtMval);
			ele.rows[i].cells[colIndex++].innerHTML="<label>$</label><input type=text id=certMarketValue"+i+" name=certMarketValue"+i+" disabled style=text-align:right value="+txtMval+" >";
			
			txtDt=ele.rows[i].cells[colIndex].firstChild.value;
			ele.rows[i].cells[colIndex++].innerHTML="<input type=text id=certIssueDate"+i+" name=certIssueDate"+i+" value="+txtDt+" >";
			
			txtOfac=ele.rows[i].cells[colIndex].firstChild.value;
			validateField(txtOfac);
			ele.rows[i].cells[colIndex++].innerHTML="<input type=text id=certOfac"+i+" name=certOfac"+i+" size=2 maxlength=1 disabled value="+txtOfac+" >";
			
			txtSic=ele.rows[i].cells[colIndex].firstChild.value;
			validateField(txtSic);
			ele.rows[i].cells[colIndex++].innerHTML="<input type=text id=certSic"+i+" name=certSic"+i+" size=2 maxlength=1 disabled value="+txtSic+" >";
				
			/*if(allowGiftInhInd =='Y') {		
				txtGiftInd=ele.rows[i].cells[colIndex].firstChild.value; 
				ele.rows[i].cells[colIndex++].innerHTML="<select id=giftInhInd"+i+"> <option value='N'>Normal</option> <option value='G'>Gift</option> <option value='I'>Inheritance</option> </select>";
				dwr.util.setValue("giftInhInd"+i,txtGiftInd);
			}*/
			
			if((userType=='op'||userType=='rb' )&& actionType=='inquire' && statusVal !="HOLD"){
				if(allowDeliveryChkBoxInquire=='Y')
				ele.rows[i].cells[colIndex++].innerHTML="<input type=checkBox id=certDlvCheckBox"+i+" name=certDlvCheckBox"+i+" >";
				
				if(statusVal =='INITIAL' || statusVal =='RECEIVE') {
					ele.rows[i].cells[colIndex].innerHTML="<input type=image src=images/deRowImg.jpg id=delCertRow"+i+" name=delCertRow"+i+" width=15 height=15 value=deleteRow  onClick=delNewCertRow("+i+")>";
				}	
			}
			//cal.manageFields("butt"+i+"", "issueDate"+i+"", "%m/%d/%Y");
			//$(function() {
				var inputDate = $("#certIssueDate"+i);
				var changeYearButtons = function() {
		    	changeMonthAndYear(inputDate);
				};
				$("#certIssueDate"+i).datepicker({
				beforeShow: changeYearButtons,
		    	onChangeMonthYear: changeYearButtons,
				showOn: 'button',
				buttonImage: 'images/calendar.png'
				});
			//});
		}
		updateTotQtyAndAmount();  //update total qty after updating the rowIds
	}
	else
	{
	    alert("delRowId is null");
	}
}

/* updateCerts=function(rowId,spsId){
	var certnewObj={spsId:spsId,certPrefix:getActualValue(certNames[0]+rowId),certNbr:getActualValue(certNames[1]+rowId),regName:getActualValue(certNames[2]+rowId),quantity:getActualValue(certNames[3]+rowId),marketValue:getActualValue(certNames[4]+rowId),ofac:getActualValue(certNames[6]+rowId),sic:getActualValue(certNames[7]+rowId)};
	var certOldObj={spsId:spsId,certPrefix:getTitle(certNames[0]+rowId),certNbr:getTitle(certNames[1]+rowId),regName:getTitle(certNames[2]+rowId),quantity:getTitle(certNames[3]+rowId),marketValue:getTitle(certNames[4]+rowId),ofac:getTitle(certNames[6]+rowId),sic:getTitle(certNames[7]+rowId)};
	var dataChangeVar=false;
	var count=0;
	for(oldProp in certOldObj){
		if(certnewObj[oldProp]!=certOldObj[oldProp]){
			dataChangeVar=true;
			count++;
		}else{
			certnewObj[oldProp]=null;
		}
	}

	if(false==dataChangeVar){
		alert("No Changes found to update");
		return false;
	}
	secCont.certificatesupdate(certOldObj,certnewObj,count,function(result){alert(result);});
} */

function checkOfac(ele){
	var val=ele.value;
	//val=trim(val).replace(/[&<>]/g," ");
	val=trim(val).replace(/[&]/g,"&amp;").replace(/[<]/g,"&lt;").replace(/[>]/g,"&gt;"); //Convert the special char to escape seq
	if(val=="") return false;
	var num=ele.id.substring("certRegName".length);
	//var host=getHostType();
	if (countryCode == "CA") {
		document.getElementById("ofac"+rowNum).value="N";
		document.getElementById("sic"+rowNum).value="U";
	} else {
		document.getElementById("certSic"+num).value="U";
		document.getElementById("certOfac"+num).value="U";
		enableDisableUpdButtons(true);
		secCont.ofacCheck(val,function(check){
			document.getElementById("certOfac"+num).value=check;
			document.getElementById("certSic"+num).value="U";
			enableDisableUpdButtons(false);
		});
	}
}

function checkOfacDwac(){
//alert("ERROR");
	var val=document.getElementById("dwacRegName").value;
	//val=trim(val).replace(/[&<>]/g," ");
/*	var brVal=dwr.util.getValue("branch");
	secCont.getAccountDec(brval,acVal,function(result){
			resultName=result[0];		
			$(".hiddenClass").removeClass("hiddenvariable");
			checkOfac(resultName);
		});*/
	val=trim(val).replace(/[&]/g,"&amp;").replace(/[<]/g,"&lt;").replace(/[>]/g,"&gt;"); //Convert the special char to escape seq
	if(val=="") return false;
	//var num=ele.id.substring("dwacRegName".length);
	//var host=getHostType();
	if (countryCode == "CA") {
		document.getElementById("ofac"+rowNum).value="N";
		document.getElementById("sic"+rowNum).value="U";
	} else {
		//document.getElementById("certSic"+num).value="U";
		document.getElementById("checkDwacOfac").value="U";
		enableDisableUpdButtons(true);
		secCont.ofacCheck(val,function(check){
			document.getElementById("checkDwacOfac").value=check;
			//document.getElementById("certSic"+num).value="U";
			enableDisableUpdButtons(false);
		});
	}
}

function enableDisableUpdButtons(disable){
	switch(userType) {
			case "op": 	var acptButtonEle = document.getElementById("acptButton");
						if (acptButtonEle != null) {
							acptButtonEle.disabled=disable;
						}
						var rejButtonEle = document.getElementById("rejButton");
						if (rejButtonEle != null) {
							rejButtonEle.disabled=disable;
						}
						var updButtonEle = document.getElementById("updButton");
						if (updButtonEle != null) {
							updButtonEle.disabled=disable;
						}
						var dtcAcptButtonEle = document.getElementById("dtcAcptButton");
						if (dtcAcptButtonEle != null) {
						    dtcAcptButtonEle.disabled=disable;
						}
						break;
			case "rb": 	var acptButtonEle = document.getElementById("acptButton");
						if (acptButtonEle != null) {
							acptButtonEle.disabled=disable;
						}
						var rejButtonEle = document.getElementById("rejButton");
						if (rejButtonEle != null) {
							rejButtonEle.disabled=disable;
						}
						var updButtonEle = document.getElementById("updButton");
						if (updButtonEle != null) {
							updButtonEle.disabled=disable;
						}
                        var dtcAcptButtonEle = document.getElementById("dtcAcptButton");
                        if (dtcAcptButtonEle != null) {
                            dtcAcptButtonEle.disabled=disable;
                        }
						break;
			case "sp": 	var clnupButtonEle = document.getElementById("clnupButton");
						if (clnupButtonEle != null) {
							clnupButtonEle.disabled=disable;
						}
						break;
			case "margin": 	var acptButtonEle = document.getElementById("acptButton");
							if (acptButtonEle != null) {
								acptButtonEle.disabled=disable;
							}
							var rejButtonEle = document.getElementById("rejButton");
							if (rejButtonEle != null) {
								rejButtonEle.disabled=disable;
							}
							break;
			case "ib": 	var ibUpdButtonEle = document.getElementById("ibUpdButton");
						if (ibUpdButtonEle != null) {
							ibUpdButtonEle.disabled=disable;
						}
						break;
			case "cbibinq": var cibcRecButtonEle = document.getElementById("cibcRecButton");
							if (cibcRecButtonEle != null) {
								cibcRecButtonEle.disabled=disable;
							}
							var cibcUpdButtonEle = document.getElementById("cibcUpdButton");
							if (cibcUpdButtonEle != null) {
								cibcUpdButtonEle.disabled=disable;
							}
							var ibUpdButtonEle = document.getElementById("ibUpdButton");
							if (ibUpdButtonEle != null) {
								ibUpdButtonEle.disabled=disable;
							}
							break;
		}
}

priceVal=function(){
	var price=trim(document.getElementById("price").innerHTML);
		if(bondTypePriceCheck=='Y') {
		return (parseFloat(price)/100);  //Bond pricing is based on 100 units.
	} else {
		return parseFloat(price);
	}

}

origPrice=function() {
	var price=trim(document.getElementById("price").innerHTML);
	return parseFloat(price);
}

popMarketValue=function(dId){
//if(secPrice.desc=='Security Not Found'){alert("Invalid Security. This change is not allowed");secPrice.price=0;}
	var price=priceVal();
	var cQty=document.getElementById('certQty'+dId).value;
	if(price!=null){
		var marketVal=(cQty*price).toFixed(2);
	}else{
		var marketVal=(cQty*0.0).toFixed(2);
	}
	if(!isNaN(marketVal)){
		document.getElementById('certMarketValue'+dId).value=marketVal;
	}
	
	// Update total qty and amount
	if(!isNaN(cQty)){
		updateTotQtyAndAmount();
	} 
	
}

updateTotQtyAndAmount=function(){

	var price=priceVal();
	var totQty=0;
	var rQty=0;
	for(var i=0; i<document.getElementById('certBody').rows.length;i++) {
		rQty=document.getElementById('certQty'+i).value;
		//alert(rQty+"::"+document.getElementById("delCertRow"+i).checked+"::"+i);
		if(document.getElementById("delCertRow"+i)!=null){
		if(!isNaN(rQty) && !document.getElementById("delCertRow"+i).checked) {
			totQty +=parseFloat(rQty);
		}
		}
		
		else{
		
		if(!isNaN(rQty)) {
			totQty +=parseFloat(rQty);
		}
		}
		
	}
	document.getElementById('quantity').value=totQty.toFixed(5);
	//document.getElementById('quantity').value=totQty.toFixed(2);
	if(price!=null) {
		document.getElementById('amount').value=(totQty*price).toFixed(2);
	} else {
		document.getElementById('amount').value=(totQty*0.0).toFixed(2);
	}
}

updateAmtOnCusipChange=function(){
	var price=priceVal();
	if(price!=null) {
		var totQty=0;
		var rQty=0;
		for(var i=0; i<document.getElementById('certBody').rows.length;i++) {
			rQty=document.getElementById('certQty'+i).value;
			
			if(!isNaN(rQty)) {
				totQty +=parseFloat(rQty);
				document.getElementById('certMarketValue'+i).value = (rQty*price).toFixed(2);
				//alert("cert amt -"+(rQty*price).toFixed(2));
			}
		}
		//alert (totQty);
		if (totQty!=0)
		{document.getElementById('amount').value=(totQty*price).toFixed(2);}
	}
}

popDwacAmount=function(){
	var qty=document.getElementById('dwacDepositsBody').rows[0].cells[1].firstChild.value;
	//var qty=document.getElementById('dwacQty0').value;
	var price=trim(document.getElementById("price").innerHTML);
	if(!isNaN(qty) && price!=null){	
		document.getElementById('quantity').value=qty;
		//document.getElementById('quantity').value=(qty*1.0).toFixed(2);
		document.getElementById('amount').value=(qty*price).toFixed(2);
	}
	
	var letters = /^[0-9]+$/;
	var quantityConfirm=false;
	var inputObj=document.getElementById('quantity').value;
	if(trim(inputObj).match(letters))
	{
		return true;
	}
	else
	{
		quantityConfirm=confirm("Quantity is fractional, deposit will be rejected at DTC. Do you want to continue with this deposit?");
		return true;
	}
	
}


deliveryCheck=function(checkType){
	var ele=document.getElementById('certBody');
	if(allowDeliveryChkBoxInquire=="Y" ){
	if(document.getElementById('deliverChkBox').checked){
		for(var i=0;i<ele.rows.length;i++){
			document.getElementById("certDlvCheckBox"+i).checked=true;
		}
		
	}else{
		for(var i=0;i<ele.rows.length;i++){
			document.getElementById("certDlvCheckBox"+i).checked=false;
		}
	
	}
	}

}

/* retPrice=function(){
var secValue=document.getElementById('secText').value;
secValue=trim(secValue);
var secType=dwr.util.getValue('secType');
secType=trim(secType);
if(secValue=="" || secType==""){return false;}
secCont.getSecDesc(secType,secValue,function(result){
secPrice=result;
});
} */

validateNewCert=function(rowId){
	var errorStr="";
	var cerNames=["certPrefix","certNbr","certRegName","certQty","certMarketValue"];
	var tmp=document.getElementById(cerNames[0]+rowId).value; 
	errorStr=errorStr+ValidateAlpha(tmp,"Cerificate Prefix",4,false);
	tmp=document.getElementById(cerNames[1]+rowId).value; 
	errorStr=errorStr+ValidateAlpha(tmp,"Cerificate Number",12,false);
	tmp=document.getElementById(cerNames[2]+rowId).value; 
	errorStr=errorStr+ValidateAlphaSpace(tmp,"Registration Name",150,false);
	tmp=document.getElementById(cerNames[3]+rowId).value; 
	errorStr=errorStr+ValidateReal(tmp,"Quantity");
	errorStr=trim(errorStr);

	if(errorStr!=""){
		alert(errorStr.replace(/<br>/gi,"\n"));return false
	}else{
		return true;
	}
}

getForeignAddress=function(){
	
var cmnt=null;
var addArr = new Array();
 
	var rowId=0;
	// dwr.util.useLoadingMessage();
		//dwr.engine.beginBatch();
	dwr.util.removeAllRows("foreignAddressBody");
	
	secCont.getDwacDrsDeposits(spsId,locMovId,function(data){
			 var cellFuncs=[
			function(data){
			var foreignAddr = (data.address != null?data.address:"");
			addArr=foreignAddr.split("|");
			return "<input tabindex="+(rowId+1)+" type=text id='foreignAddress1' name='foreignAddress1' size=35 maxLength=33 value='"+(addArr[0]!=null?addArr[0]:"")+"'/>"; },
			function(data){return "<input tabindex="+(rowId+1)+" type=text id='foreignAddress2' name='foreignAddress2' size=35 maxLength=33 value='"+(addArr[1]!=null?addArr[1]:"")+"'/>"; },
			function(data){return "<input tabindex="+(rowId+1)+" type=text id='foreignAddress3' name='foreignAddress3' size=35 maxLength=33 value='"+(addArr[2]!=null?addArr[2]:"")+"'/>" ;},
			function(data){return "<input tabindex="+(rowId+1)+" type=text id='foreignAddress4' name='foreignAddress4' size=35 maxLength=33 value='"+(addArr[3]!=null?addArr[3]:"")+"'/>" ;}
			];
			
		//onChange='showHideRegNameSSN();'
			dwr.util.addRows("foreignAddressBody",data ,cellFuncs ,{
				rowCreator:function(options){
				//rid = options.rowIndex;
				var row=document.createElement("tr");
				return row;
				},
				cellCreator:function(options){
				options.escapeHtml=false;
				var cell=document.createElement('td');
				cell.align="center";
				return cell;
				},escapeHtml:false }						 
			 );
		});
		// dwr.engine.endBatch();
		
}
getDwacDeposits=function(){
	
var cmnt=null;  
	var rowId=0;
	// dwr.util.useLoadingMessage();
		//dwr.engine.beginBatch();
	dwr.util.removeAllRows("dwacDepositsBody");
	var dest = document.getElementById("destination").value;

	
	/* getForeignAddress(); */
	secCont.getDwacDrsDeposits(spsId,locMovId,{ async:false, callback:function(data){
	        var tind;
	        var suretyNum;
	        var clientno=document.getElementById('clientid').value;
	        
	        var entitled= document.getElementById('entitled').value;
	        
	        var approveEntitled=document.getElementById('isapproveEntitled').value;
	        var updateEntitled=document.getElementById('isupdateEntitled').value;
	    	var marginentitled=document.getElementById('marginentitled').value;
			var cellFuncs=[
				
			function(data){
			return "<input tabindex="+(rowId+1)+" type=text id='dwacSpsId' name='dwacSpsId'  title='"+spsId+"' value='"+spsId+"' readOnly/>"; },
			function(data){

				if((updateEntitled=="true" && approveEntitled=="true") || (Apprrjt=="true" && MarginUpd=="true") || updateEntitled=="true" || MarginUpd=="true" )
					{
					
				return "<input tabindex="+(rowId+1)+"  type=text id='dwacQty' name='dwacQty' title='"+data.quantity+"' value='"+data.quantity+"'  maxlength=9 onChange='popDwacAmount()'; />"; 
					}
				else
					{
					return "<input tabindex="+(rowId+1)+"  type=text id='dwacQty' name='dwacQty' title='"+data.quantity+"' value='"+data.quantity+"' readOnly maxlength=9 onChange='popDwacAmount()'; />"; 
					}
					
				},
			
			function(data){
					
					if((updateEntitled=="true" && approveEntitled=="true") ||  (Apprrjt=="true" && MarginUpd=="true") || updateEntitled=="true" || MarginUpd=="true" )
						{
				return "<input tabindex="+(rowId+1)+" type=text id='dwacTrsAcct' name='dwacTrsAcct' title='"+data.transferAccount+"'  value='"+data.transferAccount+"' />" ;
				
						}
					
					else
						{
						return "<input tabindex="+(rowId+1)+" type=text id='dwacTrsAcct' name='dwacTrsAcct' title='"+data.transferAccount+"' readOnly  value='"+data.transferAccount+"' />" ;

						}
						
						},
				
			function(data){
				
				if((updateEntitled=="true" && approveEntitled=="true") ||  (Apprrjt=="true" && MarginUpd=="true") || updateEntitled=="true" || MarginUpd=="true")
				{
				return "<input tabindex="+(rowId+1)+"  type=text id='dwacSsn' name='dwacSsn' title='"+data.ssnNumber+"' value='"+data.ssnNumber+"'  onChange='showHideRegNameSSN();' />" ;
				
				}	
			else
				{
				return "<input tabindex="+(rowId+1)+"  type=text id='dwacSsn' name='dwacSsn' title='"+data.ssnNumber+"' value='"+data.ssnNumber+"' readOnly onChange='showHideRegNameSSN();' />" ;

				}
				 },
						
			function(data){
					 
					 if((updateEntitled=="true" && approveEntitled=="true") ||(Apprrjt=="true" && MarginUpd=="true") || updateEntitled=="true" || MarginUpd=="true")
						 {
			return "<input tabindex="+(rowId+1)+"  type=text id='dwacRegName' name='dwacRegName' title='"+data.regName+"' value='"+data.regName.replace(/\'/g,'&apos;')+"'  onChange='toUpper(this);showHideRegNameSSN();checkOfacDwac();'/>" ;
					 
						 }
					 else
						 {
							return "<input tabindex="+(rowId+1)+"  type=text id='dwacRegName' name='dwacRegName' title='"+data.regName+"' value='"+data.regName.replace(/\'/g,'&apos;')+"' readOnly  onChange='toUpper(this);showHideRegNameSSN();checkOfacDwac();'/>" ;

						 }
				 },//
				 
			//function(data){return (data.inOutInd =='I')?"<select tabindex="+(rowId+1)+" id='dwacInOut' name='dwacInOut' title='"+data.inOutInd+"'  ><option value='I' selected>Incoming</option><option value='O'>Outgoing</option></select>":"<select id=dwacInOut name=dwacInOut title='"+data.inOutInd+"'   ><option value='I'>Incoming</option><option value='O' selected>Outgoing</option></select>";},
			//
			function(data){
				if(data.inOutInd =='I' || data.inOutInd == null){
					if((updateEntitled=="true" && approveEntitled=="true") || (Apprrjt=="true" && MarginUpd=="true") || updateEntitled=="true" || MarginUpd=="true")
						{
						return "<select id=dwacInOutI name=dwacInOutI onChange='showHideRegNameSSN();'  title='"+data.inOutInd+"'><option value='I' selected>Incoming</option><option value='O'>Outgoing</option></select>";

						}
					else
						{
				
					return "<select id=dwacInOutI name=dwacInOutI onChange='showHideRegNameSSN();' disabled  title='"+data.inOutInd+"'><option value='I' selected>Incoming</option><option value='O'>Outgoing</option></select>";
				}
				}
					else
				{
					
						if((updateEntitled=="true" && approveEntitled=="true") || (Apprrjt=="true" && MarginUpd=="true") || updateEntitled=="true" || MarginUpd=="true")
						{

						   return "<select id='dwacInOutO' name='dwacInOutO' onChange='showHideRegNameSSN();'  title='"+data.inOutInd+"'><option value='I'>Incoming</option><option value='O' selected>Outgoing</option></select>";

						}
					else
						{
				   return "<select id='dwacInOutO' name='dwacInOutO' onChange='showHideRegNameSSN();' disabled  title='"+data.inOutInd+"'><option value='I'>Incoming</option><option value='O' selected>Outgoing</option></select>";
				}
			}
				
			},
			
			function(data){
			
			return "<input tabindex="+(rowId+1)+"  type=text id='checkDwacOfac' name='checkDwacOfac' title='"+data.ofacCheck+"' value='"+data.ofacCheck+"' disabled=true />" ;},
			
		   function(data){
			if (dest == 'DRS'){
			return "<input class=cHidden id=incMemSegInq name=incMemSeg title='"+data.incMemSeg+"' value='"+data.incMemSeg+"' disabled=true />";
					
					} else {
					return "<input tabindex="+(rowId+1)+" class=cVisible type=text id='incMemSegInq' name='incMemSeg' title='"+data.incMemSeg+"' value='"+data.incMemSeg+"' disabled=true />" ;
				}
			},
			
			function(data){
				suretyNum = data.suretyNumber;
				if (dest == 'DRS') {  
					
					if((updateEntitled=="true" && approveEntitled=="true") || (Apprrjt=="true" && MarginUpd=="true") || updateEntitled=="true" || MarginUpd=="true")
						{
					return "<select class=cVisible id='suretyNumber'' name='suretyNumber'  title='"+data.suretyNumber+"'/>";
				     }
				else
					{
					return "<select class=cVisible id='suretyNumber''  name='suretyNumber' disabled title='"+data.suretyNumber+"'/>";
					}
				} else {
					
					if((updateEntitled=="true" && approveEntitled=="true") || (Apprrjt=="true" && MarginUpd=="true") || updateEntitled=="true" || MarginUpd=="true")
						{
					return "<select class=cHidden id='suretyNumber'  name='suretyNumber' title=''/>";
						}
					
					else
						{
						return "<select class=cHidden id='suretyNumber' disabled name='suretyNumber' title=''/>";
						}
				}
			},
			function(data){
				var foreignAddr1 = (data.address != null?data.address:"");
				addArrCache=foreignAddr1.split("|");
				tind = data.quantityInputInd;
				if (dest == 'DRS') {
					
					if((updateEntitled=="true" && approveEntitled=="true") || (Apprrjt=="true" && MarginUpd=="true") || updateEntitled=="true" || MarginUpd=="true")
						{
						
					return "<select class=cVisible id='quantityTransmission' name='quantityTransmission'  title='"+data.quantityInputInd+"'/>";
						}
					else
						{
						return "<select class=cVisible id='quantityTransmission' name='quantityTransmission' disabled title='"+data.quantityInputInd+"'/>";
						}
				} else {
					
					if((updateEntitled=="true" && approveEntitled=="true") || (Apprrjt=="true" && MarginUpd=="true") || updateEntitled=="true" || MarginUpd=="true")
						{
					return "<select class=cHidden id=quantityTransmission name=quantityTransmission  title=''/>";
						}
					else
						{
						return "<select class=cHidden id=quantityTransmission name=quantityTransmission disabled title=''/>";

						}
				}
			}

			];
			
		//onChange='showHideRegNameSSN();'
		var tdId = 0;
			dwr.util.addRows("dwacDepositsBody",data ,cellFuncs ,{
				rowCreator:function(options){
				//rid = options.rowIndex;
				var row=document.createElement("tr");
				return row;
				},
				cellCreator:function(options){
				options.escapeHtml=false;
				var cell=document.createElement('td');
				cell.align="center";
				cell.id = "td_"+options.rowIndex;
				options.rowIndex++;
				return cell;
				},escapeHtml:false 
			});
			//alert("tind:"+tind);
			dwr.util.addOptions("quantityTransmission",['Loading...']);
			configurationsCont.getLookupValuesNew("QUANTITY_TRANSMISSION", function(data2)
			{
				dwr.util.removeAllOptions("quantityTransmission");
				if(data2.length==0)
				{
					dwr.util.addOptions("quantityTransmission",['No Data Found']);
					return;
				}
				else
				{
					dwr.util.addOptions("quantityTransmission",[{id:"",desc:"--Please Select--"}],'id','desc');
					dwr.util.addOptions("quantityTransmission",data2);
				}
				//var clrNbr1=data.quantityInputInd;
				
				var qty_trans=document.getElementById("quantityTransmission");
				qty_trans.title = tind;
				//alert("qty_trans.class:"+qty_trans.class);
				for(var i=0;i<qty_trans.options.length;i++){
					if(tind==qty_trans.options[i].value){
						qty_trans.options[i].selected=true;
					}
				}
				//createDynamicDivs(data);
			});
			dwr.util.addOptions("suretyNumber",["Loading..."]);
			DWA.getSuretyNumbers(function(result){
				dwr.util.removeAllOptions("suretyNumber");
				if(null==result){
					dwr.util.addOptions("suretyNumber",["Not Loaded"]);
					document.getElementById("suretyNumber").options[0].style.backgroundColor="#FF9F9F";
				}else{
					dwr.util.addOptions("suretyNumber",result);
				}
				var surety_num=document.getElementById("suretyNumber");
				surety_num.title = suretyNum;
				//alert("qty_trans.class:"+qty_trans.class);
				for(var i=0;i<surety_num.options.length;i++){
					if(suretyNum==surety_num.options[i].value){
						surety_num.options[i].selected=true;
					}
				}
			});
		}});
		// dwr.engine.endBatch();
			if (dest == 'DRS'){
		hideDiv("quantityTransmissionTh",false);
		hideDiv("suretyNumberTh",false);
		hideDiv("incMemSegTh",true);
		//$("#incMemSegInq").hide();
		//table td id hardcode for incMemSeg
		$("#td_7").hide();
	} else {
		hideDiv("quantityTransmissionTh",true);
		hideDiv("suretyNumberTh",true);
		hideDiv("incMemSegTh",false);
		//$("#incMemSegInq").show();
		$("#td_7").show();
	}
}


repairDocFetch=function(){
	
	document.getElementById("specEvent").className="cHidden";
	document.getElementById("newEvents").className="cHidden";
	docEventId=null;
	getAllDocs();
	repairDocsRet();
	
	
}


repairDocsRet=function(){
	dwr.util.removeAllRows("docBody");
	var rid=0;
	docs.getSavedEventDocs(spsId,locMovId, function(result){
	//	alert ("1-bdsClientIndInq:"+bdsClientIndInq+"-userType:"+userType);
	
		var cellFuncs=[ function(data){return "<input type='HIDDEN' value='"+data.id+"' />"+data.desc;},
					   
						
						 function(data){
						 return ((null==data.recivedDt || ''==data.recivedDt)|| userType!='ib' || userType != 'cbibinq')?"<input type='checkbox' />":"<label class='ui-label' >"+(null==data.recivedDt || ''==data.recivedDt ?'' : data.recivedDt)+"</label>";
						 
						 }];
						if(bdsClientIndInq!='Y' || userType!='ib' || userType!='cbibinq'){
						cellFuncs[cellFuncs.length]=function(data){return "<input type='text' size=75 maxlength=150 value='"+data.comments+"'  title='"+data.comments+"' >";}
					
					cellFuncs[cellFuncs.length]=function(data){return data.createDt;}
					
					
						if(allowDelDocAfterReceive =='Y' && (userType!='ib' || userType!='cbibinq')) {	
							cellFuncs[cellFuncs.length]=function(data){return "<input type=checkbox id=delDocRow"+rid+" name=delDocRow"+rid+" />";}
						} else {
							cellFuncs[cellFuncs.length]=function(data){return (null==data.recivedDt|| ''==data.recivedDt)?"<input type=checkbox id=delDocRow"+rid+" name=delDocRow"+rid+" />":"<input type=checkbox disabled id=delDocRow"+rid+" name=delDocRow"+rid+" />";}
						}
						}
		dwr.util.addRows("docBody",result ,cellFuncs , {
			rowCreator:function(options){
			rid = options.rowIndex;
			//alert("rid in loop"+ rid);
			var row=document.createElement("tr");
			if(options.rowIndex%2==0){
				row.className="even";
			}else{
				row.className="odd";
			}

			row.id=options.rowIndex;
			return row;
			},
			cellCreator:function(options){
			options.escapeHtml=false;
			var cell;
			cell=document.createElement('td');
			cell.align="center";
			return cell;
			},escapeHtml:false });
			
	});
}


docFetch=function(){
   if(screenType=="REPAIR_QUEUE" && allowSpecifyOnRepairToInquire=='Y'){
   repairDocFetch();
   }
    else{
	dwr.engine.beginBatch();
	docEventId=null;
	var status=getActualValue("statusCodes");
	if(status=='RECEIVE'){
		document.getElementById('newEvents').className="cVisible";
		document.getElementById('specEvent').className="cVisible";
		populateEvents();
	}else{
		dwr.util.removeAllOptions("specEvent");
		document.getElementById('newEvents').className="cHidden";
		document.getElementById('specEvent').className="cHidden";
	}
	getAllDocs();
	existingDocsRet();
	dwr.engine.endBatch();
	}
}

populateEvents=function(){
	dwr.util.addOptions("specEvent",['Fetching, Please wait...']);
	docs.getEvents(function(data){//dwr.util.removeAllOptions("destination");
		dwr.util.removeAllOptions("specEvent");
		if(null!=data){
			dwr.util.addOptions("specEvent",[{id:"",desc:"--Please Select--"}],'id','desc');
			dwr.util.addOptions("specEvent",data,'id','desc');
		}else{	
			dwr.util.addOptions("specEvent",[{id:"",desc:'No Events Found'}],'id','desc');
			document.getElementById('specEvent').options[0].style.backgroundColor="#FF9F9F";
		}
	});
}


getAllDocs=function(){
	dwr.util.addOptions("allDocs",['Fetching, Please wait...']);
	docs.getAllDocs(function(result){
	dwr.util.removeAllOptions("allDocs");
		if(result!=null){
			dwr.util.addOptions("allDocs",[{id:null,desc:"--Please Select--"}],'id','desc');
			dwr.util.addOptions("allDocs",result,'id','desc');
		}else{
			dwr.util.addOptions("allDocs",[{id:null,desc:"No Data Found"}],'id','desc');
			document.getElementById('allDocs').options[0].style.backgroundColor="#FF9F9F";
		}
	});
}


existingDocsRet=function(){
	dwr.util.removeAllRows("docBody");
	var rid=0;
	docs.getSavedEventDocs(spsId,locMovId, function(result){
		if((null==result) || (0==result.length)){
			document.getElementById('specEvent').className="cVisible";
			populateEvents();
		}
	//alert ("2-bdsClientIndInq:"+bdsClientIndInq+"-userType:"+userType);
		var cellFuncs=[ function(data){return "<input type='HIDDEN' value='"+data.id+"' />"+data.desc;},
					    function(data){
				
					    if (userType!='ib' || userType!='cbibinq')
					    {
					    	if(allowShippedDtind=='Y' && userType=='ib'){
					    return ((null==data.recivedDt || ''==data.recivedDt) )?"<input name='docCheckBox' id='docCheckBox' disabled type='checkbox' />":"<label class='ui-label' >"+(null==data.recivedDt || ''==data.recivedDt) ? data.recivedDt : data.recivedDt+"</label>";
					    	}
					    	else{
							  return ((null==data.recivedDt || ''==data.recivedDt) )?"<input name='docCheckBox' id='docCheckBox' type='checkbox' />":"<label class='ui-label' >"+(null==data.recivedDt || ''==data.recivedDt) ? data.recivedDt : data.recivedDt+"</label>";
					    	}
					    	
					    	}else{
					    return ((null==data.recivedDt || ''==data.recivedDt) )?"":"<label class='ui-label' >"+(null==data.recivedDt || ''==data.recivedDt) ? data.recivedDt : data.recivedDt+"</label>";
					    }
					    
					    }];
		
		   if(allowShippedDtind=='Y' ){
			cellFuncs[cellFuncs.length]=function(data){ return ((null==data.shippedInd || ''==data.shippedInd) )? "<input name='ShpCheckBox' id='ShpCheckBox'  type='checkbox'  />":"<label class='ui-label' >"+(null==data.shippedInd || ''==data.shippedInd) ? data.shippedInd : data.shippedInd+"</label>";}
	        }
		   
						if(bdsClientIndInq!='Y' || userType!='ib' || userType!='cbibinq'){
						cellFuncs[cellFuncs.length]=function(data){return "<input type='text' size=75 maxlength=150 value='"+data.comments+"'  title='"+data.comments+"' >";}
						
						cellFuncs[cellFuncs.length]=function(data){return data.createDt;}
						
						
						if(allowDelDocAfterReceive =='Y' && (userType!='ib' || userType!='cbibinq') ) {	
							cellFuncs[cellFuncs.length]=function(data){return "<input type=checkbox id=delDocRow"+rid+" name=delDocRow"+rid+" />";}
						} else if((isFAUsr!=null && isFAUsr=="true" && userType=='ib') || (branchUser!=null && branchUser=="true" && userType=='ib')) {
							cellFuncs[cellFuncs.length]=function(data){return (null==data.recivedDt|| ''==data.recivedDt)?"<input type=checkbox id=delDocRow"+rid+" disabled name=delDocRow"+rid+" />":"<input type=checkbox disabled id=delDocRow"+rid+" name=delDocRow"+rid+" />";}
						}else{
							
							cellFuncs[cellFuncs.length]=function(data){return (null==data.recivedDt|| ''==data.recivedDt)?"<input type=checkbox id=delDocRow"+rid+" name=delDocRow"+rid+" />":"<input type=checkbox disabled id=delDocRow"+rid+" name=delDocRow"+rid+" />";}

						}
						
						}
		dwr.util.addRows("docBody",result ,cellFuncs , {
			rowCreator:function(options){
			rid = options.rowIndex;
			//alert("rid in loop"+ rid);
			var row=document.createElement("tr");
			if(options.rowIndex%2==0){
				row.className="even";
			}else{
				row.className="odd";
			}

			row.id=options.rowIndex;
			return row;
			},
			cellCreator:function(options){
			options.escapeHtml=false;
			var cell;
			cell=document.createElement('td');
			cell.align="center";
			return cell;
			},escapeHtml:false });
			
	});
}


/* This function retrieves the docs corresponding to the docEventId  */
populateDocs=function(){
	
	delDocIds=[];
	eventEleSelectedIndex = document.getElementById('specEvent').selectedIndex;
	
	if(document.getElementById('docBody').rows.length>0){
		var confBut=window.confirm("This action removes existing documents and adds new documents. Do you want to proceed?");
		if(!confBut){
			return false;
		}else{
			var ele=document.getElementById('docBody');
			for(var i=0;i<ele.rows.length;i++){
				delDocIds.push(ele.rows[i].cells[0].firstChild.value)
			}
		}
	} else {
		specifyType='newEventDoc';
		if(true == checkQuestionsPopupReqd()) {
			return false;  //will continue specify after questionnaire is completed
		}
	}
	continueSpecifyEventDocs();
	
}

continueSpecifyEventDocs=function() {

	if(eventEleSelectedIndex == 0) { 
		return false; 
	}
	var ele=document.getElementById('specEvent');
	ele.selectedIndex=eventEleSelectedIndex;
	docEventId=ele.options[ele.selectedIndex].value;
	
	var rid=0;
	docs.getEventDocs(docEventId,function(result){
			dwr.util.removeAllRows("docBody");
			var cellFuncs=[function(data){return "<INPUT TYPE='HIDDEN' title='new' VALUE='"+data.id+"' />"+data.desc;},
							function(data){if (userType!='ib' || userType!='cbibinq'){
					return "<input name='docCheckBox' id='docCheckBox' type='checkbox'   />";}
					else{
					return "";}
					}];
							
			if(allowShippedDtind=='Y' ){
				cellFuncs[cellFuncs.length]=function(data){ return "<input name='ShpCheckBox' id='ShpCheckBox'  type='checkbox'  />";}
				}
			 
			
			if(bdsClientIndInq!='Y' || userType!='ib' || userType!='cbibinq'){
							cellFuncs[cellFuncs.length]=function(data){return "<input type='text' size=75 maxlength=150 >";}
							
							cellFuncs[cellFuncs.length]=function(data){return "";}
							
							cellFuncs[cellFuncs.length]=function(data){return "<input type=image src=images/deRowImg.jpg id=delDocRow"+rid+" name=delDocRow"+rid+" width=15 height=15 value=deleteRow onClick=delDocRow("+rid+"); />";}
							
							}
			dwr.util.addRows("docBody",result ,cellFuncs , {
			rowCreator:function(options){
			rid = options.rowIndex;
			var row=document.createElement("tr");
			if(options.rowIndex%2==0){
				row.className="even";
			}else{
				row.className="odd";
			}
			row.id=options.rowIndex;
			return row;
		
			},
			cellCreator:function(options){
			options.escapeHtml=false;
			var cell;
			cell=document.createElement('td');
			cell.align="center";
			return cell;
			},escapeHtml:false });	
		
	});
}

checkQuestionsPopupReqd=function() {
		
		// questionnaire is required only when it is configured for the client. Otherwise don't show.
		if(questionnaireReqd != 'Y') {
			return false;
		}
		//check if the questionnaire is already exists
		secCont.getAnsweredQuestionsDetails(spsId,locMovId,function(result){
			if(null == result || 0 == result.length) {
				fireEvent(document.getElementById("tab8"),'click');
				newQuestionnaire='Y';	
				popupQuestions();
				return true;
			}	
		});
		
		return false;
}

addTOexisting=function(){
	var docEle=document.getElementById('allDocs');
	if(0==docEle.selectedIndex){
		return false;
	}
	eventEleSelectedIndex = docEle.selectedIndex;
	var docId=docEle.options[docEle.selectedIndex].value;
	var ele=document.getElementById('docBody');
	
	if(document.getElementById('docBody').rows.length>0){
		for(var i=0;i<ele.rows.length;i++){
			if(docId==ele.rows[i].cells[0].firstChild.value){
				return false;
			}
		}
	} else {  //popup questionnaire if docs are specified for the first time
		specifyType='newDoc';
		if(true == checkQuestionsPopupReqd()) {
			return false;  //will continue specify after questionnaire is completed
		}
	}
	
	continueSpecifyDocs();
		
}

continueSpecifyDocs=function() {

	if(eventEleSelectedIndex == 0) { 
		return false; 
	}
	var docEle=document.getElementById('allDocs');
	docEle.selectedIndex=eventEleSelectedIndex;
	var docId=docEle.options[docEle.selectedIndex].value;
	
	var rowNumber=document.getElementById('docBody').rows.length;
	var rid=rowNumber;
	var DocObj=[{id:docId,desc:docEle.options[docEle.selectedIndex].text}];
	//alert ("3-bdsClientIndInq:"+bdsClientIndInq+"-userType:"+userType);
	var cellFuncs=[function(data){return "<INPUT TYPE='HIDDEN' TITLE='new'	 VALUE='"+data.id+"' />"+data.desc;},
					function(data){
					if (userType!='ib' || userType!='cbibinq'){
					return "<input name='docCheckBox' id='docCheckBox' type='checkbox'   />";}
					else{
					return "";}
					
					}];
	if(allowShippedDtind=='Y' ){
		cellFuncs[cellFuncs.length]=function(data){ return "<input name='ShpCheckBox' id='ShpCheckBox'   type='checkbox'  />";}}


					if(bdsClientIndInq!='Y' || userType!='ib' || userType!='cbibinq'){
					cellFuncs[cellFuncs.length]=function(data){return "<input type='text' size=75 maxlength=150 >";}
					
					cellFuncs[cellFuncs.length]=function(data){return "";}
					
					cellFuncs[cellFuncs.length]=function(data){return "<input type=image src=images/deRowImg.jpg id=delDocRow"+rid+" name=delDocRow"+rid+" width=15 height=15 value=deleteRow onClick=delDocRow("+rid+"); />";}
					}
	dwr.util.addRows("docBody",DocObj ,cellFuncs , {
			rowCreator:function(options){
			var row=document.createElement("tr");
			if(rowNumber%2==0){
				row.className="even";
			}else{
				row.className="odd";
			}
			row.id=rowNumber;
			return row;
			},
			cellCreator:function(options){
			options.escapeHtml=false;
			var cell;
			cell=document.createElement('td');
			cell.align="center";
			return cell;
			},escapeHtml:false });	
}

delDocRow=function(eleRowId){
	var ele=document.getElementById("docBody");
	if (eleRowId != null)
	{
		//alert(eleRowId);
		ele.deleteRow(eleRowId);
		//update rowId for the rows following the deleted row
		for(var i=eleRowId; i <= ele.rows.length-1;i++){
			ele.rows[i].rowId=i;
			if(ele.rows[i].cells[4].firstChild.type=="image") {
				ele.rows[i].cells[4].innerHTML="<input type=image src=images/deRowImg.jpg id=delDocRow"+i+" name=delDocRow"+i+" width=15 height=15 value=deleteRow onClick='delDocRow("+i+");' />";		
			} 
		}
	}
	else
	{
	    alert("eleRowId is null");
	}
}


/* todayDate=function (eleName){
eleName=""+eleName;
alert("eleName:"+eleName);
var date=new Date();
var datestring=(((date.getMonth()+1)<10)?"0"+date.getMonth():date.getMonth())+"/"+date.getDate()+"/"+date.getFullYear();
var conDoc=confirm("This document is received");
 if(conDoc){
	document.getElementById(eleName).innerHTML=datestring;
 }
	
} */

function showPopup(url) {

newwindow=window.open(encodeURI(url),'SpsImaging','toolbar=1,resizable=1,height=700,width=1000,top=50,left=50');
//if (window.focus) {newwindow.focus()}
}

bookKeeping=function(){
	if(actionSubType!=null && actionSubType=='dwacDrs')
		$("#statusTDId").hide();
	secCont.getBkps(spsId,locMovId,function(data){
		dwr.util.removeAllRows("bkBody");		
		if(data==null || data.length==0){
			document.getElementById('bkBody').innerHTML="<tr><td colspan=8 class=cLabel>No data Found</td></tr>";
		}
		if((displayCancelBkpgs!=null && displayCancelBkpgs == 'Y') && (actionSubType!=null && actionSubType!='dwacDrs')){
			$("#statusTDId").show();
			var cellFuncs=[
			function(data){return data.createDate},
			function(data){return data.branchAcct;},
			function(data){return data.batch;},
			function(data){return data.entry;},
			function(data){return data.debitCredit;},
			function(data){return data.cusip;},
			function(data){return data.quantity;},
			function(data){return data.amount;},
			function(data){return data.desc;},
			function(data){return data.status;}
			];
		}else{
			$("#statusTDId").hide();
			var cellFuncs=[
   			function(data){return data.createDate},
   			function(data){return data.branchAcct;},
   			function(data){return data.batch;},
   			function(data){return data.entry;},
   			function(data){return data.debitCredit;},
   			function(data){return data.cusip;},
   			function(data){return data.quantity;},
   			function(data){return data.amount;},
   			function(data){return data.desc;}
   			];
		}
			
			dwr.util.addRows("bkBody",data ,cellFuncs , {
			rowCreator:function(options){
			var row=document.createElement("tr");
			if(options.rowIndex%2==0){
				row.className="even";
			}else{
				row.className="odd";
			}
			return row;
			},
			cellCreator:function(options){
			options.escapeHtml=false;
			var cell=document.createElement('td');
			cell.align="center";
			if((displayCancelBkpgs!=null && displayCancelBkpgs != 'Y') && (actionSubType!=null && (actionSubType=="" || actionSubType=='dwacDrs')) && options.cellNum==9)
			{
				cell.style.display="none";
			}
			return cell;
			},escapeHtml:false }						 
			 );});

}


getAuditTrail=function(){
	secCont.getAudits(spsId,locMovId, function(data){
		dwr.util.removeAllRows("auditTrailBody");
		var cellFuncs=[
		//function(data){return data.desc;},
		//function(data){return data.createDate;},
		function(data){return "<label style=text-align:left>"+data.desc+"</label>";},
		function(data){return "<label>"+data.createDate+"</label>";},
		function(data){return "<label>"+data.createdBy+"</label>";},
		function(data){return "<label>"+data.status+"</label>";}];
		dwr.util.addRows("auditTrailBody",data ,cellFuncs , {
		rowCreator:function(options){
		var row=document.createElement("tr");
		if(options.rowIndex%2==0){
			row.className="even";
		}else{
			row.className="odd";
		}
		
		return row;
		},
		cellCreator:function(options){
		options.escapeHtml=false;
		var cell=document.createElement('td');
		cell.align="center";
		return cell;
		},escapeHtml:false }						 
		 );
	});
}


getSpsImaging=function(){

		secCont.getSpsImaging(spsId, function(data){
			
			dwr.util.removeAllRows("spsImagingBody");
			
			var cellFuncs=[
		    function(data){ return data.detailLink; },
			function(data){return data.branch;},
			function(data){return data.account;},
			function(data){return data.rep;},
			function(data){return data.issueDate;},
			function(data){return data.spsid;},
			function(data){return data.clientNbr;},			
			function(data){return data.cusip;},							
			function(data){return data.documentId;}];
			dwr.util.addRows("spsImagingBody",data ,cellFuncs , {
			rowCreator:function(options){
			var row=document.createElement("tr");
			if(options.rowIndex%2==0){
				row.className="even";
			}else{
				row.className="odd";
			}
			
			return row;
			},
			cellCreator:function(options){
			options.escapeHtml=false;
			var cell=document.createElement('td');
			cell.align="center";
			return cell;
			},escapeHtml:false }						 
			 );});
}

getComments=function(){
	secCont.getComments(spsId,locMovId,function(data){
		dwr.util.removeAllRows("commentsBody");
		var count=1;
		var cellFuncs=[
		function(data){return count++;},
		function(data){return data.comments;},
		function(data){return data.updateUserId;},
		function(data){return data.updateDate;}];
		dwr.util.addRows("commentsBody",data ,cellFuncs , {
		rowCreator:function(options){
		var row=document.createElement("tr");
		if(options.rowIndex%2==0){
			row.className="even";
		}else{
			row.className="odd";
		}
		//alert (options.rowIndex+"options.rowIndex");
		if (options.rowIndex >4)
			{
			document.getElementById("newComment").disabled="disabled";
			}else{
				document.getElementById("newComment").disabled=false;
			}
		return row;
		},
		cellCreator:function(options){
		options.escapeHtml=false;
		var cell=document.createElement('td');
		//cell.align="center";
		return cell;
		//alert (options.rowIndex+"options.rowIndex");
		},escapeHtml:false }						 
		 );
	});
}

getContactDetails = function(){
	secCont.getContactDetails(spsId,locMovId,function(data){
		dwr.util.removeAllRows("contactsBody");
		var count=1;
		var cellFuncs=[
		function(data){return count++;},
		function(data){return data.contact;},
		function(data){return data.phoneNumber;},
		function(data){return data.updateUserId;}
		];
		dwr.util.addRows("contactsBody",data ,cellFuncs , {
		rowCreator:function(options){
		var row=document.createElement("tr");
		if(options.rowIndex%2==0){
			row.className="even";
		}else{
			row.className="odd";
		}
		//alert (options.rowIndex+"options.rowIndex");
		/*  if (options.rowIndex >4)
			{
				document.getElementById("newContact").disabled="disabled";
				document.getElementById("newPhoneNbr").disabled="disabled";
				
			}else{
				document.getElementById("newContact").disabled=false;
				document.getElementById("newPhoneNbr").disabled=false;
			} */
		return row;
		},
		cellCreator:function(options){
		options.escapeHtml=false;
		var cell=document.createElement('td');
		//cell.align="center";
		return cell;
		//alert (options.rowIndex+"options.rowIndex");
		},escapeHtml:false }						 
		 );
	});
}

getAnsweredQuestions=function(){
	secCont.getAnsweredQuestionsDetails(spsId,locMovId,function(data){
		dwr.util.removeAllRows("questionsBody");
		var count=0;
		var cellFuncs=[
		function(data){return "<label style=text-align:center>"+ count+"</label>";},
		function(data){return "<input type=hidden id=questCdHid"+data.rowId+" name=questCdHid"+data.rowId+" value='"+data.question_cd+"' /> <label style=text-align:left>"+data.question+"</label>";},
		function(data){return (data.answer == 'Y')?"<select id=questAns"+data.rowId+" name=questAns"+data.rowId+" title='"+data.answer+"'><option value='Y' selected>Yes</option><option value='N'>No</option></select>":"<select id=questAns"+data.rowId+" name=questAns"+data.rowId+" title='"+data.answer+"'><option value='Y'>Yes</option><option value='N' selected>No</option></select>";},
		function(data){return (count <= 5)?"":"<input type='text' id=questNotes"+data.rowId+" name=questNotes"+data.rowId+" size='50' maxlength='500' style=text-align:left title='"+data.notes+"' value='"+data.notes+"' />";},
		function(data){return "<label style=text-align:center>"+data.updateUserId+"</label>";},
		function(data){return "<label style=text-align:center>"+data.updateDate+"</label>";}];
		dwr.util.addRows("questionsBody",data ,cellFuncs , {
		rowCreator:function(options){
		var row=document.createElement("tr");
		if(options.rowIndex%2==0){
			row.className="even";
		}else{
			row.className="odd";
		}
		count++;
		row.id=options.rowIndex;
		return row;
		},
		cellCreator:function(options){
		options.escapeHtml=false;
		var cell=document.createElement('td');
		cell.align="center";
		return cell;
		},escapeHtml:false }						 
		 );
	});
}

popupQuestions=function(){
	secCont.getQuestions('QUEST',function(data){
		dwr.util.removeAllRows("questionsBody");
		var count=0;
		var cellFuncs=[
		function(data){return "<label style=text-align:center>"+ count+"</label>";},
		function(data){return "<input type=hidden id=questCdHid"+data.rowId+" name=questCdHid"+data.rowId+" value='"+data.question_cd+"' /> <label style=text-align:left>"+data.question+"</label>";},
		function(data){return "<select id=questAns"+data.rowId+" name=questAns"+data.rowId+"><option value=''>Please Select</option><option value='Y'>Yes</option><option value='N'>No</option></select>";},
		function(data){return (count <= 5)?"":"<input type=text id=questNotes"+data.rowId+" name=questNotes"+data.rowId+" size='50' maxlength='500' style=text-align:left value='' />";}];
		
		dwr.util.addRows("questionsBody",data ,cellFuncs , {
		rowCreator:function(options){
		var row=document.createElement("tr");
		if(options.rowIndex%2==0){
			row.className="even";
		}else{
			row.className="odd";
		}
		count++;
		row.id=options.rowIndex;
		return row;
		},
		cellCreator:function(options){
		options.escapeHtml=false;
		var cell=document.createElement('td');
		cell.align="center";
		return cell;
		},escapeHtml:false }						 
		 );
	});
	
	hideDiv("questInfoDiv",false);
	document.getElementById('questInfoDiv').innerHTML="Please answer all the questions  below and click on 'Update' button to proceed further for specifying documents";
	document.getElementById('tab1').disabled="disabled";
	document.getElementById('tab3').disabled="disabled";
	document.getElementById('tab4').disabled="disabled";
	document.getElementById('tab5').disabled="disabled";
	document.getElementById('tab6').disabled="disabled";
	document.getElementById('tab7').disabled="disabled";
	document.getElementById('tab9').disabled="disabled";
	//alert("Please answer these questions and click on 'UPDATE' button to proceed further for specifying documents");
}

getDsrqQuestions=function(){
	secCont.getDsrqQuestionsDetails(spsId,locMovId,function(data){
		dwr.util.removeAllRows("dsrqQuestionsBody");
		var count=0;
		var cellFuncs=[
		function(data){return "<label style=text-align:center>"+ count+"</label>";},
		function(data){return "<input type=hidden id=dsrqQuestCdHid"+data.rowId+" name=dsrqQuestCdHid"+data.rowId+" value='"+data.question_cd+"' /> <label style=text-align:left>"+data.question+"</label>";},
		function(data){return "<label style=text-align:center>"+ data.answer+"</label>";}];
		dwr.util.addRows("dsrqQuestionsBody",data ,cellFuncs , {
		rowCreator:function(options){
		var row=document.createElement("tr");
		if(options.rowIndex%2==0){
			row.className="even";
		}else{
			row.className="odd";
		}
		count++;
		row.id=options.rowIndex;
		return row;
		},
		cellCreator:function(options){
		options.escapeHtml=false;
		var cell=document.createElement('td');
		cell.align="center";
		return cell;
		},escapeHtml:false }						 
		 );
	});
}

getTrailerDesc = function() {
	document.getElementById("trailerDesc").innerHTML = inquireTrailerDesc;
}
/* function makeRowEditable(rId){
	var planeName,hidName;
	if(document.getElementById("edit"+rId).checked==true){
		for(var i=0;i<roweles.length;i++){
			hidName=roweles[i]+rId;
			planeName=rowTexteles[i]+rId;
			document.getElementById(hidName).className='cHidden';
			document.getElementById(planeName).className='cVisible';
		}
		document.getElementById('edit'+rId).className="cHidden";
		document.getElementById('updateDep'+rId).className="cVisible";
		modRowArr.push(rId);
	}else{
	}
} */

// functionality for destination change.
boxMovement=function(){
	//alert("HI");
	// If it's not in the specify screen
	if(document.getElementById("updButDiv").style.display=="none"){
		return false;
	}
	var desIdx=document.getElementById('destination').selectedIndex;
	if(0==desIdx){
		alert("Invalid destination.");
		dwr.util.setValue('destination',boxLoc);
		return false;
	}
	
	
	
	
	
	newBox=getActualValue("destination");
	
	secCont.getBoxType(newBox,function(result)
			{
			//alert("result"+result);
			if( result!=null && result=="D" ){
				chkBoxTypeCd="D";
				
			}else{
			chkBoxTypeCd="";
			}
			if (chillIndVsDTCDstnCheck == 'Y') {
				chillVsDTCDstnCheck();
			}
			});
	
	if(boxLoc!=newBox){
		oldCIBCBox=boxLoc;
		newCIBCBox=newBox;
		if(newBox=='TRANSFER') {
			// Allow TRANSFER only when the status is in PENDING. 
			if(statusVal=='PENDING') {
				var response=confirm("Are you sure you want to do a transfer request?");
			} else {
				alert("Transfer request is not allowed on this item based on the status. ");
				dwr.util.setValue('destination',boxLoc);
				return false;
			}
		}else if(statusVal=='INITIAL' || statusVal=='RECEIVE'){
		var response=confirm("Are you sure of Destination Change from "+getDestDesc(boxLoc)+" to "+getDestDesc(newBox));
		} else {
			var response=confirm("Are you sure Box Movement from "+getDestDesc(boxLoc)+" to "+getDestDesc(newBox));
			  hideDiv("updButton",false);
		}
	
		if(!response){
			dwr.util.setValue('destination',boxLoc);
		} else	{
			//alert("newBox"+newBox);
			if(newBox=="TRANSFER")
			{		
			
				secCont.getBoxType(boxLoc,function(result){	
					document.inquireForm.action="/spsvaultweb/transCert.view?action=trans&spsId="+spsId+"&cusip="+bwCUSIP+"&transmode="+result+"&destination="+boxLoc;
					document.inquireForm.submit();	
	  			});
			}
		}	
			
	var dest = document.getElementById("destination").value;
	if (dest == 'DRS'){
		hideDiv("quantityTransmissionTh",false);
		document.getElementById('quantityTransmission').className="cVisible";
		hideDiv("suretyNumberTh",false);
		document.getElementById('suretyNumberTh').className="cVisible";
		document.getElementById('incMemSegInq').className="cHidden";
		document.getElementById('suretyNumber').className="cVisible";
		$("#incMemSegInq").hide();
		$("#incMemSegTh").hide();
		
		//document.getElementById('incMemSegTh').className="cHidden";
		
		$("#td_7").hide();
	} else {
		hideDiv("quantityTransmissionTh",true);
		if(document.getElementById('quantityTransmission')!=null || document.getElementById('quantityTransmission')!=undefined)
			document.getElementById('quantityTransmission').className="cHidden";
		hideDiv("suretyNumberTh",true);
		document.getElementById('suretyNumberTh').className="cHidden";
		document.getElementById('suretyNumber').className="cHidden";
		hideDiv("incMemSegInq",false);
		hideDiv("incMemSegTh",false);
		$("#td_7").show();
		$("#incMemSegTh").show();
		//document.getElementById('incMemSegTh').className="cVisible";
	}
	 } 

}


getDestDesc=function(optCode){
	var ele=document.getElementById('destination');
	for(var i=0;i<ele.options.length;i++){
		if(ele.options[i].value==optCode){
			return 	ele.options[i].text;
		}
	}
}


/* Functionality for Update button on specify screen for operations */
saveUpdate=function(){
	document.getElementById("updButton").disabled = true;
	if(ubsInd=='Y' && doNotUseTxtVal.toLowerCase().indexOf("name change")!== -1){
		alert("Can not Update Deposit for Name Change Security");
		return false;
	}
	if (actionType!='repair' && !validateDocumentSelection()){
		return false;
	}
	if (newQuestionnaire=='Y') {
		saveNewQuestionnaire();
	}
	else if(actionType=='repair') {
		repairUpdate();
	} else if(isBoxmEligOnHold) {
		boxmUpdate();
	} else{
		delvAddr=null;
		var delvType=deliveryType();
		if(delvType==0 || delvType==1){
			var conf=window.confirm("Do you want to override existing delivery address with new one?")
	 		var winObj=null;
	 		if(conf){
	 			winObj=window.open("deliveryAddr.jsp");
	 		}else{
	 			deliveryUpdate();
	 			//var destinationValue=document.getElementById("destination").value;
	 		}
		}else{
			updateDeposit();  
		}
	}
	document.getElementById("updButton").disabled = false; 
	
}

function validateDocumentSelection(){
	var destinationDD = document.getElementById("destination");
	var dest = "";	
	var allCheckBoxSelected = false;
	if (destinationDD != null){
		dest = destinationDD.options[destinationDD.selectedIndex].value;
	}
	//if (dest != "FBOX" && checkCreateDateIsToday()){
	//if (checkCreateDateIsToday()){
		var createdToday = checkCreateDateIsToday();	
		var reqEle=document.getElementById("docBody");
		
		if ( reqEle.rows.length == 0 ) {
		  return true;
		}
						
		for(var i=0;i<reqEle.rows.length;i++){
			if(reqEle.rows[i].cells[1].firstChild.type=='checkbox' && reqEle.rows[i].cells[1].firstChild.checked==true) {				
				allCheckBoxSelected = true;
			}else if(reqEle.rows[i].cells[1].firstChild.nodeName == '#text') {				
				allCheckBoxSelected = true;
			}else{
				return true; //if you see even 1 document un checked its ok
			}
		}
		
		if (allCheckBoxSelected){
			var validated = false;	
			var spsId, allDocsChecked=true, dtcEligible=false;
			
			var dtcEligibleTxt = document.getElementById("dtcEligText").innerHTML;
			spsId = document.getElementById("requestSpsId").textContent;
			
			if (dtcEligibleTxt == "DTC Eligble"){
				dtcEligible = true;
			}
			
			secCont.validateBoxTypeCd(dest, spsId, allDocsChecked, createdToday, dtcEligible, 
										{callback:function(res){ 
											//alert("Response from server " + res);
											validated = res;
											//restoreRow('cancel');
											},
										async:false}); //wait for the call to come back
			
			if (!validated){
				//alert("Please change destination to free box before receiving all documents.");
				var conf=window.confirm("Please change destination to free box OR Click OK to continue with current destination.");
				if ( conf == true ) {
					return true;
				} else {
					return false;
				} 
			}else {
				return true;
			}
		}
	//}else{
		//return true;
	//}
}

function checkCreateDateIsToday(){
	var createDt = document.getElementById("cdate").value;
	var todaysDt = document.getElementById("todaysServerDate").value;
	let today = new Date();
	let dd = today.getDate();
	let mm = today.getMonth()+1; 
	const yyyy = today.getFullYear();
	if(dd<10) 
	{
	    dd='0'+dd;
	} 
	if(mm<10) 
	{
	    mm='0'+mm;
	}
	todaysDt = mm+"/"+dd+"/"+yyyy;
	if (createDt == todaysDt){
		return true;
	}else{
		return false;
	}
}

deliveryType=function(){
	if(allowDeliveryChkBoxInquire=="Y"){
	// delevery is not allowed in HOLD status
	if(statusVal =='HOLD') {
		return 2; // Not a delivery
	}
	var ele=document.getElementById('certBody');
	var count=0;
	for(var i=0;i<ele.rows.length;i++){
		if(document.getElementById("certDlvCheckBox"+i).checked){
			count++;
		}
	}
	
	if(count!=0 && count==ele.rows.length){
		return 0; // Full delivery
	}else if(count!=0 && count<ele.rows.length){
		return 1; // partial delivery
	}else if(count==0){
		return 2; // Not a delivery
	}
	}
	else
	return 2; 

}


resultFromdelvAddr=function(addr){

	delvAddr=addr;
	deliveryUpdate();
	
}




saveDWACDRSUpdate=function(){
br=document.getElementById("branch").value;
acc=document.getElementById("account").value;
//checkAcctFreeze(br,acc);
if(checkAcctFreeze(br,acc)==true)
		{
		alert("Account is Frozen..  Cannot Update.");
		}
		else 
		{
		if(isBoxmEligOnHold) {
		boxmDWACDRSUpdate();
	} else {
		updateDWACDRSDepsoit();
	}
	}
}

boxmDWACDRSUpdate=function(){
	var origValues={action:null,spsId:spsId,status:statusVal,dest:getActualValue("dest"+depositRId)};
	var modValues={action:'U',spsId:spsId,status:statusVal,dest:getActualValue("destination")};
	
	var tokId = document.getElementById("tokId").value;
	// loc move id value passing to DB
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;
	var uType = '';
	if ((isFAUsr!=null && isFAUsr=='true')) {
		    uType = 'FA';
		} else if ((isOpsUser!=null && isOpsUser=='true')) {
			uType = 'OPS';
		} else if ((branchUser!=null && branchUser=='true')) {
			uType = 'BR';
		}
	secCont.depositUpdate(origValues,modValues,null,null,null,null,null,tokId,uType,{async:false, callback:function(result){	
		var res=result.split("||"); 
		inquireCerts(true,false);hideDiv("goBack",true);
		resetSearch();
		//alert(res[0].match("successful completion") ? "Successful" : res[0]);
		alert(res[0]);
	    highLiteLastUpdatedRow();
	}}); 

}

function updateDWACDRSDepsoit(){
	var br=document.getElementById("branch").value;
    var acc=document.getElementById("account").value;
	if(br=="" || br==null){
		alert("Please enter valid Branch");
		return false;
	}
	if(acc==null || acc==""){
		alert("Please enter valid Account");
		return false;
	}
	//if(!validateAcctAndSecurity())return false;
	if(!dwacValidate())return false;
	getDsrqQuestDetails();
	//var newDsrqInd= (isDSRQChecked)? ((isDSRQdone)?'Y':'N')	:getActualValue("dsrqInd"+depositRId);
    //var finalSubDimeInd = (isSubDimedone)?newSubDimeInd:getActualValue("subDimeInd"+depositRId);
	 var ele=document.getElementById("dwacDepositsBody");
	    for(var i=0;i<ele.rows.length;i++){
	   
	   
	   
	    
	     var spsId=document.getElementById("dwacSpsId").value;
	     var origQty=document.getElementById("dwacQty").title;
	     var newQty= document.getElementById("dwacQty").value;
         var origTrAcct= document.getElementById("dwacTrsAcct").title;
         var newTrAcct= document.getElementById("dwacTrsAcct").value;
         
		 var origSSN= document.getElementById("dwacSsn").title;
		  var newSSN= document.getElementById("dwacSsn").value;
		  
		   var origRegName= document.getElementById("dwacRegName").title;
		  var newRegName= document.getElementById("dwacRegName").value;
		  
		   var origInout= ele.rows[0].cells[5].firstChild.title;
		  var newInout= ele.rows[0].cells[5].firstChild.value;
		  
		   var origOFAC= document.getElementById("checkDwacOfac").title;
		  var newOFAC= document.getElementById("checkDwacOfac").value;
		// Validation: For non-canadian users we should not allow the user to enter a deposit if the OFAC status is Undefined (i.e., U), 
		// allowed values are either N or Y.
		if (countryCode != "CA" && newOFAC == 'U') {
			alert("OFAC status is Undefined. Can not proceed further.");
			return false;
		}
		
		//alert(origQty+"::"+newQty+"::"+spsId+":::"+getActualValue("price")+"::"+origInout);
		// var origComments=document.getElementById("dwacComments").title;
		 //var newComments=document.getElementById("dwacComments").value;
			
	//var origValues={action:null,spsId:spsId,event:null,delvAddr:null,branch:getActualValue("branch"+depositRId),account:getActualValue("account"+depositRId),security:getActualValue("secNbr"+depositRId),cusip:getActualValue("cusip"+depositRId),symbol:getActualValue("symbol"+depositRId),dest:getActualValue("dest"+depositRId),quantity:getActualValue("quantity"+depositRId),dtcElig:null,status:getActualValue("status"+depositRId),secPrice:getActualValue("secPrice"+depositRId),secAmount:getActualValue("secAmount"+depositRId),secDesc:unescapeHTML(getActualValue("secDesc"+depositRId)),dsrqInd:getActualValue("dsrqInd"+depositRId), docEventCd:getActualValue("docEventCdHid"+depositRId),custFirmInd:null,questList:null, comments:null, dsrqQuestList:null, restrictedInd:rstrInd, subDimeInd:getActualValue("subDimeInd"+depositRId)};
	//var modValues ={action:'U',spsId:spsId,event:null,delvAddr:null,branch:getActualValue("branch"),account:accounStr(),security:bwADPNum,cusip:bwCUSIP,symbol:bwSymbol,dest:getActualValue("destination"),quantity:getActualValue("quantity"),dtcElig:getActualValue("dtcEligInd"),status:getActualValue("status"+depositRId), secPrice:(null==getActualValue("price"))?"0":getActualValue("price"),secAmount:getActualValue("amount"),secDesc:unescapeHTML(getActualValue("secDecText")),dsrqInd:newDsrqInd, docEventCd:docEventId,custFirmInd:null,questList:null, comments:getActualValue("newComment"), dsrqQuestList:dsrqQuestList, restrictedInd:newRstrInd, subDimeInd:finalSubDimeInd};
	
    var amount=getActualValue("amount");
    //alert(getActualValue("status"+depositRId)+"::ststaus ");
    var newTransmission = null;
    var origTransmission = null;
	if (getActualValue("destination") == 'DRS') {
		origTransmission= document.getElementById("quantityTransmission").title;
		newTransmission= document.getElementById("quantityTransmission").value;
	}
	var newSuretyNumber = null;
    var origSuretyNumber = null;
	if (getActualValue("destination") == 'DRS') {
		origSuretyNumber= document.getElementById("suretyNumber").title;
		newSuretyNumber= document.getElementById("suretyNumber").value;
	}
	
	var oldForeignAddr = null;
	var oldAdd1 = addArrCache[0];
	var oldAdd2 = addArrCache[1];
	var oldAdd3 = addArrCache[2];
	var oldAdd4 = addArrCache[3];
	if (oldAdd1 != null || oldAdd2 != null || oldAdd3 != null || oldAdd4 != null) {
		oldForeignAddr = (oldAdd1 != null ? oldAdd1 : "") + "|";
		oldForeignAddr = oldForeignAddr + (oldAdd2 != null ? oldAdd2 : "") + "|";
		oldForeignAddr = oldForeignAddr + (oldAdd3 != null ? oldAdd3 : "") + "|";
		oldForeignAddr = oldForeignAddr + (oldAdd4 != null ? oldAdd4 : "");
	}

	var newForeignAddr = null;
	var add1 = getActualValue("foreignAddress1");
	var add2 = getActualValue("foreignAddress2");
	var add3 = getActualValue("foreignAddress3");
	var add4 = getActualValue("foreignAddress4");
	if (add1 != null || add2 != null || add3 != null || add4 != null) {
		newForeignAddr = (add1 != null ? add1 : "") + "|";
		newForeignAddr = newForeignAddr + (add2 != null ? add2 : "") + "|";
		newForeignAddr = newForeignAddr + (add3 != null ? add3 : "") + "|";
		newForeignAddr = newForeignAddr + (add4 != null ? add4 : "");
	}
    var origValues={action:null,spsId:spsId,quantity:origQty,secAmount:getActualValue("secAmount"+depositRId),transferAccount:origTrAcct,ssnNumber:origSSN,inOutInd:origInout,regName:origRegName,comments:null,trailerDesc:inquireTrailerDesc,quantityTransmission:origTransmission,delvAddr:oldForeignAddr,dest:getActualValue("dest"+depositRId),suretyNumber:origSuretyNumber};
	var newValues={action:"U",spsId:spsId,quantity:newQty,secAmount:amount,transferAccount:newTrAcct,ssnNumber:newSSN,inOutInd:newInout,regName:newRegName, comments:getActualValue("newComment"),trailerDesc:getActualValue("trailerDesc"),quantityTransmission:newTransmission,delvAddr:newForeignAddr,dest:getActualValue("destination"),suretyNumber:newSuretyNumber};
	
	 //if(newOFAC =='I') {
		
		origValues.dwacDrsOfac=origOFAC;
		newValues.dwacDrsOfac=newOFAC;
	//}
	
	if(allowAltBranch=='Y' && getActualValue("altbranchtxt") != null && getActualValue("altbranchtxt") !='') {
	var altBrOldVal = getActualValue("altBranchCdHid"+depositRId);
	var altBrNewVal = getActualValue("altbranchtxt");
	if(altBrNewVal!=null && altBrOldVal!=null && altBrNewVal!=altBrOldVal){
		origValues.altBranch=altBrOldVal;
		newValues.altBranch=altBrNewVal;
		}
	}
	if(allowAccountTypeInq=="Y" && document.getElementById("accountTypeCd").style.display!="none") {
	var accTypeCdOld = getActualValue("accTypeCdHid"+depositRId);
	var accTypeCdNew = getActualValue("accountTypeCd");
	if(accTypeCdNew!=null && accTypeCdOld!=null && accTypeCdNew!=accTypeCdOld){
		origValues.accTypeCd=accTypeCdOld;
		newValues.accTypeCd=accTypeCdNew;
		}
	}
	
	if(false==isSPSdataChanged(origValues,newValues)){
		alert("There are no changes to update.");
		return false;
	}
	
	for(oldProp in origValues){
		if(oldProp=='dsrqQuestList') continue;  // don't compare the dsrqQuestList. 
		if(oldProp=='quantity' &&	parseFloat(newValues[oldProp]) == parseFloat(origValues[oldProp])) {
			newValues[oldProp]=null;
		} else if(trim(newValues[oldProp])!=trim(origValues[oldProp])){
			//alert("Property="+oldProp+" Org value = "+origValues[oldProp]+" New value= "+newValues[oldProp]);
		}else{
			newValues[oldProp]=null;
		}
		
	}
	
	
	
	try{
	   
		//alert("Hello");
		 var tokId = document.getElementById("tokId").value;
		
		// loc move id value passing to DB
		origValues.locMovId=locMovId;
		newValues.locMovId=locMovId;
		var uType = '';
		if ((isFAUsr!=null && isFAUsr=='true')) {
			    uType = 'FA';
			} else if ((isOpsUser!=null && isOpsUser=='true')) {
				uType = 'OPS';
			} else if ((branchUser!=null && branchUser=='true')) {
				uType = 'BR';
			}
		secCont.depositUpdate(origValues,newValues,null,null,null,null,null,tokId,uType, {async:false, callback:function(result){
				var res=result.split("||");
		inquireCerts(true,false);hideDiv("goBack",true);
		resetSearch();
		alert(res[0]);
	    highLiteLastUpdatedRow();
		
				
		}}); 
 		
	}catch(e){
 		alert("Error in saving...");
	}

}
}


updateDeposit=function(){

	var isOFACValid = true;
	var oldConfirmInd = getActualValue("confirmIndHid"+depositRId);
	if(oldConfirmInd==undefined){
		oldConfirmInd=null;
	}
	var brDesc = getActualValue("accDesc");

	if(!validateAcctAndSecurity())return false;
	if(allowContactTab == 'Y' && actionSubType=='transinq'){
		 selectedConfirmInd =$('input[name=confirmInd]:checked', '#inquireForm').val();
	}else{
		if(!certValidate())return false;
	}
	if(selectedConfirmInd==undefined){
		selectedConfirmInd=null;
	}
	var selectedConfirmInd;
	getDsrqQuestDetails();
	var newDsrqInd= (isDSRQChecked)? ((isDSRQdone)?'Y':'N')	:getActualValue("dsrqInd"+depositRId);
	var ofacfinalval=null;
    var ofacval=document.getElementById("ofachittype").value;
	if(ofacval!=null)
		{
	 ofacfinalval=ofacval;
		}
	else
		{
		ofacfinalval="";
		}
	var finalSubDimeInd = (isSubDimedone)?newSubDimeInd:getActualValue("subDimeInd"+depositRId);
	var origValues={action:null,spsId:spsId,event:null,delvAddr:null,branch:getActualValue("branch"+depositRId),account:getActualValue("account"+depositRId),rrCode:null,security:getActualValue("secNbr"+depositRId),cusip:getActualValue("cusip"+depositRId),symbol:getActualValue("symbol"+depositRId),dest:getActualValue("dest"+depositRId),quantity:getActualValue("quantity"+depositRId),dtcElig:null,status:getActualValue("status"+depositRId),secPrice:getActualValue("secPrice"+depositRId),secAmount:getActualValue("secAmount"+depositRId),secDesc:trim(unescapeHTML(getActualValue("secDesc"+depositRId))),dsrqInd:getActualValue("dsrqInd"+depositRId), docEventCd:getActualValue("docEventCdHid"+depositRId),custFirmInd:null,questList:null, comments:null, dsrqQuestList:null, subDimeInd:getActualValue("subDimeInd"+depositRId),locMovId:null,trailerDesc:inquireTrailerDesc,frozenAccType:frozenAccOldVal,contact:null,phoneNumber:null, confirmInd:oldConfirmInd,accdesc:null,ofachittype:null};
	var modValues ={action:'U',spsId:spsId,event:null,delvAddr:null,branch:getActualValue("branch"),account:accounStr(),rrCode:rrCode,security:bwADPNum,cusip:bwCUSIP,symbol:bwSymbol,dest:getActualValue("destination"),quantity:getActualValue("quantity"),dtcElig:getActualValue("dtcEligInd"),status:getActualValue("status"+depositRId), secPrice:(null==getActualValue("price"))?"0":getActualValue("price"),secAmount:getActualValue("amount"),secDesc:trim(unescapeHTML(getActualValue("secDecText"))),dsrqInd:newDsrqInd, docEventCd:docEventId,custFirmInd:null,questList:null, comments:getActualValue("newComment"), dsrqQuestList:dsrqQuestList, subDimeInd:finalSubDimeInd,locMovId:locMovId,trailerDesc:getActualValue("trailerDesc"),frozenAccType:getSecoutValue("frozenDescVal"),contact:getActualValue("newContact"), phoneNumber:getActualValue("newPhoneNbr"),confirmInd:selectedConfirmInd,accdesc:brDesc,ofachittype:ofacfinalval};
	var origCusip=getActualValue("cusip"+depositRId);
	var newCusip=bwCUSIP;
	var origAccount=getActualValue("account"+depositRId);
	var newAccount=accounStr();
	var origQty=getActualValue("quantity"+depositRId);
	var newQty=getActualValue("quantity");
	
	//alert("origCusip::"+origCusip+" newCusip::"+newCusip);
	//alert("origAcc::"+origAccount+" newAcc::"+newAccount);
	//alert("origQty::"+origQty+"newQty::"+newQty);
	
	if(!depQtyValidate())return false;
	var deposit_event=null;
	//if(origCusip!=newCusip ||origAccount!=newAccount ||origQty!=newQty )
	//deposit_event="UPDATE_INITIAL";
	//alert("HI");
	if(document.getElementById("bondRegTypeDiv").className=="cVisible") {
		origValues.bondRegType=getActualValue("bondRegTypeHid"+depositRId);
		modValues.bondRegType=getActualValue("bondRegType");
	} else {
		if(allowBondRegType=='Y' && getActualValue("bondRegTypeHid"+depositRId) != null && getActualValue("bondRegTypeHid"+depositRId) !='') {
			origValues.bondRegType=getActualValue("bondRegTypeHid"+depositRId);
			modValues.bondRegType='';
		}
	}
	if(allowNegotiableInd=="Y" && document.getElementById("negoIndDiv").className=="cVisible") {
		origValues.negotiable=getActualValue("negotiableIndHid"+depositRId);
		modValues.negotiable=getActualValue("negotiableInd");
	}
	///for allowAtrenate baranch
	
		
	if(allowAltBranch=='Y' && getActualValue("altbranchtxt") != null && getActualValue("altbranchtxt") !='') {
		var altBrOldVal  = getActualValue("altBranchCdHid"+depositRId);
		var altBrNewVal = getActualValue("altbranchtxt");
		if(altBrNewVal!=null && altBrOldVal!=null && altBrNewVal!=altBrOldVal){
			origValues.altBranch=altBrOldVal;
			modValues.altBranch=altBrNewVal;
		}
	}
	
	
	if(allowGiftInhInd=="Y" && document.getElementById("giftInhIndDiv").className=="cVisible") {
		origValues.giftInhInd=getActualValue("giftInhIndHid"+depositRId);
		modValues.giftInhInd=getActualValue("giftInhInd");
	}
/*	if(locMovId!=null && locMovId!="") {
		origValues.locMovId=locMovId;
		modValues.locMovId=locMovId;
	}
	*/
	if(allowDeliverToBranchInq=="Y" && document.getElementById("deliverToBranchDiv").className=="cVisible") {
		origValues.deliverToBranch=getActualValue("deliverToBranchHid"+depositRId);
		modValues.deliverToBranch=getActualValue("deliverToBranch");
	}
	if(restrictedSecIndOnInquire=="Y") {
		origValues.restrictedInd=rstrInd;
		var newRstrInd = (document.getElementById("rstrIndChkBox").checked)?'R':'N';
		modValues.restrictedInd=newRstrInd;
	}
	
	if(allowAccountTypeInq=="Y" && document.getElementById("accountTypeCd").style.display!="none") {
		
		origValues.accTypeCd=getActualValue("accTypeCdHid"+depositRId);
		modValues.accTypeCd=getActualValue("accountTypeCd");
		
	
	}
/*	if (allowAltBranch=="Y" && validateUser=="N" && userType=='ib')
	{
	errorString=errorString+"User Id not entitled to AlternateBranch";
	}
	*/
	if(allowBearerInd=="Y" && document.getElementById("bearerIndDiv").className=="cVisible") {
		origValues.bearerInd=getActualValue("bearerIndHid"+depositRId);
		modValues.bearerInd=getActualValue("bearerInd");
	}
	if (multiCurrencyClient =='Y') {
		origValues.currency=getActualValue("currencyHid"+depositRId);
		modValues.currency=getActualValue("currencyCode");
		origValues.bkpgCurrency=getActualValue("bkpgCurrencyHid"+depositRId);
		modValues.bkpgCurrency=getActualValue("bkpgCurrCode");
	}
	if(restrictedStockIndOnInquire=="Y" && document.getElementById("restrictedIndicatorDiv").style.display=="block") {
		origValues.restrictedStockInd=getActualValue("restrcitedStockIndHid"+depositRId);
		modValues.restrictedStockInd=getActualValue("restrictedStockInd");
	}
//	console.log("userType :"+userType+" actionType :"+actionType+" actionSubType :"+actionSubType +" clasname visible :"+document.getElementById("dtcByPassDiv").className +" depositRId :"+depositRId);
	if((userType=="op" && actionType=='inquire' && actionSubType!='dwacDrs' && document.getElementById("dtcByPassDiv").className=="cVisible")){
		origValues.byPassToDTC = getActualValue("dtcByPassIndHid"+depositRId);
		modValues.byPassToDTC = getActualValue("dtcByPassInd");
		//origValues.byPassToBKPG = getActualValue("bkpgByPassIndHid"+depositRId);
		//modValues.bkpgByPassInd = getActualValue("bkpgByPassInd");
	}
	var newCertArr=new Array();
	var oldCertArr=new Array();
	var ele=document.getElementById('certBody');
	var certAction="";
	var newTotQty=0;  
	var oldCerObj="", newCerObj="";
	var end_Date="";
	
	
	for(var i=0;i<ele.rows.length;i++){
	var oldEndDate=null;
	var newEndDate=null;
	if(document.getElementById("delCertRow"+i)!=null){
	oldEndDate=document.getElementById("delCertRow"+i).title;
	if(oldEndDate==null || trim(oldEndDate).length==0 || trim(oldEndDate)==''){
	
	oldEndDate=null;
	if(document.getElementById("delCertRow"+i).checked)
	newEndDate='Y';
	
    }
	else{
	newEndDate=document.getElementById("delCertRow"+i).checked?"Y":"N";
	}
	}
	
	//alert("oldEndDate::"+oldEndDate+"::newEndDate::"+newEndDate);
		// Delete and add allowed only in Initial or Receive state
		oldCertArr[i]={action:null, spsId:spsId, certPrefix:document.getElementById("certPrefix"+i).title, certNbr:document.getElementById("certNbr"+i).title, regName:trim(unescapeHTML(document.getElementById("certRegName"+i).title)), quantity:document.getElementById("certQty"+i).title, marketValue:document.getElementById("certMarketValue"+i).title, issueDate:document.getElementById("certIssueDate"+i).title, ofac:document.getElementById("certOfac"+i).title, sic:document.getElementById("certSic"+i).title, status:statusVal,locMovId:locMovId};
		newCertArr[i]={spsId:spsId, certPrefix:document.getElementById("certPrefix"+i).value, certNbr:document.getElementById("certNbr"+i).value, regName:trim(unescapeHTML(document.getElementById("certRegName"+i).value)), quantity:document.getElementById("certQty"+i).value, marketValue:document.getElementById("certMarketValue"+i).value, issueDate:document.getElementById("certIssueDate"+i).value, ofac:document.getElementById("certOfac"+i).value, sic:document.getElementById("certSic"+i).value, status:statusVal,locMovId:locMovId};
	
		
		if(statusVal =='INITIAL' || statusVal =='RECEIVE') {  
		
			if(document.getElementById("delCertRow"+i)!=null && document.getElementById("delCertRow"+i).type=="image"){
			//alert("asdasdasdasdasd");
				//newTotQty=parseFloat(newTotQty)+parseFloat(getActualValue("certQty"+i));
				certAction="I";newCertArr[i].action="I";
				oldCertArr[i].locMovId = null;
			}else if(document.getElementById("delCertRow"+i)!=null && oldEndDate!=newEndDate){
				if(newEndDate=="Y")
				newCertArr[i].action="D";
				else if(newEndDate=="N")
				newCertArr[i].action="U";
				
				oldCertArr[i].deletedCertInd=oldEndDate ;
				newCertArr[i].deletedCertInd=newEndDate ;
			
				
			}else{
			//	newTotQty=parseFloat(newTotQty)+parseFloat(getActualValue("certQty"+i));
				newCertArr[i].action="U";
			}
		} else {
		//	newTotQty=parseFloat(newTotQty)+parseFloat(getActualValue("certQty"+i));
			newCertArr[i].action="U";
		}
		
		/*	if (allowGiftInhInd == 'Y') {
				oldCertArr[i].giftInhInd=document.getElementById("giftInhInd"+i).title;
				newCertArr[i].giftInhInd=document.getElementById("giftInhInd"+i).value;
			}
	   */
		if (document.getElementById("certOfac"+i).value == 'U') {
			isOFACValid = false;
		}
	}

	// Validation: For non-canadian users we should not allow the user to enter a deposit if the OFAC status is Undefined (i.e., U), 
	// allowed values are either N or Y.
	if (countryCode != "CA" && !isOFACValid) {
		alert("OFAC status is Undefined. Can not proceed further.");
		return false;
	}

	//modValues.quantity=parseFloat(newTotQty)+parseFloat(modValues.quantity);
	//modValues.quantity=""+newTotQty.toFixed(2);
	//modValues.quantity=""+newTotQty.toFixed(5);
	//modValues.secAmount=""+(parseFloat(newTotQty)*parseFloat(priceOnly)).toFixed(2);
	origValues.quantity=origValues.quantity.replace(",","");
	origValues.secAmount=origValues.secAmount.replace(",","");
	//alert("Tot Qty - "+modValues.quantity +" price - "+modValues.secPrice+" Tot Amt - "+modValues.secAmount);
	
	/*This updates the existing docs */
	var docsDataChanged=false;
	var ele=document.getElementById('docBody');
	var oldDocArray=new Array();
	var newDocArray=new Array();
	var oldDocObj={};
	var newDocObj={};
	var docAction="";
	var date="MM-dd-yyyy";
	var k=0;
	for(var i=0;i<ele.rows.length;i++){
		oldDocObj={action:null,id:ele.rows[i].cells[0].firstChild.value,recivedDt:null,ShpCheckBox:null};
		if(allowShippedDtind=='Y'){
		if(ele.rows[i].cells[3]!=null)
		oldDocObj.comments=ele.rows[i].cells[3].firstChild.title;
		docsDataChanged=false;
		}else{
			if(ele.rows[i].cells[2]!=null)
				oldDocObj.comments=ele.rows[i].cells[2].firstChild.title;
				docsDataChanged=false;	
		
		}
		if(allowShippedDtind=='Y'){
		if(ele.rows[i].cells[0].firstChild.title =="new"){
			docsDataChanged=true;
			docAction="I";	
			oldDocObj={action:null,id:null,recivedDt:null};
		}else if(ele.rows[i].cells[5]!=null && ele.rows[i].cells[5].firstChild.checked==true){
			docsDataChanged=true;
			docAction="D";	
		}else{
			docAction="U";
		}
		}else{
			if(ele.rows[i].cells[0].firstChild.title =="new"){
				docsDataChanged=true;
				docAction="I";	
				oldDocObj={action:null,id:null,recivedDt:null};
			}else if(ele.rows[i].cells[4]!=null && ele.rows[i].cells[4].firstChild.checked==true){
				docsDataChanged=true;
				docAction="D";	
			}else{
				docAction="U";
			}
		}
		if(allowShippedDtind=='Y'){
		newDocObj={action:docAction,id:ele.rows[i].cells[0].firstChild.value,recivedDt:null,ShpCheckBox:ele.rows[i].cells[2].firstChild.value};
		}
		else{
			newDocObj={action:docAction,id:ele.rows[i].cells[0].firstChild.value,recivedDt:null,ShpCheckBox:null};
	
		}
		if(allowShippedDtind=='Y'){
		if(ele.rows[i].cells[2]!=null)
		newDocObj.comments=ele.rows[i].cells[3].firstChild.value;
		}else{
			newDocObj.comments=ele.rows[i].cells[2].firstChild.value;
		}
		
		if(ele.rows[i].cells[1].firstChild.type=='checkbox' && ele.rows[i].cells[1].firstChild.checked==true){
			//alert("recieved dt  Changed");
			docsDataChanged=true;
			newDocObj['recivedDt']=date;
		}
		if(allowShippedDtind=='Y'){
			if(ele.rows[i].cells[2].firstChild.type=='checkbox' && ele.rows[i].cells[2].firstChild.checked==true){
				//alert("shipped ind Changed");
				docsDataChanged=true;
				newDocObj.shippedInd=date;
			}
			if(ele.rows[i].cells[3]!=null && ele.rows[i].cells[3].firstChild.value!=ele.rows[i].cells[3].firstChild.title){
				//alert("Additional Text Changed");
				docsDataChanged=true;
				newDocObj['comments']=ele.rows[i].cells[3].firstChild.value;
			}
		}
		else{
		
		if(ele.rows[i].cells[2]!=null && ele.rows[i].cells[2].firstChild.value!=ele.rows[i].cells[2].firstChild.title){
			//alert("Additional Text Changed");
			docsDataChanged=true;
			newDocObj['comments']=ele.rows[i].cells[2].firstChild.value;
		}
		}
		if(true==docsDataChanged){
			oldDocArray[k]=oldDocObj;
			newDocArray[k++]=newDocObj;
		}	
	}
	
	for(var i=0;i<oldDocArray.length;i++){
		var oldObj=oldDocArray[i];
		var newObj=newDocArray[i];
		for(oldProp in oldObj){
			if(newObj[oldProp]==trim(oldObj[oldProp])){
				newObj[oldProp]=null;
			}
		}
	}
	
	// If there are any docs to be deleted because of a new event, include them also.
	if(delDocIds.length>0){
		for(var i=0;i<delDocIds.length;i++){
			oldDocArray[k]={action:null,id:delDocIds[i],recivedDt:null,comments:null,locMovId:locMovId};
			newDocArray[k++]={action:'D',id:delDocIds[i],recivedDt:null,comments:null,locMovId:locMovId};
		}
	}
	
	// if there are no changes to sps, cert and doc details then don't make update request.
	if(false==isSPSdataChanged(origValues,modValues) && false==isCertdataChanged(oldCertArr,newCertArr) && false==isDocsdataChanged(oldDocArray,newDocArray)){
		alert("There are no changes to update.");
		return false;
	}
	
	for(oldProp in origValues){
		if(oldProp=='dsrqQuestList') continue;  // don't compare the dsrqQuestList. 
		if(oldProp=='quantity' &&	parseFloat(modValues[oldProp]) == parseFloat(origValues[oldProp])) {
			modValues[oldProp]=null;
		} else if(trim(modValues[oldProp])!=trim(origValues[oldProp])){
			//alert("Org value = "+origValues[oldProp]+" New value= "+modValues[oldProp]);
		}else{
			modValues[oldProp]=null;
		}
	}
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;
	for(var i=0;i<oldCertArr.length;i++){
		var oldObj=oldCertArr[i];
		var newObj=newCertArr[i];
		if(newObj['action']=='D') 
			continue;
		for(oldProp in oldObj){
			if(newObj[oldProp]==trim(oldObj[oldProp])){
				newObj[oldProp]=null;
			}
		}
	}

	
	var docsAvailableStatus=AreAllDocsChecked();
	var tokId = document.getElementById("tokId").value;
	//alert ("3605");

    var curDest = getActualValue("destination");
	if (!docsAvailableStatus && curDest=='FBOX' && newDocArray.length > 0 && (newDocArray[0].action=='U' || newDocArray[0].action=='I')) {
	    var conf=window.confirm("Please change destination to something other than Free Box or Click Ok to continue with current destination.  (Destination is Free Box and partial receipt of documents)");
	    if (!conf) {
	        return false;
	    }
	}

	// loc move id value passing to DB
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;
	var uType = '';
	if ((isFAUsr!=null && isFAUsr=='true')) {
		    uType = 'FA';
		} else if ((isOpsUser!=null && isOpsUser=='true')) {
			uType = 'OPS';
		} else if ((branchUser!=null && branchUser=='true')) {
			uType = 'BR';
		}	
	secCont.depositUpdate(origValues,modValues,oldCertArr,newCertArr,oldDocArray,newDocArray,deposit_event,tokId,uType, function(result){	
		var res=result.split("||"); 
		inquireCerts(true,false);hideDiv("goBack",true);
		resetSearch();
		alert(res[0]);
	    highLiteLastUpdatedRow();
		
		if(docsAvailableStatus) {
			checkDocsAreDone();
		}
	}); 
}

// Required whenever a security is changed
getDsrqQuestDetails=function() {
	
	dsrqQuestList=null;
	if(dsrqReqd == 'Y') {
		var ele=document.getElementById("dsrqEligQuesBody");
		if(ele.rows.length > 0) {
			isDSRQChecked=true;
			dsrqQuestList=new Array();
			for(var i=0; i < ele.rows.length; i++) {
				dsrqQuestList[i]={
					question_cd:ele.rows[i].cells[1].firstChild.value,
					answer:ele.rows[i].cells[2].firstChild.value
				};
			}
		} 
	}
	
}
	
checkDocsAreDone=function(){
	//alert("Inside Docs check");
	//if(!AreAllDocsChecked()){return false;}

	/** To be implemented for RSTD transfer ***/
	var destination=boxLoc;
	if(destination=='RSTR' || destination=='LRSTR'){
	  if (destination == 'RSTR')
	 {   transmode = 'D';
	    
	    //changes made to to the foll=>Dtc RDS Transfer(Customer)-->Trigger through when all the documents are complete and destination=Rstr(route to Transfer Screen)
	    secCont.checkDocsCompleteness(spsId,destination,function(result){
		//alert("Result:"+result);
		if('N'==result){
			document.inquireForm.action="/spsvaultweb/transCert.view?action=trans&spsId="+spsId+"&cusip="+bwCUSIP+"&transmode=" + transmode+"&destination="+destination+"&rushind="+rushInd;
			document.inquireForm.submit();
		}
	  });
	  }else
	    transmode = 'L';
	  
	}
}

AreAllDocsChecked=function(){
	var reqEle=document.getElementById("docBody");
	//alert("Num of Doc "+ reqEle.rows.length);
	
	for(var i=0;i<reqEle.rows.length;i++){
		if(reqEle.rows[i].cells[1].firstChild.type=='checkbox' && reqEle.rows[i].cells[1].firstChild.checked==false) {
			//alert("doc "+(i+1)+" not checked");
			return false;
		}
	}
  	return reqEle.rows.length>0?true:false;
}


isSPSdataChanged=function(oldValue,newValue){

	for(oldProp in oldValue){
		if(oldProp=='action') continue;  // don't compare the actions. 
		if(oldProp=='dtcElig') continue;  // don't compare the DTC Eligible Ind. 
		if(oldProp=='dsrqQuestList') continue;  // don't compare the dsrqQuestList. 
		if(oldProp=='quantity' &&	parseFloat(newValue[oldProp]) == parseFloat(oldValue[oldProp]) ) {
			newValue[oldProp] = oldValue[oldProp]; // only reference is getting updated.
		}
		//alert(trim(oldValue[oldProp])+" "+trim(newValue[oldProp]));
		if(trim(newValue[oldProp])!=trim(oldValue[oldProp])){
			//alert("oldProp::"+oldProp+trim(oldValue[oldProp])+" "+trim(newValue[oldProp]));
			return true;
		}
	}
	return false;
}

isCertdataChanged=function(oldCerts,newCerts){
	for(var i=0;i<oldCerts.length;i++){
		var oldValue=oldCerts[i];
		var newValue=newCerts[i];
		//if the action is 'I' or 'D' then return true. if the action is 'U' then compare the remaining elements.
		if(newValue['action']=='I' || newValue['action']=='D') {
			return true;  //if there are any newely added certs or existing certs are being deleted then return 'true'
		}
		for(oldProp in oldValue){
			if(oldProp=='action') continue;
			//alert(trim(oldValue[oldProp])+" - "+trim(newValue[oldProp]));
			if(trim(newValue[oldProp])!=trim(oldValue[oldProp])){
				return true;
			}
		}
	}
	return false;
}

isDocsdataChanged=function(oldDocs,newDocs){
	for(var i=0;i<oldDocs.length;i++){
		var oldValue=oldDocs[i];
		var newValue=newDocs[i];
		if(newValue['action']=='I' || newValue['action']=='D') {
			return true;  //if there are any newely added docs or existing docss are being deleted then return 'true'
		}
		for(oldProp in oldValue){
			if(oldProp=='action') continue;
			//alert(trim(oldValue[oldProp])+" - "+trim(newValue[oldProp]));
			if(trim(newValue[oldProp])!=trim(oldValue[oldProp])){
				return true;
			}
		}
	}
	return false;
}

saveNewQuestionnaire=function(){
    var errorStr="";
    var tmp="";
	if(allowDTCEligCheckInquire=='Y'){
	tmp=trim(getActualValue("dtcEligInd"));
	
	//alert("chkDTCEligible1 -tmp   "+tmp +" chkBoxTypeCd= "+chkBoxTypeCd);
	
	if(tmp!=null && tmp!='Y'&& chkBoxTypeCd=="D")
	{
		errorStr=errorStr+"Security Is not DTC Eligible.Please select a different destination.<br>";
	}
	}
	if (chkChillDepIndBlk!=null && chkChillDepIndBlk=='Y' && chkBoxTypeCd=="D")
	{
		errorStr=errorStr+"Security is Chilled for DTC Deposits.Please select a different destination.<br>";
	}
	if(!showErrors(errorStr)){
		return false;
	}
	
	
	origValues={action:null,spsId:spsId,event:null, status:getActualValue("status"+depositRId), questList:null};
	var questList = new Array();
	var ele=document.getElementById("questionsBody");
	
	for(var i=0; i < ele.rows.length; i++) {
		if( ele.rows[i].cells[2].firstChild.selectedIndex == 0) {
			alert("Please select the Answer");
			ele.rows[i].cells[2].firstChild.focus();
			return false;
		}
		
		var notes="";
		if(ele.rows[i].cells[3].firstChild !=null) {
			notes= ele.rows[i].cells[3].firstChild.value;
		}
		questList[i]={
			question_cd:ele.rows[i].cells[1].firstChild.value,
			answer:ele.rows[i].cells[2].firstChild.value,  
			notes:notes
		}
		//alert(questList[i].question_cd +" "+questList[i].answer+ " " + questList[i].notes);
	}
	modValues={action:null,spsId:null,event:null,status:null, questList:questList};
	var tokId = document.getElementById("tokId").value;
	
	// loc move id value passing to DB
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;
	var uType = '';
	if ((isFAUsr!=null && isFAUsr=='true')) {
		    uType = 'FA';
		} else if ((isOpsUser!=null && isOpsUser=='true')) {
			uType = 'OPS';
		} else if ((branchUser!=null && branchUser=='true')) {
			uType = 'BR';
		}	
	secCont.depositUpdate(origValues,modValues,null,null,null,null,null,tokId,uType, function(result){
		var res=result.split("||");	
		newQuestionnaire='N';
		if (res[0] == 'Successful') {				
			document.getElementById('tab1').disabled=false;
			document.getElementById('tab3').disabled=false;
			document.getElementById('tab4').disabled=false;
			document.getElementById('tab5').disabled=false;
			document.getElementById('tab6').disabled=false;
			document.getElementById('tab7').disabled=false;
			//document.getElementById('tab8').disabled="disabled";
			document.getElementById('tab9').disabled=false;
			fireEvent(document.getElementById("tab3"),'click');
			if(specifyType=='newEventDoc') {
				continueSpecifyEventDocs();
			} else {
				continueSpecifyDocs();
			}
		} else if (res[0] =='QUE-HIT'){
			document.getElementById("guiMsgLabel").innerHTML="Deposit is on Hold - No changes can be done at this time";
			dwr.util.setValue("status"+depositRId,"HOLD");
			dwr.util.setValue("requestSpsIdStatus","HOLD");
			dwr.util.setValue("statusCodes","HOLD");
			dwr.util.setValue("guiLockInd"+depositRId,"Y");		
			userType="ib";
			hideDiv("updButton",true);
			alert("This request is put on Hold based on the question answers you have choosen");
		} else {
			alert(res[0]); 
		}
	}); 
	
}


deliveryUpdate=function(){
	var isOFACValid = true;
	if(!validateAcctAndSecurity())return false;
	if(!certValidate())return false;
	
	var delvType=deliveryType();
	var delvString=(delvType==0)?"FDLV":((delvType==1)?"PDLV":null );
	origValues={action:null,spsId:spsId,event:null,delvAddr:null,
	branch:null,account:null,rrCode:null,security:null,cusip:null,
	symbol:null,dtcElig:null,secPrice:null,dest:null,
	quantity:null,secAmount:null,secDesc:null,
	status:null,docEventCd:null,custFirmInd:null,comments:null};
	//For delivery(full or partial) we need to send all the values in modValues.
	modValues={action:'I',spsId:spsId,event:delvString,delvAddr:delvAddr,
	branch:getActualValue("branch"),account:accounStr(),rrCode:rrCode,
	security:bwADPNum,cusip:bwCUSIP,symbol:bwSymbol,
	dtcElig:getActualValue("dtcEligInd"),
	secPrice:getActualValue("price"),
	secDesc:trim(unescapeHTML(getActualValue("secDecText"))),
	dest:getActualValue("destination"),
	quantity:getActualValue("quantity"), 
	secAmount:getActualValue("amount"),
	status:getActualValue("status"+depositRId),
	docEventCd:getActualValue("docEventCdHid"+depositRId),
	custFirmInd:'C',
	comments:getActualValue("newComment"),
	//trailerDesc:inquireTrailerDesc};
	trailerDesc:getActualValue("trailerDesc")};
	
	
	if (allowGiftInhInd == 'Y' && document.getElementById("giftInhInd"+i) != null) {
		origValues.giftInhInd=document.getElementById("giftInhInd"+i).title;
		modValues.giftInhInd=document.getElementById("giftInhInd"+i).value;
    }
	

	var newCertArr=new Array();
	var oldCertArr=new Array();
	var ele=document.getElementById('certBody');
	var action="";
	for(var i=0;i<ele.rows.length;i++){
		action="";
		if(document.getElementById("certDlvCheckBox"+i).checked){
			action="DLV";
		}
		
		oldCertArr[i]={action:null,certPrefix:null,certNbr:document.getElementById("certNbr"+i).title,regName:null,quantity:null,marketValue:null,issueDate:null,ofac:null,sic:null};
		if(delvType==0){
		/*  Full delivery */
			newCertArr[i]={action:delvString,certPrefix:null,certNbr:document.getElementById("certNbr"+i).value,regName:null,quantity:null,marketValue:null,issueDate:null,ofac:null,sic:null};
		}else {// partial delivery
			//alert(" partial DEL Act Type:"+action);
			if("DLV"==action) {   //certs selected for delivery
				newCertArr[i]={action:delvString,certPrefix:document.getElementById("certPrefix"+i).value, certNbr:document.getElementById("certNbr"+i).value, regName:trim(unescapeHTML(document.getElementById("certRegName"+i).value)), quantity:document.getElementById("certQty"+i).value, marketValue:document.getElementById("certMarketValue"+i).value, issueDate:document.getElementById("certIssueDate"+i).value, ofac:document.getElementById("certOfac"+i).value, sic:document.getElementById("certSic"+i).value};
				if (document.getElementById("certOfac"+i).value == 'U') {
					isOFACValid = false;
				}
				/*if (allowGiftInhInd == 'Y') {
					oldCertArr[i].giftInhInd=document.getElementById("giftInhInd"+i).title;
					newCertArr[i].giftInhInd=document.getElementById("giftInhInd"+i).value;
				}*/
			} else{			///remaining certs 
				newCertArr[i]={action:null,certPrefix:null,certNbr:document.getElementById("certNbr"+i).value,regName:null,quantity:null,marketValue:null,issueDate:null,ofac:null,sic:null};
			}
		}
	}

	// Validation: For non-canadian users we should not allow the user to enter a deposit if the OFAC status is Undefined (i.e., U), 
	// allowed values are either N or Y.
	if (countryCode != "CA" && !isOFACValid) {
		alert("OFAC status is Undefined. Can not proceed further.");
		return false;
	}
	//alert("Delivery "+modValues.secAmount);
	// Remove commas from qty and amount as they are used for display format
	modValues.quantity=modValues.quantity.replace(",","");
	modValues.secAmount=modValues.secAmount.replace(",","");
	
	// loc move id value passing to DB
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;
	modValues.trailerDesc=getActualValue("trailerDesc");
	var tokId = document.getElementById("tokId").value;
	var uType = '';
	if ((isFAUsr!=null && isFAUsr=='true')) {
		    uType = 'FA';
		} else if ((isOpsUser!=null && isOpsUser=='true')) {
			uType = 'OPS';
		} else if ((branchUser!=null && branchUser=='true')) {
			uType = 'BR';
		}	
	secCont.depositUpdate(origValues,modValues,oldCertArr,newCertArr,null,null,delvString,tokId,uType, function(result){
		inquireCerts(true,false);hideDiv("goBack",true);
		resetSearch();
		var res=result.split("||");	alert(res[0]); 
		highLiteLastUpdatedRow();
	}); 
	
	
	
	

}


repairUpdate=function(){

	if(!validateAcctAndSecurity())return false;
	if(!certValidate())return false;
	var isOFACValid = true;
	
	getDsrqQuestDetails();
	var newDsrqInd= (isDSRQChecked)? ((isDSRQdone)?'Y':'N')	:getActualValue("dsrqInd"+depositRId);
	
	var finalSubDimeInd = (isSubDimedone)?newSubDimeInd:getActualValue("subDimeInd"+depositRId);
	
	var origValues={action:null,spsId:spsId,event:null,branch:getActualValue("branch"+depositRId),account:getActualValue("account"+depositRId),rrCode:null,security:getActualValue("secNbr"+depositRId),cusip:getActualValue("cusip"+depositRId),symbol:getActualValue("symbol"+depositRId),dest:getActualValue("dest"+depositRId),quantity:getActualValue("quantity"+depositRId),dtcElig:null,status:getActualValue("status"+depositRId),secPrice:getActualValue("secPrice"+depositRId),secAmount:getActualValue("secAmount"+depositRId),secDesc:trim(unescapeHTML(getActualValue("secDesc"+depositRId))),dsrqInd:getActualValue("dsrqInd"+depositRId),comments:null, dsrqQuestList:null,  subDimeInd:getActualValue("subDimeInd"+depositRId),locMovId:locMovId,trailerDesc:inquireTrailerDesc};
	var modValues ={action:'U',spsId:spsId,event:null,branch:getActualValue("branch"),account:accounStr(),rrCode:rrCode,security:bwADPNum,cusip:bwCUSIP,symbol:bwSymbol,dest:getActualValue("destination"),quantity:getActualValue("quantity"),dtcElig:getActualValue("dtcEligInd"),status:getActualValue("status"+depositRId), secPrice:(null==getActualValue("price"))?"0":getActualValue("price"),secAmount:getActualValue("amount"),secDesc:trim(unescapeHTML(getActualValue("secDecText"))),dsrqInd:newDsrqInd,comments:getActualValue("newComment"), dsrqQuestList:dsrqQuestList, subDimeInd:finalSubDimeInd,locMovId:locMovId,trailerDesc:getActualValue("trailerDesc")};
	
	if(document.getElementById("bondRegTypeDiv").className=="cVisible") {
		origValues.bondRegType=getActualValue("bondRegTypeHid"+depositRId);
		modValues.bondRegType=getActualValue("bondRegType");
	} else {
		if(allowBondRegType=='Y' && getActualValue("bondRegTypeHid"+depositRId) != null && getActualValue("bondRegTypeHid"+depositRId) !='') {
			origValues.bondRegType=getActualValue("bondRegTypeHid"+depositRId);
			modValues.bondRegType='';
		}
	}
	if(allowNegotiableInd=="Y" && document.getElementById("negoIndDiv").className=="cVisible") {
		origValues.negotiable=getActualValue("negotiableIndHid"+depositRId);
		modValues.negotiable=getActualValue("negotiableInd");
	}
	
	
	if(allowNegotiableInd=="Y" && document.getElementById("negoIndDiv").className=="cVisible") {
		origValues.negotiable=getActualValue("negotiableIndHid"+depositRId);
		modValues.negotiable=getActualValue("negotiableInd");
	}
	
	if(restrictedSecIndOnInquire=="Y") {
		origValues.restrictedInd=rstrInd;
		var newRstrInd = (document.getElementById("rstrIndChkBox").checked)?'R':'N';
		modValues.restrictedInd=newRstrInd;
	}
	
	
		if(allowDeliverToBranchInq=="Y" && document.getElementById("deliverToBranchDiv").className=="cVisible") {
		origValues.deliverToBranch=getActualValue("deliverToBranchHid"+depositRId);
		modValues.deliverToBranch=getActualValue("deliverToBranch");
	}
	
	if(allowAccountTypeInq=="Y" && document.getElementById("accountTypeCd").style.display!="none") {
		
		origValues.accTypeCd=getActualValue("accTypeCdHid"+depositRId);
		modValues.accTypeCd=getActualValue("accountTypeCd");
		
	
	}
	
	if(allowBearerInd=="Y" && document.getElementById("bearerIndDiv").className=="cVisible") {
		origValues.bearerInd=getActualValue("bearerIndHid"+depositRId);
		modValues.bearerInd=getActualValue("bearerInd");
	}
	
	if (multiCurrencyClient =='Y') {
		origValues.currency=getActualValue("currencyHid"+depositRId);
		modValues.currency=getActualValue("currencyCode");
		origValues.bkpgCurrency=getActualValue("bkpgCurrencyHid"+depositRId);
		modValues.bkpgCurrency=getActualValue("bkpgCurrCode");
	}
	
	var newCertArr=new Array();
	var oldCertArr=new Array();
	var ele=document.getElementById('certBody');
	for(var i=0;i<ele.rows.length;i++){
		oldCertArr[i]={action:null,certPrefix:document.getElementById("certPrefix"+i).title, certNbr:document.getElementById("certNbr"+i).title, regName:trim(unescapeHTML(document.getElementById("certRegName"+i).title)), quantity:document.getElementById("certQty"+i).title, marketValue:document.getElementById("certMarketValue"+i).title, issueDate:document.getElementById("certIssueDate"+i).title, ofac:document.getElementById("certOfac"+i).title, sic:document.getElementById("certSic"+i).title, status:statusVal,locMovId:locMovId };
		newCertArr[i]={action:'U',certPrefix:document.getElementById("certPrefix"+i).value, certNbr:document.getElementById("certNbr"+i).value, regName:trim(unescapeHTML(document.getElementById("certRegName"+i).value)), quantity:document.getElementById("certQty"+i).value, marketValue:document.getElementById("certMarketValue"+i).value, issueDate:document.getElementById("certIssueDate"+i).value, ofac:document.getElementById("certOfac"+i).value, sic:document.getElementById("certSic"+i).value, status:statusVal,locMovId:locMovId };
		if (allowGiftInhInd == 'Y' && document.getElementById("giftInhIndDiv").className=="cVisible" ) {
			oldCertArr[i].giftInhInd= getActualValue("giftInhIndHid"+ i); 
			newCertArr[i].giftInhInd=getActualValue("giftInhIndHid");
		}
		if (document.getElementById("certOfac"+i).value == 'U') {
			isOFACValid = false;
		}
	}

	// Validation: For non-canadian users we should not allow the user to enter a deposit if the OFAC status is Undefined (i.e., U), 
	// allowed values are either N or Y.
	if (countryCode != "CA" && !isOFACValid) {
		alert("OFAC status is Undefined. Can not proceed further.");
		return false;
	}
	
	modValues.quantity=modValues.quantity.replace(",","");
	modValues.secAmount=modValues.secAmount.replace(",","");
	origValues.quantity=origValues.quantity.replace(",","");
	origValues.secAmount=origValues.secAmount.replace(",","");
	//alert("Tot Qty - "+modValues.quantity +" Tot Amt - "+modValues.secAmount+" , Old Qty - "+origValues.quantity +" Old Amt - "+origValues.secAmount);
	
	

	//from here
	
	var docsDataChanged=false;
	var ele=document.getElementById('docBody');
	var oldDocArray=new Array();
	var newDocArray=new Array();
	var oldDocObj={};
	var newDocObj={};
	var docAction="";
	var shipped="";
	var date="MM-dd-yyyy";
	var k=0;
	for(var i=0;i<ele.rows.length;i++){
		oldDocObj={action:null,id:ele.rows[i].cells[0].firstChild.value,recivedDt:null};
		if(ele.rows[i].cells[2]!=null)
		oldDocObj.comments=ele.rows[i].cells[2].firstChild.title;
		docsDataChanged=false;
		if(allowShippedDtind=='Y'){
		if(ele.rows[i].cells[0].firstChild.title =="new"){
			docsDataChanged=true;
			docAction="I";	
			oldDocObj={action:null,id:null,recivedDt:null,locMovId:locMovId,shippedInd:null};
			
		}else if(ele.rows[i].cells[5]!=null && ele.rows[i].cells[5].firstChild.checked==true){
			docsDataChanged=true;
			docAction="D";	
		}else{
			docAction="U";
		}
		}
		else{
			if(ele.rows[i].cells[0].firstChild.title =="new"){
				docsDataChanged=true;
				docAction="I";	
				oldDocObj={action:null,id:null,recivedDt:null,locMovId:locMovId,shippedInd:null};
				
			}else if(ele.rows[i].cells[4]!=null && ele.rows[i].cells[4].firstChild.checked==true){
				docsDataChanged=true;
				docAction="D";	
			}else{
				docAction="U";
			}	
		}
		newDocObj={action:docAction,id:ele.rows[i].cells[0].firstChild.value,recivedDt:null,locMovId:locMovId,shippedInd:null};
		if(allowShippedDtind=='Y'){
			
		if(ele.rows[i].cells[2].firstChild.type=='checkbox' && ele.rows[i].cells[2].firstChild.checked==true){
		newDocObj.shippedInd=date;
		}
		if(ele.rows[i].cells[3]!=null){
		newDocObj.comments=ele.rows[i].cells[3].firstChild.value;
		
		}
		}else{
		
			if(ele.rows[i].cells[2]!=null){
				newDocObj.comments=ele.rows[i].cells[2].firstChild.value;
		}
		}
		if(ele.rows[i].cells[1].firstChild.type=='checkbox' && ele.rows[i].cells[1].firstChild.checked==true){
			//alert("Received Date Changed");
			docsDataChanged=true;
			newDocObj['recivedDt']=date;
		}
		if(allowShippedDtind=='Y'){
			if(ele.rows[i].cells[2].firstChild.type=='checkbox' && ele.rows[i].cells[2].firstChild.checked==true){
				//alert("shipped ind Changed");
				docsDataChanged=true;
				newDocObj.shippedInd=date;
				alert(ele.rows[i].cells[2].firstChild.checked);
			}
			if(ele.rows[i].cells[3]!=null && ele.rows[i].cells[3].firstChild.value!=ele.rows[i].cells[3].firstChild.title){
				//alert("Additional Text Changed");
				docsDataChanged=true;
				newDocObj['comments']=ele.rows[i].cells[3].firstChild.value;
			}
		}
		else{

			if(ele.rows[i].cells[2]!=null && ele.rows[i].cells[2].firstChild.value!=ele.rows[i].cells[2].firstChild.title){
			//alert("Additional Text Changed");
			docsDataChanged=true;
			newDocObj['comments']=ele.rows[i].cells[2].firstChild.value;
		}
		}
		if(true==docsDataChanged){
			oldDocArray[k]=oldDocObj;
			newDocArray[k++]=newDocObj;
		}	
	}
	
	
	if(false==isSPSdataChanged(origValues,modValues) && false==isCertdataChanged(oldCertArr,newCertArr) && false==isDocsdataChanged(oldDocArray,newDocArray)){
		alert("There are no changes to update.");
		return false;
	}
	
	
	
	for(oldProp in origValues){
		if(oldProp=='dsrqQuestList') continue;  // don't compare the dsrqQuestList. 
		if(oldProp=='quantity' &&	parseFloat(modValues[oldProp]) == parseFloat(origValues[oldProp])) {
			modValues[oldProp]=null;
		} else if(trim(modValues[oldProp])!=trim(origValues[oldProp])){
			//alert("Org value = "+origValues[oldProp]+" New value= "+modValues[oldProp]);
		}else{
			modValues[oldProp]=null;
		}
	}
	
	for(var i=0;i<oldCertArr.length;i++){
		var oldObj=oldCertArr[i];
		var newObj=newCertArr[i];
		for(oldProp in oldObj){
			if(newObj[oldProp]==oldObj[oldProp]){
				newObj[oldProp]=null;
			}
		}
	}
	
	
	for(var i=0;i<oldDocArray.length;i++){
		var oldObj=oldDocArray[i];
		var newObj=newDocArray[i];
		for(oldProp in oldObj){
			if(newObj[oldProp]==trim(oldObj[oldProp])){
				newObj[oldProp]=null;
			}
		}
	}
	
	// till here
	
	
	
	// if there are no changes to sps, cert and doc details then don't make update request.
	if(false==isSPSdataChanged(origValues,modValues) && false==isCertdataChanged(oldCertArr,newCertArr) && false==isDocsdataChanged(oldDocArray,newDocArray)){
		alert("There are no changes to update.");
		return false;
	}
	
	var tokId = document.getElementById("tokId").value;
	
	// loc move id value passing to DB
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;
	var uType = '';
	if ((isFAUsr!=null && isFAUsr=='true')) {
		    uType = 'FA';
		} else if ((isOpsUser!=null && isOpsUser=='true')) {
			uType = 'OPS';
		} else if ((branchUser!=null && branchUser=='true')) {
			uType = 'BR';
		}	
	secCont.depositUpdate(origValues,modValues,oldCertArr,newCertArr,oldDocArray,newDocArray,null,tokId,uType, function(result){
			var res=result.split("||");alert(res[0]); 
			hideDiv("goBack",true);
			hideDiv("depositfs",true);
			var trsId=document.getElementById("transId").value;
			document.inquireForm.action = "/spsvaultweb/repairQueue.view?trsId="+trsId+"&updInd=Y";
			document.inquireForm.submit();
		}); 

}

ibUpdate=function(){

   if(actionSubType =='dwacDrs'){
   updateDWACDRSDepsoit();
   //alert("HELLO");
   }
   else{
   //alert("My Hello");
   	var isOFACValid = true;
	if(!validateAcctAndSecurity())return false;
	if(!certValidate())return false;
	
	getDsrqQuestDetails();
	var newDsrqInd= (isDSRQChecked)? ((isDSRQdone)?'Y':'N')	:getActualValue("dsrqInd"+depositRId);
	var finalSubDimeInd = (isSubDimedone)?newSubDimeInd:getActualValue("subDimeInd"+depositRId);

	var origValues={action:null,spsId:spsId,event:null,branch:getActualValue("branch"+depositRId),account:getActualValue("account"+depositRId),rrCode:null,security:getActualValue("secNbr"+depositRId),cusip:getActualValue("cusip"+depositRId),symbol:getActualValue("symbol"+depositRId),dest:getActualValue("dest"+depositRId),quantity:getActualValue("quantity"+depositRId),dtcElig:null,status:getActualValue("status"+depositRId),secPrice:getActualValue("secPrice"+depositRId),secAmount:getActualValue("secAmount"+depositRId),secDesc:trim(unescapeHTML(getActualValue("secDesc"+depositRId))),dsrqInd:getActualValue("dsrqInd"+depositRId),comments:null, dsrqQuestList:null, subDimeInd:getActualValue("subDimeInd"+depositRId),locMovId:locMovId,trailerDesc:inquireTrailerDesc,frozenAccType:frozenAccOldVal};
	var modValues ={action:'U',spsId:spsId,event:null,branch:getActualValue("branch"),account:accounStr(),rrCode:rrCode,security:bwADPNum,cusip:bwCUSIP,symbol:bwSymbol,dest:getActualValue("destination"),quantity:getActualValue("quantity"),dtcElig:getActualValue("dtcEligInd"),status:getActualValue("status"+depositRId), secPrice:(null==getActualValue("price"))?"0":getActualValue("price"),secAmount:getActualValue("amount"),secDesc:trim(unescapeHTML(getActualValue("secDecText"))),dsrqInd:newDsrqInd,comments:getActualValue("newComment"), dsrqQuestList:dsrqQuestList, subDimeInd:finalSubDimeInd,locMovId:locMovId,trailerDesc:getActualValue("trailerDesc"),frozenAccType:getSecoutValue("frozenDescVal")};
	if(restrictedSecIndOnInquire=="Y") {
		origValues.restrictedInd=rstrInd;
		var newRstrInd = (document.getElementById("rstrIndChkBox").checked)?'R':'N';
		modValues.restrictedInd=newRstrInd;
	}
	
	
	if(document.getElementById("bondRegTypeDiv").className=="cVisible") {
		origValues.bondRegType=getActualValue("bondRegTypeHid"+depositRId);
		modValues.bondRegType=getActualValue("bondRegType");
	} else {
		if(allowBondRegType=='Y' && getActualValue("bondRegTypeHid"+depositRId) != null && getActualValue("bondRegTypeHid"+depositRId) !='') {
			origValues.bondRegType=getActualValue("bondRegTypeHid"+depositRId);
			modValues.bondRegType='';
		}
	}
	if(allowNegotiableInd=="Y" && document.getElementById("negoIndDiv").className=="cVisible") {
		origValues.negotiable=getActualValue("negotiableIndHid"+depositRId);
		modValues.negotiable=getActualValue("negotiableInd");
	}
	
		if(allowDeliverToBranchInq=="Y" && document.getElementById("deliverToBranchDiv").className=="cVisible") {
		origValues.deliverToBranch=getActualValue("deliverToBranchHid"+depositRId);
		modValues.deliverToBranch=getActualValue("deliverToBranch");
	}
	
	
	if(allowAccountTypeInq=="Y" && document.getElementById("accountTypeCd").style.display!="none") {
	    origValues.accTypeCd=getActualValue("accTypeCdHid"+depositRId);
		modValues.accTypeCd=getActualValue("accountTypeCd");
     }
     
	
	if(allowBearerInd=="Y" && document.getElementById("bearerIndDiv").className=="cVisible") {
		origValues.bearerInd=getActualValue("bearerIndHid"+depositRId);
		modValues.bearerInd=getActualValue("bearerInd");
	}
	
	
	if (allowGiftInhInd == 'Y' && document.getElementById("giftInhIndDiv").className=="cVisible") {
			origValues.giftInhInd=getActualValue("giftInhIndHid"+depositRId);
			modValues.giftInhInd=getActualValue("giftInhInd");
	}
	
	if (multiCurrencyClient =='Y') {
		origValues.currency=getActualValue("currencyHid"+depositRId);
		modValues.currency=getActualValue("currencyCode");
		origValues.bkpgCurrency=getActualValue("bkpgCurrencyHid"+depositRId);
		modValues.bkpgCurrency=getActualValue("bkpgCurrCode");
	}
	
	var newCertArr=new Array();
	var oldCertArr=new Array();
	var ele=document.getElementById('certBody');
	var certAction="";
	var newTotQty=0;  
	for(var i=0;i<ele.rows.length;i++){
		// IB delete and add allowed only in Initial status
		var oldEndDate=null;
		var newEndDate=null;
		if(document.getElementById("delCertRow"+i)!=null){
		oldEndDate=document.getElementById("delCertRow"+i).title;
		if(oldEndDate==null || trim(oldEndDate).length==0 || trim(oldEndDate)==''){
		
		oldEndDate=null;
		if(document.getElementById("delCertRow"+i).checked)
		newEndDate='Y';
		
	    }
		else{
		newEndDate=document.getElementById("delCertRow"+i).checked?"Y":"N";
		}
		}
		oldCertArr[i]={action:null,certPrefix:document.getElementById("certPrefix"+i).title, certNbr:document.getElementById("certNbr"+i).title, regName:trim(unescapeHTML(document.getElementById("certRegName"+i).title)), quantity:document.getElementById("certQty"+i).title, marketValue:document.getElementById("certMarketValue"+i).title, issueDate:document.getElementById("certIssueDate"+i).title, ofac:document.getElementById("certOfac"+i).title, sic:document.getElementById("certSic"+i).title, status:statusVal,locMovId:locMovId };
	    newCertArr[i]={action:certAction,certPrefix:document.getElementById("certPrefix"+i).value, certNbr:document.getElementById("certNbr"+i).value, regName:trim(unescapeHTML(document.getElementById("certRegName"+i).value)), quantity:document.getElementById("certQty"+i).value, marketValue:document.getElementById("certMarketValue"+i).value, issueDate:document.getElementById("certIssueDate"+i).value, ofac:document.getElementById("certOfac"+i).value, sic:document.getElementById("certSic"+i).value, status:statusVal,locMovId:locMovId };
	
		
		if(statusVal =='INITIAL') {  
		
			if(document.getElementById("delCertRow"+i)!=null && document.getElementById("delCertRow"+i).type=="image"){
				//newTotQty=parseFloat(newTotQty)+parseFloat(getActualValue("certQty"+i));
				certAction="I";newCertArr[i].action="I";
			}else if(document.getElementById("delCertRow"+i)!=null && oldEndDate!=newEndDate){
				if(newEndDate=="Y")
				newCertArr[i].action="D";
				else if(newEndDate=="N")
				newCertArr[i].action="U";
				
				oldCertArr[i].deletedCertInd=oldEndDate ;
				newCertArr[i].deletedCertInd=newEndDate ;
			
				
			}else{
			//	newTotQty=parseFloat(newTotQty)+parseFloat(getActualValue("certQty"+i));
				newCertArr[i].action="U";
			}
		}else {
			
			newCertArr[i].action="U";
		}
		if (document.getElementById("certOfac"+i).value == 'U') {
			isOFACValid = false;
		}
			
	}
	// Validation: For non-canadian users we should not allow the user to enter a deposit if the OFAC status is Undefined (i.e., U), 
	// allowed values are either N or Y.
	if (countryCode != "CA" && !isOFACValid) {
		alert("OFAC status is Undefined. Can not proceed further.");
		return false;
	}
	
	//modValues.quantity=modValues.quantity.replace(",","");
	//modValues.secAmount=modValues.secAmount.replace(",","");
	//modValues.quantity=""+newTotQty.toFixed(5);
	//modValues.secAmount=""+(parseFloat(newTotQty)*parseFloat(priceOnly)).toFixed(2);
	//origValues.quantity=origValues.quantity.replace(",","");
	//origValues.secAmount=origValues.secAmount.replace(",","");
	//alert("Tot Qty - "+modValues.quantity +" Tot Amt - "+modValues.secAmount+" , Old Qty - "+origValues.quantity +" Old Amt - "+origValues.secAmount);
	var eventType = null;
	if (trim(msgType)=='DLV' && (userType=='cbibinq'|| userType=='ib')) {
		eventType="DLV_CLEANUP";
	} else if(false==isSPSdataChanged(origValues,modValues) && false==isCertdataChanged(oldCertArr,newCertArr)){
		alert("There are no changes to update.");
		return false;
	}
	for(oldProp in origValues){
		if(oldProp=='dsrqQuestList') continue;  // don't compare the dsrqQuestList. 
		if(oldProp=='quantity' &&	parseFloat(modValues[oldProp]) == parseFloat(origValues[oldProp])) {
			modValues[oldProp]=null;
		} else if(trim(modValues[oldProp])!=trim(origValues[oldProp])){
			//alert("Org value = "+origValues[oldProp]+" New value= "+modValues[oldProp]);
		}else{
			modValues[oldProp]=null;
		}
	}
	if (cibcActionElement!=null && cibcActionElement=="Update") {
		if (trim(oldCIBCBox)=="" || trim(oldCIBCBox)=="" || trim(oldCIBCBox)==trim(newCIBCBox)) {
			alert("There are no changes to update.Please change the destination for box movement");
			return false;
		}
	}
	
	for(var i=0;i<oldCertArr.length;i++){
		var oldObj=oldCertArr[i];
		var newObj=newCertArr[i];
		for(oldProp in oldObj){
			if(newObj[oldProp]==oldObj[oldProp]){
				newObj[oldProp]=null;
			}
		}
	}
	
	var tokId = document.getElementById("tokId").value;
	
	// loc move id value passing to DB
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;
	if (trim(msgType)=='DLV' && (userType=='cbibinq'|| userType=='ib')) {
		var newDest=$('#destination').val();
		if(newDest !=null && newDest != destOld) {
			origValues.dest = destOld;
			modValues.dest = newDest;
			eventType="DLV_CLEANUP_BOXMV";
		} else {
			eventType="DLV_CLEANUP";
		}
	}
	var uType = '';
	if ((isFAUsr!=null && isFAUsr=='true')) {
		    uType = 'FA';
		} else if ((isOpsUser!=null && isOpsUser=='true')) {
			uType = 'OPS';
		} else if ((branchUser!=null && branchUser=='true')) {
			uType = 'BR';
		}
	secCont.depositUpdate(origValues,modValues,oldCertArr,newCertArr,null,null,eventType,tokId,uType, function(result){
		inquireCerts(true,false);hideDiv("goBack",true);
		resetSearch();
		var res=result.split("||");	alert(res[0]); 
		highLiteLastUpdatedRow();
	}); 
}
}

function ibubsUpdate()
{

			var origValues={action:null,spsId:spsId};
			var modValues ={action:'U',spsId:spsId};
			var tokId = document.getElementById("tokId").value;
			// loc move id value passing to DB
			origValues.locMovId=locMovId;
			modValues.locMovId=locMovId;
			
			/*This updates the existing docs */
			var docsDataChanged=false;
			var ele=document.getElementById('docBody');
			var oldDocArray=new Array();
			var newDocArray=new Array();
			var oldDocObj={};
			var newDocObj={};
			var docAction="";
			var date="MM-dd-yyyy";
			var k=0;
			for(var i=0;i<ele.rows.length;i++){
				oldDocObj={action:null,id:ele.rows[i].cells[0].firstChild.value,recivedDt:null,ShpCheckBox:null};
				if(ele.rows[i].cells[2]!=null)
				oldDocObj.comments=ele.rows[i].cells[2].firstChild.title;
				docsDataChanged=false;
				if(allowShippedDtind=='Y'){
				if(ele.rows[i].cells[0].firstChild.title =="new"){
					docsDataChanged=true;
					docAction="I";	
					oldDocObj={action:null,id:null,recivedDt:null};
				}else if(ele.rows[i].cells[5]!=null && ele.rows[i].cells[5].firstChild.checked==true){
					docsDataChanged=true;
					docAction="D";	
				}else{
					docAction="U";
				}
				}
				if(allowShippedDtind=='Y' ){
				newDocObj={action:docAction,id:ele.rows[i].cells[0].firstChild.value,recivedDt:null,ShpCheckBox:ele.rows[i].cells[2].firstChild.value};
				}
				
				if(ele.rows[i].cells[3]!=null)
				newDocObj.comments=ele.rows[i].cells[3].firstChild.value;
				
				if(ele.rows[i].cells[1].firstChild.type=='checkbox' && ele.rows[i].cells[1].firstChild.checked==true){
					//alert("recieved dt  Changed");
					docsDataChanged=true;
					newDocObj['recivedDt']=date;
				}
				if(allowShippedDtind=='Y'){
					if(ele.rows[i].cells[2].firstChild.type=='checkbox' && ele.rows[i].cells[2].firstChild.checked==true){
						//alert("shipped ind Changed");
						docsDataChanged=true;
						newDocObj.shippedInd=date;
					}
					if(ele.rows[i].cells[3]!=null && ele.rows[i].cells[3].firstChild.value!=ele.rows[i].cells[3].firstChild.title){
						//alert("Additional Text Changed");
						docsDataChanged=true;
						newDocObj['comments']=ele.rows[i].cells[3].firstChild.value;
					}
				}
				if(true==docsDataChanged){
					oldDocArray[k]=oldDocObj;
					newDocArray[k++]=newDocObj;
				}	
			}
			
			for(var i=0;i<oldDocArray.length;i++){
				var oldObj=oldDocArray[i];
				var newObj=newDocArray[i];
				for(oldProp in oldObj){
					if(newObj[oldProp]==trim(oldObj[oldProp])){
						newObj[oldProp]=null;
					}
				}
			}
			
			var uType = '';
			if ((isFAUsr!=null && isFAUsr=='true')) {
				    uType = 'FA';
				} else if ((isOpsUser!=null && isOpsUser=='true')) {
					uType = 'OPS';
				} else if ((branchUser!=null && branchUser=='true')) {
					uType = 'BR';
				}
			secCont.depositUpdate(origValues,modValues,null,null,oldDocArray,newDocArray,null,tokId,uType, function(result){
				inquireCerts(true,false);hideDiv("goBack",true);
				resetSearch();
				var res=result.split("||");	alert(res[0]); 
				highLiteLastUpdatedRow();
			}); 
		}
	
	


boxmUpdate=function(){
    var errorStr="";
    var tmp="";
	if(allowDTCEligCheckInquire=='Y'){
	tmp=trim(getActualValue("dtcEligInd"));
	
	//alert("chkDTCEligible2 -tmp   "+tmp +" chkBoxTypeCd= "+chkBoxTypeCd);
	if(tmp!=null && tmp!='Y'&& chkBoxTypeCd=="D")
	{
		errorStr=errorStr+"Security Is not DTC Eligible.Please select a different destination.<br>";
	}
	}
	if (chkChillDepIndBlk!=null && chkChillDepIndBlk=='Y' && chkBoxTypeCd=="D")
	{
		errorStr=errorStr+"Security is Chilled for DTC Deposits.Please select a different destination.<br>";
	}
	if (chillIndVsDTCDstnCheck='Y' && chkChillDepIndBlk!=null && chkChillDepIndBlk=='Y' && chkBoxTypeCd=="D") {
		errorStr=errorStr+"Invalid CUSIP, cannot be deposited to DTC - Please select different destination.<br>";
	}
	if(!showErrors(errorStr)){
		return false;
	}
	
	
	var origValues={action:null,spsId:spsId,status:statusVal,dest:getActualValue("dest"+depositRId)};
	var modValues={action:'U',spsId:spsId,status:statusVal,dest:getActualValue("destination")};
	
	var tokId = document.getElementById("tokId").value;
	
	// loc move id value passing to DB
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;
	var uType = '';
	if ((isFAUsr!=null && isFAUsr=='true')) {
		    uType = 'FA';
		} else if ((isOpsUser!=null && isOpsUser=='true')) {
			uType = 'OPS';
		} else if ((branchUser!=null && branchUser=='true')) {
			uType = 'BR';
		}
	secCont.depositUpdate(origValues,modValues,null,null,null,null,null,tokId,uType, function(result){	
		var res=result.split("||"); 
		inquireCerts(true,false);hideDiv("goBack",true);
		resetSearch();
		alert(res[0]);
	    highLiteLastUpdatedRow();
	}); 

}

validateAcctAndSecurity=function(){
	
	// Validate the Branch and Account if they are changed
	if(getActualValue("branch"+depositRId) != getActualValue("branch") || getActualValue("account"+depositRId) != getActualValue("account") ) {
		var brDesc=getActualValue("accDesc");
		if(null==brDesc || brDesc.match("Account Not Found")=="Account Not Found"){
				alert("Account is invalid.. Cannot Update.");
				document.getElementById('account').focus();	
				//return false;
		}
	}
	// Don't allow updates on Frozen account
	if(acctFrzInd == 'Y') {
		alert("Account is Frozen.. Cannot Update.");
		return false;
	}
	
	
	//account type Indicator mandating
		if (allowAccountTypeInq=='Y' && accountTypeDisplay)	
		{tmp=trim(getActualValue("accountTypeCd"));
		  if(tmp==""){
			errorString=errorString+"Please enter Account Type Cd<br>";
		   }
		}
		
		
	
	// Validate the Security if it is changed
	if(getActualValue("cusip"+depositRId) != bwCUSIP ) {
		var secDesc=getActualValue("secDecText");
		var secObj = {secDesc:secDesc};
		if(null==secDesc || secObj['secDesc'].match("Security Not Found")=="Security Not Found"){
				alert("Security is Invalid.. Cannot Update.");
				document.getElementById('secText').focus();	
				return false;
		} else if(null==bwCUSIP || bwCUSIP=="null" || bwCUSIP==""){
				if (trim(bwADPNum) == '') {
					alert("Security is not valid, please verify once again");
					document.getElementById('secText').focus();	
					return false;
				}
		}
	}
	
	if(multiCurrencyClient=="Y") {
		
	//alert ("validCurrencyCd"+validCurrencyCd+"----");
	if(validCurrencyCd!="" &&  validCurrencyCd!="Y" ){
      alert(" Please Enter Valid Currency Code.");
      document.getElementById('currencyCode').focus();	
      return false;
		}
	
	/*alert ("validBkpgCurrencyCd"+validBkpgCurrencyCd);
	if(validBkpgCurrencyCd!="" &&  validBkpgCurrencyCd!="Y"  ){
     alert("InValid Book Keeping Currency Code. ");
     document.getElementById('bkpgCurrCode').focus();	
     return false;
     }
*/
    
     
    } 
	
	if(document.getElementById("bondRegTypeDiv").className=="cVisible" && 0==document.getElementById('bondRegType').selectedIndex){
		alert("Please Select Bond Type");
		document.getElementById('bondRegType').focus();	
		return false;
	}
	
	if(allowNegotiableInd=="Y" && document.getElementById("negoIndDiv").className=="cVisible" && 0==document.getElementById('negotiableInd').selectedIndex){
		alert("Please Select Negotiable");
		document.getElementById('negotiableInd').focus();	
		return false;
	}
	
	if(allowBearerInd=="Y" && document.getElementById("bearerIndDiv").className=="cVisible" && 0==document.getElementById('bearerInd').selectedIndex){
		alert("Please Select Bearer");
		document.getElementById('bearerInd').focus();	
		return false;
	}

	return true;
}


// code to check 10 cert validation.
totUserQtyValid=function(){
	
	var actVal=document.getElementById("quantity").value;
	var actUserVal=document.getElementById("totUserQuantity").value;
	if(parseFloat(actVal)==parseFloat(actUserVal)){
		return true;
	}else{
		return false;
	}	
}
validTotUserQty=function(){

var n=parseFloat(document.getElementById("totUserQuantity").value);
return typeof n == 'number' && !isNaN(n) && isFinite(n);

}


certValidate=function(){
	//var nameArr=["certPrefix","certNbr","certRegName","certQty","certMarketValue","certIssueDate"];
	
	var errorStr="";
	var lineErrorPrefix="At Row",emptyFiledErrPrefix=" Please enter ",emptyFiledErr="";
	var linrError="";
	var tmp="";
	if(allowDTCEligCheckInquire=='Y'){
	  tmp=trim(getActualValue("dtcEligInd"));
	//  alert("chkDTCEligible3 -tmp   "+tmp +" chkBoxTypeCd= "+chkBoxTypeCd);
	if(tmp!=null && tmp!='Y'&& chkBoxTypeCd=="D")
	{
		errorStr=errorStr+"Security Is not DTC Eligible.Please select a different destination.<br>";
	}
	}
	if (chkChillDepIndBlk!=null && chkChillDepIndBlk=='Y' && chkBoxTypeCd=="D")
	{
		errorStr=errorStr+"Security is Chilled for DTC Deposits.Please select a different destination.<br>";
	}
	if (chillIndVsDTCDstnCheck='Y' && chkChillDepIndBlk!=null && chkChillDepIndBlk=='Y' && chkBoxTypeCd=="D") {
		errorStr=errorStr+"Invalid CUSIP, cannot be deposited to DTC - Please select different destination.<br>";
	}
	if (multiCurrencyClient =='Y' && !isBkpgCurrCodeValid) {
		errorStr=errorStr+"InValid Book Keeping Currency Code.<br>";
	}
	var cBody=document.getElementById('certBody');
	for(var i=0;i<cBody.rows.length;i++){
		emptyFiledErr="";linrError="";
		 tmp=document.getElementById("certPrefix"+i).value;
		tmp=trim(tmp);
				
		//certificate prefix is not available always
		if(tmp!=""){
			linrError=linrError+ValidateAlpha(document.getElementById("certPrefix"+i).value,"Cerificate Prefix",4,false);
		}
		tmp=document.getElementById("certNbr"+i).value;
		tmp=trim(tmp);
		if(tmp!=""){
			linrError=linrError+ValidateAlpha(document.getElementById("certNbr"+i).value,"Cerificate Number",certNumberMaxLength,false);
		}else{
			emptyFiledErr=emptyFiledErr+"Cerificate Number ; ";
		}	

		tmp=document.getElementById("certRegName"+i).value;
		tmp=trim(tmp);
		if(tmp!=""){
			//linrError=linrError+ValidateAlphaSpace(document.getElementById("certRegName"+i).value,"Reg Name",150,false);
		}else{
			var e=document.getElementById('bearerInd');
	        var tmpValue=e.options[e.selectedIndex].value;
			if(allowBearerInd=='Y' && tmpValue=='Y')
				{
				//do nothing as this is a valid case for bearer indicator no reg has to be checked.
				}else{emptyFiledErr=emptyFiledErr+" Reg Name; ";}
			}
			
		
	
		tmp=document.getElementById("certQty"+i).value;
		tmp=trim(tmp);
		if(tmp!=""){
			//linrError=linrError+ValidateReal(document.getElementById("certQty"+i).value,"Quantity");
			linrError=linrError+ValidateFixedDecimal(document.getElementById("certQty"+i).value,"Quantity",5);
		}else{
			emptyFiledErr=emptyFiledErr+" Quantity; ";
		}
	
		tmp=document.getElementById("certMarketValue"+i).value;
		tmp=trim(tmp);
		if(tmp!=""){
			linrError=linrError+ValidateReal(document.getElementById("certMarketValue"+i).value,"Market Value");
		}else{
			emptyFiledErr=emptyFiledErr+"Market Value; ";
		}

		tmp=document.getElementById("certIssueDate"+i).value;
		tmp=trim(tmp);
		if(tmp!=""){
			var dateErr=validateDate(document.getElementById("certIssueDate"+i),"Issue Date");
			if(dateErr==""){  //if the issue date is valid, then make sure that it's not later than today.
				//dateStr=(today.getMonth()+1)+"/"+today.getDate()+"/"+today.getFullYear();
				var today_date= new Date().getTime();    
				var issue_date= new Date(tmp).getTime(); 
				//alert(today_date + " "+issue_date);
				if (issue_date > today_date) {
					dateErr="Issue Date less than or equals to today's date";
				}
			}
			linrError=linrError+dateErr;
		} else {
			if(actionType !='repair') {    // Issue date can be null for the items in TRANSIT for transfer agent
				emptyFiledErr=emptyFiledErr+" Issue Date; ";	
			}
		}
		
		linrError=trim(linrError);
		if(linrError!=""||emptyFiledErr!=""){
			errorStr=errorStr+lineErrorPrefix+" "+(i+1)+" "+emptyFiledErrPrefix+emptyFiledErr+linrError+"<br>";
		}
	}

	
	if(!showErrors(errorStr)){
		return false;
	}
	return true;
}
//// check deposit QTY Validation
depQtyValidate=function(){
	//var nameArr=["certPrefix","certNbr","certRegName","certQty","certMarketValue","certIssueDate"];
	
	var errorStr="";
	var lineErrorPrefix="At Row",emptyFiledErrPrefix=" Please enter ",emptyFiledErr="";
	var linrError="";
	
	if(depositQtyCheck=="Y" && !totUserQtyValid() ){
		errorString=errorString+"Total Quantity value is not matched with User Input Quantity <br>";
	}
if(depositQtyCheck=="Y" && !validTotUserQty()){
		errorString=errorString+"Total Share Quantity value must be a numeric <br>";
	}
	
		
		
	

	
	if(!showErrors(errorString)){
		return false;
	}
	return true;
}


showErrors=function(errStr){
	errStr=trim(errStr);
	document.getElementById('certErrorDiv').innerHTML="";
	if(errStr!=""){
		document.getElementById('certErrorDiv').innerHTML=errStr;
		return false;
	}
	return true;
}


goBackToRepair=function(){
	var trsId=document.getElementById("transId").value;
	//alert(trsId);
	document.inquireForm.action = "/spsvaultweb/repairQueue.view?trsId="+trsId;
	document.inquireForm.submit();
}

goBackToCancel=function(){
	var trsId=document.getElementById("transId").value;
	var trnType=document.getElementById("trnType").value;
	var startDt=document.getElementById("startDt").value;
	var endDt=document.getElementById("endDt").value;
	//alert(trsId);
	document.inquireForm.action = "/spsvaultweb/cancelTrans.view?type=cancel&action=trnLoadData&trsId="+trsId+"&trnType="+trnType+"&startDt="+startDt+"&endDt="+endDt;
	document.inquireForm.submit();
}

dwacMarAcptRejRequest=function(acptInd){
//alert("Hello");
	//var origAmount=document.getElementById("secAmount"+depositRId).innerHTML;
	if(!dwacValidate())return false;
	var ele=document.getElementById('dwacDepositsBody');
	comments=getActualValue("newComment");
	var status=getActualValue("status"+depositRId);
	var isOFACValid = true;
	 var newTransmission = null;
    var origTransmission = null;
	if (getActualValue("destination") == 'DRS') {
		origTransmission= document.getElementById("quantityTransmission").title;
		newTransmission= document.getElementById("quantityTransmission").value;
	}
	
	var newSuretyNumber = null;
    var origSuretyNumber = null;
	if (getActualValue("destination") == 'DRS') {
		origSuretyNumber= document.getElementById("suretyNumber").title;
		newSuretyNumber= document.getElementById("suretyNumber").value;
	}
	var oldForeignAddr = null;
	var oldAdd1 = addArrCache[0];
	var oldAdd2 = addArrCache[1];
	var oldAdd3 = addArrCache[2];
	var oldAdd4 = addArrCache[3];
	if (oldAdd1 != null || oldAdd2 != null || oldAdd3 != null || oldAdd4 != null) {
		oldForeignAddr = (oldAdd1 != null ? oldAdd1 : "") + "|";
		oldForeignAddr = oldForeignAddr + (oldAdd2 != null ? oldAdd2 : "") + "|";
		oldForeignAddr = oldForeignAddr + (oldAdd3 != null ? oldAdd3 : "") + "|";
		oldForeignAddr = oldForeignAddr + (oldAdd4 != null ? oldAdd4 : "");
	}
	var newForeignAddr = null;
	var add1 = getActualValue("foreignAddress1");
	var add2 = getActualValue("foreignAddress2");
	var add3 = getActualValue("foreignAddress3");
	var add4 = getActualValue("foreignAddress4");
	if (add1 != null || add2 != null || add3 != null || add4 != null) {
		newForeignAddr = (add1 != null ? add1 : "") + "|";
		newForeignAddr = newForeignAddr + (add2 != null ? add2 : "") + "|";
		newForeignAddr = newForeignAddr + (add3 != null ? add3 : "") + "|";
		newForeignAddr = newForeignAddr + (add4 != null ? add4 : "");
	}

	var origValues={action:null,spsId:spsId,status:status,dwacDrsDepMarAcptInd:null, quantity:ele.rows[0].cells[1].firstChild.title,secAmount:origAmount,transferAccount:ele.rows[0].cells[2].firstChild.title,ssnNumber:ele.rows[0].cells[3].firstChild.title,regName:ele.rows[0].cells[4].firstChild.title,inOutInd:ele.rows[0].cells[5].firstChild.title,comments:null,dwacDrsOfac:ele.rows[0].cells[6].firstChild.title,quantityTransmission:origTransmission,delvAddr:oldForeignAddr,suretyNumber:origSuretyNumber};
	var modValues;
	if(acptInd=='N') {
		if(comments==null || comments=="") {
			fireEvent(document.getElementById("tab7"),'click');
			alert("Please enter a 'Reject' reason in the Comments field");
			document.getElementById("newComment").focus();
			return false;
		} else { // discard the updated values except the comments 
			modValues={action:'U',spsId:spsId,status:status,dwacDrsDepMarAcptInd:acptInd, quantity:ele.rows[0].cells[1].firstChild.title,secAmount:origAmount,transferAccount:ele.rows[0].cells[2].firstChild.title,ssnNumber:ele.rows[0].cells[3].firstChild.title,regName:ele.rows[0].cells[4].firstChild.title,inOutInd:ele.rows[0].cells[5].firstChild.title,comments:comments,dwacDrsOfac:ele.rows[0].cells[6].firstChild.title,quantityTransmission:newTransmission,delvAddr:newForeignAddr,suretyNumber:newSuretyNumber};
			if (ele.rows[0].cells[6].firstChild.title == 'U') {
				isOFACValid = false;
			}
		}
	} else { //take the new values
		modValues={action:'U',spsId:ele.rows[0].cells[0].firstChild.value,status:status,dwacDrsDepMarAcptInd:acptInd, quantity:ele.rows[0].cells[1].firstChild.value,secAmount:getActualValue("amount"),transferAccount:ele.rows[0].cells[2].firstChild.value,ssnNumber:ele.rows[0].cells[3].firstChild.value,regName:ele.rows[0].cells[4].firstChild.value,inOutInd:ele.rows[0].cells[5].firstChild.value,comments:comments,dwacDrsOfac:ele.rows[0].cells[6].firstChild.value,quantityTransmission:newTransmission,delvAddr:newForeignAddr,suretyNumber:newSuretyNumber};
		if (ele.rows[0].cells[6].firstChild.value == 'U') {
			isOFACValid = false;
		}
	}
	modValues.quantity=modValues.quantity.replace(",","");
	modValues.secAmount=modValues.secAmount.replace(",","");
	origValues.quantity=origValues.quantity.replace(",","");
	origValues.secAmount=origValues.secAmount.replace(",","");
	
	for(oldProp in origValues){
		if(trim(modValues[oldProp])!=trim(origValues[oldProp])){
			//alert("Org value = "+origValues[oldProp]+" New value= "+modValues[oldProp]);
		}else{
			modValues[oldProp]=null;
		}
	}
	
	var tokId = document.getElementById("tokId").value;
	
	// loc move id value passing to DB
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;
	
	if(allowAltBranch=='Y' && getActualValue("altbranchtxt") != null && getActualValue("altbranchtxt") !='') {
	var altBrOldVal  = getActualValue("altBranchCdHid"+depositRId);
	var altBrNewVal = getActualValue("altbranchtxt");
	if(altBrNewVal!=null && altBrOldVal!=null && altBrNewVal!=altBrOldVal){
		origValues.altBranch=altBrOldVal;
		modValues.altBranch=altBrNewVal;
		}
	}
	if(allowAccountTypeInq=="Y" && document.getElementById("accountTypeCd").style.display!="none") {
	var accTypeCdOld = getActualValue("accTypeCdHid"+depositRId);
	var accTypeCdNew = getActualValue("accountTypeCd");
	if(accTypeCdNew!=null && accTypeCdOld!=null && accTypeCdNew!=accTypeCdOld){
		origValues.accTypeCd=accTypeCdOld;
		modValues.accTypeCd=accTypeCdNew;
	}
	}
	// Validation: For non-canadian users we should not allow the user to enter a deposit if the OFAC status is Undefined (i.e., U), 
	// allowed values are either N or Y. -- added this check acptInd=='Y' on 11052018 after talking to business accross all clients that
	// reject should be allowed even if ofac is not valid
	
	if (acptInd=='Y' && countryCode != "CA" && !isOFACValid) {
		alert("OFAC status is Undefined. Can not proceed further.");
		return false;
	}
	
	try {
		var uType = '';
		if ((isFAUsr!=null && isFAUsr=='true')) {
			    uType = 'FA';
			} else if ((isOpsUser!=null && isOpsUser=='true')) {
				uType = 'OPS';
			} else if ((branchUser!=null && branchUser=='true')) {
				uType = 'BR';
			}
		secCont.depositUpdate(origValues,modValues,null,null,null,null,null,tokId,uType, {async:false, callback:function(result){
			inquireCerts(true,false);hideDiv("goBack",true);
			resetSearch();
			var res=result.split("||"); 
			alert(res[0]);
			highLiteLastUpdatedRow();
		}}); 
	} catch(e) {
			alert("Error in saving...");
	} 
}





dwacAcptRejRequest=function(acptInd){
//alert("HI");
	//var origAmount=document.getElementById("secAmount"+depositRId).innerHTML;
	if(!dwacValidate())return false;
	var ele=document.getElementById('dwacDepositsBody');
	comments=getActualValue("newComment");
	var status=getActualValue("status"+depositRId);
	var isOFACValid = true;
	 var newTransmission = null;
    var origTransmission = null;
	if (getActualValue("destination") == 'DRS') {
		origTransmission= document.getElementById("quantityTransmission").title;
		newTransmission= document.getElementById("quantityTransmission").value;
	}
	var origSuretyNumber = null;
	var newSuretyNumber = null;
	if (getActualValue("destination") == 'DRS') {
		origSuretyNumber= document.getElementById("suretyNumber").title;
		newSuretyNumber= document.getElementById("suretyNumber").value;
	}
	var origDestination = getActualValue("destination");
	var oldForeignAddr = null;
	var oldAdd1 = addArrCache[0];
	var oldAdd2 = addArrCache[1];
	var oldAdd3 = addArrCache[2];
	var oldAdd4 = addArrCache[3];
	if (oldAdd1 != null || oldAdd2 != null || oldAdd3 != null || oldAdd4 != null) {
		oldForeignAddr = (oldAdd1 != null ? oldAdd1 : "") + "|";
		oldForeignAddr = oldForeignAddr + (oldAdd2 != null ? oldAdd2 : "") + "|";
		oldForeignAddr = oldForeignAddr + (oldAdd3 != null ? oldAdd3 : "") + "|";
		oldForeignAddr = oldForeignAddr + (oldAdd4 != null ? oldAdd4 : "");
	}

	var newForeignAddr = null;
	var add1 = getActualValue("foreignAddress1");
	var add2 = getActualValue("foreignAddress2");
	var add3 = getActualValue("foreignAddress3");
	var add4 = getActualValue("foreignAddress4");
	if (add1 != null || add2 != null || add3 != null || add4 != null) {
		newForeignAddr = (add1 != null ? add1 : "") + "|";
		newForeignAddr = newForeignAddr + (add2 != null ? add2 : "") + "|";
		newForeignAddr = newForeignAddr + (add3 != null ? add3 : "") + "|";
		newForeignAddr = newForeignAddr + (add4 != null ? add4 : "");
	}

	var origValues={action:null,spsId:spsId,status:status,dwacDrsDepAcptInd:null, quantity:ele.rows[0].cells[1].firstChild.title,secAmount:origAmount,transferAccount:ele.rows[0].cells[2].firstChild.title,ssnNumber:ele.rows[0].cells[3].firstChild.title,regName:ele.rows[0].cells[4].firstChild.title,inOutInd:ele.rows[0].cells[5].firstChild.title,comments:null,dwacDrsOfac:ele.rows[0].cells[6].firstChild.title,quantityTransmission:origTransmission,delvAddr:oldForeignAddr,suretyNumber:origSuretyNumber,dest:origDestination};
	var modValues;
	if(acptInd=='N') {
		if(comments==null || comments=="") {
			fireEvent(document.getElementById("tab7"),'click');
			alert("Please enter a 'Reject' reason in the Comments field");
			document.getElementById("newComment").focus();
			return false;
		} else { // discard the updated values except the comments 
			modValues={action:'U',spsId:spsId,status:status,dwacDrsDepAcptInd:acptInd, quantity:ele.rows[0].cells[1].firstChild.title,secAmount:origAmount,transferAccount:ele.rows[0].cells[2].firstChild.title,ssnNumber:ele.rows[0].cells[3].firstChild.title,regName:ele.rows[0].cells[4].firstChild.title,inOutInd:ele.rows[0].cells[5].firstChild.title,comments:comments,dwacDrsOfac:ele.rows[0].cells[6].firstChild.title,quantityTransmission:newTransmission,delvAddr:newForeignAddr,suretyNumber:newSuretyNumber};
			if (ele.rows[0].cells[6].firstChild.title == 'U') {
				isOFACValid = false;
			}
		}
	} else { //take the new values
		modValues={action:'U',spsId:ele.rows[0].cells[0].firstChild.value,status:status,dwacDrsDepAcptInd:acptInd, quantity:ele.rows[0].cells[1].firstChild.value,secAmount:getActualValue("amount"),transferAccount:ele.rows[0].cells[2].firstChild.value,ssnNumber:ele.rows[0].cells[3].firstChild.value,regName:ele.rows[0].cells[4].firstChild.value,inOutInd:ele.rows[0].cells[5].firstChild.value,comments:comments,dwacDrsOfac:ele.rows[0].cells[6].firstChild.value,quantityTransmission:newTransmission,delvAddr:newForeignAddr,suretyNumber:newSuretyNumber};
		if (ele.rows[0].cells[6].firstChild.value == 'U') {
				isOFACValid = false;
			}
	}
	modValues.quantity=modValues.quantity.replace(",","");
	modValues.secAmount=modValues.secAmount.replace(",","");
	origValues.quantity=origValues.quantity.replace(",","");
	origValues.secAmount=origValues.secAmount.replace(",","");
	
	for(oldProp in origValues){
		if(trim(modValues[oldProp])!=trim(origValues[oldProp])){
			//alert("Org value = "+origValues[oldProp]+" New value= "+modValues[oldProp]);
		}else{
			modValues[oldProp]=null;
		}
	}
	
	var tokId = document.getElementById("tokId").value;
	
	// loc move id value passing to DB
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;


if(allowAltBranch=='Y' && getActualValue("altbranchtxt") != null && getActualValue("altbranchtxt") !='') {
	var altBrOldVal =  getActualValue("altBranchCdHid"+depositRId);
	var altBrNewVal = getActualValue("altbranchtxt");
	if(altBrNewVal!=null && altBrOldVal!=null && altBrNewVal!=altBrOldVal){
		origValues.altBranch=altBrOldVal;
		modValues.altBranch=altBrNewVal;
		}
	}
	if(allowAccountTypeInq=="Y" && document.getElementById("accountTypeCd").style.display!="none") {
	var accTypeCdOld = getActualValue("accTypeCdHid"+depositRId);
	var accTypeCdNew = getActualValue("accountTypeCd");
	if(accTypeCdNew!=null && accTypeCdOld!=null && accTypeCdNew!=accTypeCdOld){
		origValues.accTypeCd=accTypeCdOld;
		modValues.accTypeCd=accTypeCdNew;
	}
	}
	
	// Validation: For non-canadian users we should not allow the user to enter a deposit if the OFAC status is Undefined (i.e., U), 
	// allowed values are either N or Y. -- added this check acptInd=='Y' on 11052018 after talking to business accross all clients that
	// reject should be allowed even if ofac is not valid
	if (acptInd=='Y' && countryCode != "CA" && !isOFACValid) {
		alert("OFAC status is Undefined. Can not proceed further.");
		return false;
	}

	try {
		var uType = '';
		if ((isFAUsr!=null && isFAUsr=='true')) {
			    uType = 'FA';
			} else if ((isOpsUser!=null && isOpsUser=='true')) {
				uType = 'OPS';
			} else if ((branchUser!=null && branchUser=='true')) {
				uType = 'BR';
			}
		secCont.depositUpdate(origValues,modValues,null,null,null,null,null,tokId,uType,{async:false, callback:function(result){
			inquireCerts(true,false);hideDiv("goBack",true);
			resetSearch();
			var res=result.split("||"); 
			alert(res[0]);
			highLiteLastUpdatedRow();
		}}); 
	} catch(e) {
			alert("Error in saving...");
	}  
	 
}


processSupervisorRequest=function(acptInd) {
	//alert("Acpt req = "+acptInd);
	var errorStr="";
	var tmp="";
	if(allowDTCEligCheckInquire=='Y'){
	tmp=trim(getActualValue("dtcEligInd"));
	//alert("chkDTCEligible4 -tmp   "+tmp +" chkBoxTypeCd= "+chkBoxTypeCd);
	if(tmp!=null && tmp!='Y'&& chkBoxTypeCd=="D")
	{
		errorStr=errorStr+"Security Is not DTC Eligible.Please select a different destination.<br>";
	}
	}
	if (chkChillDepIndBlk!=null && chkChillDepIndBlk=='Y' && chkBoxTypeCd=="D")
	{
		errorStr=errorStr+"Security is Chilled for DTC Deposits.Please select a different destination.<br>";
	}
	if(!showErrors(errorStr)){
		return false;
	}
	
	var origValues={action:null,spsId:spsId,event:null,status:getActualValue("status"+depositRId),dsrqAcptInd:null,dwacDsrqAcptInd:null,ofacAcptInd:null, mnshAcptInd:null, questAcptInd:null,nywAcptInd:null,subDimeAcptInd:null, comments:null};
	var modValues={action:'U',spsId:spsId,event:null, status:getActualValue("status"+depositRId),dsrqAcptInd:null,dwacDsrqAcptInd:null,ofacAcptInd:null, mnshAcptInd:null, questAcptInd:null,nywAcptInd:null,subDimeAcptInd:null, comments:getActualValue("newComment")};
	
	switch(actionSubType) {
			case "phyDsrq": 	if(acptInd=='Y')
									modValues.dsrqAcptInd='Y';
								else {
									modValues.dsrqAcptInd='N';
								}
								break;
			case "dwacDsrq": 	if(acptInd=='Y')
									modValues.dwacDsrqAcptInd='Y';
								else {
									modValues.dwacDsrqAcptInd='N';
								}
								break;
			case "mnsh": 		if(acptInd=='Y')
									modValues.mnshAcptInd='Y';
								else {
									modValues.mnshAcptInd='N';
								}
								break;
			case "ofac": 		if(acptInd=='Y')
									modValues.ofacAcptInd='Y';
								else {
									modValues.ofacAcptInd='N';
								}
								break;
			case "que": 		if(acptInd=='Y')
									modValues.questAcptInd='Y';
								else {
									modValues.questAcptInd='N';
								}
								break;
			case "subDime": 	if(acptInd=='Y')
									modValues.subDimeAcptInd='Y';
								else {
									modValues.subDimeAcptInd='N';
								}
								break;
			case "nyw": 		if(acptInd=='Y')
									modValues.nywAcptInd='Y';
								else {
									modValues.nywAcptInd='N';
								}
								break;
		}
	
	var tokId = document.getElementById("tokId").value;
	
	// loc move id value passing to DB
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;
	origValues.inquiareOfacScreen='inquiareOfacScreen';
	try {
		var uType = '';
		if ((isFAUsr!=null && isFAUsr=='true')) {
			    uType = 'FA';
			} else if ((isOpsUser!=null && isOpsUser=='true')) {
				uType = 'OPS';
			} else if ((branchUser!=null && branchUser=='true')) {
				uType = 'BR';
			}
		secCont.depositUpdate(origValues,modValues,null,null,null,null,null,tokId,uType, function(result){
			inquireCerts(true,false);hideDiv("goBack",true);
			resetSearch();
			var res=result.split("||"); 
			alert(res[0]); 
			highLiteLastUpdatedRow();
		}); 
	} catch(e) {
			alert("Error in saving...");
	}  
}




cleanupRequest=function() {
var isOFACValid = true;
var errorStr="";
var tmp="";
if(allowDTCEligCheckInquire=='Y'){
	tmp=trim(getActualValue("dtcEligInd"));
	//alert("chkDTCEligible5 -tmp   "+tmp +" chkBoxTypeCd= "+chkBoxTypeCd);
	if(tmp!=null && tmp!='Y'&& chkBoxTypeCd=="D")
	{
		errorStr=errorStr+"Security Is not DTC Eligible.Please select a different destination.<br>";
	}
	}
    if (chkChillDepIndBlk!=null && chkChillDepIndBlk=='Y' && chkBoxTypeCd=="D")
    {
	errorStr=errorStr+"Security is Chilled for DTC Deposits.Please select a different destination.<br>";
     }
    if (chillIndVsDTCDstnCheck='Y' && chkChillDepIndBlk!=null && chkChillDepIndBlk=='Y' && chkBoxTypeCd=="D") {
		errorStr=errorStr+"Invalid CUSIP, cannot be deposited to DTC - Please select different destination.<br>";
	}
	if(!showErrors(errorStr)){
		return false;
	}
	
var newDest=$('#destination').val();

	var origValues={action:null,spsId:spsId,status:getActualValue("status"+depositRId),comments:null,locMovId:locMovId};
	var modValues={action:'U',spsId:spsId,status:getActualValue("status"+depositRId),comments:getActualValue("newComment"),locMovId:locMovId};
	
	if (allowGiftInhInd == 'Y') {
				origValues.giftInhInd=getActualValue("giftInhIndHid"+depositRId);
				modValues.giftInhInd=getActualValue("giftInhInd"+depositRId);
    }
    
	var eventType=null;
	switch(actionSubType) {
		case "boxm":	eventType="BOXM_CLEANUP";
						// Allow destination change in the box cleanup screen only.
						if(newDest !=null && newDest != destOld) {
							origValues.dest = destOld;
							modValues.dest = newDest;
						}
						break;
		case "trs":		eventType="TRF_CLEANUP";
						break;
		case "nyw":		eventType="NYW_CLEANUP";
						break;
		case "dlv":		if(newDest !=null && newDest != destOld) {
							origValues.dest = destOld;
							modValues.dest = newDest;
							eventType="DLV_CLEANUP_BOXMV";
						} else {
							eventType="DLV_CLEANUP";
						}
						break;
	}
	
	var newCertArr=null;
	var oldCertArr=null;
	
	// for transfer cleanup send the cert details if changed.
	if (actionSubType=='trs') {
		if(!certValidateForTransferCleanup()){
				return false;
		}
		newCertArr=new Array();
		oldCertArr=new Array();
		var ele=document.getElementById('certBody'); 
		for(var i=0;i<ele.rows.length;i++){		
			oldCertArr[i]={action:null,certPrefix:document.getElementById("certPrefix"+i).title, certNbr:document.getElementById("certNbr"+i).title, regName:trim(unescapeHTML(document.getElementById("certRegName"+i).title)), quantity:document.getElementById("certQty"+i).title, marketValue:document.getElementById("certMarketValue"+i).title, issueDate:document.getElementById("certIssueDate"+i).title, ofac:document.getElementById("certOfac"+i).title, sic:document.getElementById("certSic"+i).title, status:statusVal ,locMovId:locMovId};
			newCertArr[i]={action:'U',certPrefix:document.getElementById("certPrefix"+i).value, certNbr:document.getElementById("certNbr"+i).value, regName:trim(unescapeHTML(document.getElementById("certRegName"+i).value)), quantity:document.getElementById("certQty"+i).value, marketValue:document.getElementById("certMarketValue"+i).value, issueDate:document.getElementById("certIssueDate"+i).value, ofac:document.getElementById("certOfac"+i).value, sic:document.getElementById("certSic"+i).value, status:statusVal,locMovId:locMovId };
			/*if (allowGiftInhInd == 'Y') {
				oldCertArr[i].giftInhInd=document.getElementById("giftInhInd"+i).title;
				newCertArr[i].giftInhInd=document.getElementById("giftInhInd"+i).value;
			}*/
			if (document.getElementById("certOfac"+i).value == 'U') {
				isOFACValid = false;
			}
		}

		// Validation: For non-canadian users we should not allow the user to enter a deposit if the OFAC status is Undefined (i.e., U), 
		// allowed values are either N or Y.
		if (countryCode != "CA" && !isOFACValid) {
			alert("OFAC status is Undefined. Can not proceed further.");
			return false;
		}

		for(var i=0;i<oldCertArr.length;i++){
			var oldObj=oldCertArr[i];
			var newObj=newCertArr[i];
			for(oldProp in oldObj){
				if(newObj[oldProp]!=oldObj[oldProp]){
				}else{
					newObj[oldProp]=null;
				}
			}
		}
	}
	
	var tokId = document.getElementById("tokId").value;
	
	// loc move id value passing to DB
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;
	
	try {
		var uType = '';
		if ((isFAUsr!=null && isFAUsr=='true')) {
			    uType = 'FA';
			} else if ((isOpsUser!=null && isOpsUser=='true')) {
				uType = 'OPS';
			} else if ((branchUser!=null && branchUser=='true')) {
				uType = 'BR';
			}
		secCont.depositUpdate(origValues,modValues,oldCertArr,newCertArr,null,null,eventType,tokId,uType, function(result){
			inquireCerts(true,false);hideDiv("goBack",true);
			resetSearch();
			var res=result.split("||"); 
			alert(res[0]) 
			highLiteLastUpdatedRow();
		}); 
	} catch(e) {
			alert("Error in saving...");
	}  
} 

certValidateForTransferCleanup=function(){
	var errorStr="";
	var lineErrorPrefix="On Cert",emptyFiledErrPrefix=" please enter ",emptyFiledErr="";
	var linrError="";
	var tmp="";
	if(allowDTCEligCheckInquire=='Y'){
	tmp=trim(getActualValue("dtcEligInd"));
	//alert("chkDTCEligible6 -tmp   "+tmp +" chkBoxTypeCd= "+chkBoxTypeCd);
	if(tmp!=null && tmp!='Y'&& chkBoxTypeCd=="D")
	{
		errorStr=errorStr+"Security Is not DTC Eligible.Please select a different destination.<br>";
	}
	}
	 if (chkChillDepIndBlk!=null && chkChillDepIndBlk=='Y' && chkBoxTypeCd=="D")
	    {
		errorStr=errorStr+"Security is Chilled for DTC Deposits.Please select a different destination.<br>";
	     }
	var cBody=document.getElementById('certBody');
	for(var i=0;i<cBody.rows.length;i++){
		emptyFiledErr="";linrError="";
		tmp=document.getElementById("certNbr"+i).value;
		tmp=trim(tmp);
		if(tmp!="" && tmp!='TBD'){
			linrError=linrError+ValidateAlpha(document.getElementById("certNbr"+i).value,"Cerificate Number",12,false);
		}else{
			emptyFiledErr=emptyFiledErr+"Cerificate Number ; ";
		}	


		tmp=document.getElementById("certIssueDate"+i).value;
		tmp=trim(tmp);
		//alert("Date -"+tmp);
		if(tmp!=""){
			var dateErr=validateDate(document.getElementById("certIssueDate"+i),"Issue Date");
			if(dateErr==""){  //if the issue date is valid, then make sure that it's not later than today.
				//alert("dateErr -"+dateErr);
				//dateStr=(today.getMonth()+1)+"/"+today.getDate()+"/"+today.getFullYear();
				var today_date= new Date().getTime();    
				var issue_date= new Date(tmp).getTime(); 
				//alert(today_date + " "+issue_date);
				if (issue_date > today_date) {
					dateErr="Issue Date less than or equals to today's date";
				}
			}
			linrError=linrError+dateErr;
		}else{
			emptyFiledErr=emptyFiledErr+" Issue Date; ";
		}
		
		linrError=trim(linrError);
		if(linrError!=""||emptyFiledErr!=""){
			errorStr=errorStr+lineErrorPrefix+" "+(i+1)+" "+emptyFiledErrPrefix+emptyFiledErr+linrError;
		}
	}
	
	if(errorStr!=""){
		alert(errorStr);
		return false;
	}
	return true;
}

cancelDeposit=function(){
	beforedisablecancel();
	
	if(checkCreateDateIsToday()==false && userType=='ib')
	{
	
	document.getElementById('cancelDepositButton').disabled=true;
	alert("Next day cancel must be done by operations");
	return false;
	}
	
	var origValues={action:null,spsId:spsId};
	var modValues={action:'U',spsId:spsId};
	
	var tokId = document.getElementById("tokId").value;
	
	// loc move id value passing to DB
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;
	var uType = '';
	if ((isFAUsr!=null && isFAUsr=='true')) {
		    uType = 'FA';
		} else if ((isOpsUser!=null && isOpsUser=='true')) {
			uType = 'OPS';
		} else if ((branchUser!=null && branchUser=='true')) {
			uType = 'BR';
		}
	secCont.depositUpdate(origValues,modValues,null,null,null,null,"CANCEL_DEPOSIT",tokId,uType, function(result){	
		var res=result.split("||"); 
		inquireCerts(true,false);hideDiv("goBack",true);
		resetSearch();
		alert(res[0]);
	    highLiteLastUpdatedRow();
	});
	
	afterdisablecancel();
}

function beforedisablecancel()
{
	$("#cancelDepositButton").attr('disabled',true);
}

function afterdisablecancel()
{
	$("#cancelDepositButton").attr('disabled',false);
}

cancelDwacDeposit=function(){
	comments=getActualValue("newComment");
	dest=getActualValue("destination")
	if(comments==null || comments=="") {
		fireEvent(document.getElementById("tab7"),'click');
		alert("Please enter a 'Cancel' reason in the Comments field");
		document.getElementById("newComment").focus();
		return false;
	}
	var origValues={action:null,spsId:spsId,comments:null};
	var modValues={action:'U',spsId:spsId,comments:comments};
	
	var tokId = document.getElementById("tokId").value;
	
	// loc move id value passing to DB
	origValues.locMovId=locMovId;
	modValues.locMovId=locMovId;
	var uType = '';
	if ((isFAUsr!=null && isFAUsr=='true')) {
		    uType = 'FA';
		} else if ((isOpsUser!=null && isOpsUser=='true')) {
			uType = 'OPS';
		} else if ((branchUser!=null && branchUser=='true')) {
			uType = 'BR';
		}
	secCont.depositUpdate(origValues,modValues,null,null,null,null,"DWAC_DRS_DEP_CANCEL",tokId,uType, function(result){	
		var res=result.split("||"); 
		inquireCerts(true,false);hideDiv("goBack",true);
		resetSearch();
		alert(res[0]);
	    highLiteLastUpdatedRow();
	}); 
	
	afterdisablecancel();
}

cancelSecDeposit = function(){
alert("Account Blocked, Cannot Process");
return false;
}
setuserClassType=function(){
	if(userType=='ib' || userType=='cbibinq'){
		ibClassName='cHidden';
	}else{
		ibClassName='cVisible';
	}
}


getTitle=function(eleName){
	return document.getElementById(""+eleName).title;

}

function toUpper(t){
	var v=t.value;
	t.value=v.toUpperCase();
}

function trim(inputString) {
   	return inputString.replace(/^\s+|\s+$/g,"");
}

hideDiv=function(divId,dispNdisp){
if(document.getElementById(divId)!=null){
	if(dispNdisp){
		document.getElementById(divId).style.display="none";
			document.getElementById(divId).style.visibility="hidden";
		//document.getElementById(divId).style.width="0";
	}else{
		document.getElementById(divId).style.display="block";
		document.getElementById(divId).style.visibility="visible";
	}
	}
}

function ofacCheckBySecurity(secNum,cusip,rowNo,account){
	var origSecval=getActualValue("secNbr"+depositRId);
	var modSecVal=bwADPNum;
	var orgAccval=getActualValue("account"+depositRId);
	var modAccVal=accounStr();
	var str_array=[];
	 if(allowOfacCheckBySec!="" && allowOfacCheckBySec=='Y' && (origSecval!=modSecVal || orgAccval!=modAccVal))
		 {
		 var ofactypevalue="";
	 secCont.ofacCheckBySec(secNum,cusip,rowNo,account,function(data){
			 str_array = data.split(',');
		 if(data==null)
			 {
			 document.getElementById("certOfac"+rowNo).value="U";
			 }
		 else
			 {
				document.getElementById("certOfac"+rowNo).value=str_array[0];

			 }
			var ofachitindvalue=document.getElementById("ofachitind").value;

			if(ofachitindvalue!=null )
				{
				document.getElementById("ofachittype").value=str_array[1];
				}
			
	
		});  
	 
	
		 }
		document.getElementById('rowidofac').value=rowNo;
		
		
		
	}


function callPrintReceiptData(){
    var branchcd = getActualValue("branch");
    var accountcd= accounStr();
    var my_window = "printReceiptWin";
	url = "/spsvaultweb/printReceipt.view?spsId="+spsId+"&type="+boxType+"&branchcd="+branchcd+"&accountcd="+accountcd+"&cusip="+bwCUSIP+"&locMovId="+locMovId ;
 	my_window = window.open (encodeURI(url), my_window, "resizable=yes,scrollbars=yes,width=900,height=500");	
}

function callPrintDeliveryCoverLetter() {
	var my_window = "dlvCoverWin";
	url = "/spsvaultweb/coverLetter.view?action=loadDlvCoverLetterData&spsId="+spsId;
 	my_window = window.open (encodeURI(url), my_window, "resizable=yes,scrollbars=yes,width=900,height=500");	
}

function callPrintDtcCoverLetter() {
	var my_window = "dtcCoverWin";
	url = "/spsvaultweb/coverLetter.view?action=loadDtcCoverLetterData&spsId="+spsId;
 	my_window = window.open (encodeURI(url), my_window, "resizable=yes,scrollbars=yes,width=900,height=500");	
}

function callPrintLockupAdvice(){
    var branchcd = getActualValue("branch");
    var accountcd= accounStr();
    var my_window = "printLockUpAdvWin";
	url = "/spsvaultweb/printReceipt.view?spsId="+spsId+"&type="+boxType+"&branchcd="+branchcd+"&accountcd="+accountcd+"&cusip="+bwCUSIP+"&lockUpAdvice=Y"+"&locMovId="+locMovId ;
 	my_window = window.open (encodeURI(url), my_window, "resizable=yes,scrollbars=yes,width=900,height=500");	
}


function que(){
	if (actionType=="repair") {
		populateStatus("ALL");
		$('#statusCodes').attr('disabled',true);
	} 
}

resetSearch=function(){

	if (boxLocDescNotFound) {
		boxLocDescNotFound = false;
		populateBox();
	}

    document.getElementById("branch").readOnly=false;
	document.getElementById("account").readOnly=false;		
	document.getElementById("secText").readOnly=false;
	document.getElementById("accountTypeCd").value="";
	document.getElementById("altbranchtxt").value="";
	document.getElementById("bondDecText").value="";
	document.getElementById("recordDtText").innerHTML="";
	document.getElementById("reorgText").innerHTML="";
	document.getElementById("dtcEligText").innerHTML="";
	document.getElementById("currencyCode").disabled=false;
	
	$('#certBody').attr('disabled',false);
	$('#docInfoDiv').attr('disabled',false);
	$('#negotiableInd').attr('disabled',false);
	$('#bearerInd').attr('disabled',false);
	$('#deliverToBranch').attr('disabled',false);
	$('#pouchId').attr('disabled',false);
	$('#vpsId').attr('disabled',false);
	$('#statusCodes').attr('disabled',false);
	$('#quantOp').attr('disabled',false);
	$('#quantity').attr('disabled',false);
	$('#amtOp').attr('disabled',false);
	$('#amount').attr('disabled',false);
	$('#daysAgedOp').attr('disabled',false);
	$('#daysAged').attr('disabled',false);
	$('#cdate').attr('disabled',false);
	$('#branch').attr('disabled',false);
	$('#account').attr('disabled',false);
	$('#accountTypeCd').attr('disabled',false);
	$('#secType').attr('disabled',false);
	$('#secText').attr('disabled',false);
	$('#currencyCode').attr('disabled',false);
	$('#rstrIndChkBox').attr('disabled',false);
	$('#newComment').attr('disabled',false);
	$('#trailerDesc').attr('disabled',false);
	$('#foreignAddressTd').attr('disabled',false);
	
  
	if(isBoxmEligOnHold) {
		boxType=null;
		populateBox();
	}
	userType='op';  //Reset the userType back to the original value.
	dwr.util.setValue("branch",inqObj.branch);
	setAccounStr(inqObj.account);
	dwr.util.setValue("accDesc",inqObj.accDesc);
	document.getElementById("accFrzDesc").className="cHidden";
	document.getElementById("accFrzDesc").innerHTML="";
	dwr.util.setValue("secText",inqObj.security);
	dwr.util.setValue("secType",inqObj.secType);
	dwr.util.setValue("secDecText",inqObj.secDesc);
	dwr.util.setValue("price",inqObj.secPrice);
	document.getElementById("rstrIndDiv").className="cHidden";
	document.getElementById("bondRegTypeDiv").className="cHidden"; // change as per the search criteria?
	document.getElementById("negoIndDiv").className="cHidden";
	document.getElementById("bearerIndDiv").className="cHidden";
	dwr.util.setValue("currencyCode","");
	document.getElementById("suspIndDiv").className="cHidden";

	dwr.util.setValue("destination",inqObj.dest);
	dwr.util.setValue("quantity",inqObj.quantity);
	dwr.util.setValue("amount",inqObj.amount);
	dwr.util.setValue("cdate",inqObj.creationDate);
	document.getElementById('destination').disabled=false;
	document.getElementById('statusCodes').disabled=false;
	dwr.util.setValue("statusCodes",inqObj.status);
	document.getElementById("quantOp").disabled=false;
	document.getElementById("amtOp").disabled=false;
	document.getElementById("cdate").disabled=false;
	dwr.util.setValue("dtcEligInd",inqObj.dtcEligInd);
	dwr.util.setValue("dtcEligText",inqObj.dtcEligText);
	dwr.util.setValue("reorgText",inqObj.reorgText);
	document.getElementById("guiMsgLabel").innerHTML="";
	
	$('#cdate').datepicker('enable'); 
	hideDiv("cdateTd",false);
	if (actionType=='repair') { 
		hideDiv("inquireBut",true);
	} else {
		hideDiv("inquireBut",false);
	}
	isUpdateAllowed=false;
	isDSRQdone=false;
	isDSRQChecked=false;
	isSubDimedone=false;
	dwr.util.removeAllRows("dsrqEligQuesBody");
	hideDiv("goBack",true);
	hideDiv("depositfs",false);
	hideDiv("certfs",true);
	hideDiv("updButDiv",true);
	
	/* when questnnaire incomplete and tabs are disabled... reset these tabs back*/
	if(document.getElementById('tab1').disabled==true) {
		document.getElementById('tab1').disabled=false;
		document.getElementById('tab3').disabled=false;
		document.getElementById('tab4').disabled=false;
		document.getElementById('tab5').disabled=false;
		document.getElementById('tab6').disabled=false;
		document.getElementById('tab7').disabled=false;
		document.getElementById('tab9').disabled=false;
	}

	//show sort symbols
	if (totalRecords > pageSize) {
		hideshowSortSymbols(true);
	}
	selectedDepositRId = null;
}

function fireEvent(obj,evt){
	
	var fireOnThis = obj;
	if( document.createEvent ) {
	  var evObj = document.createEvent('MouseEvents');
	  evObj.initEvent( evt, true, false );
	  fireOnThis.dispatchEvent(evObj);
	} else if( document.createEventObject ) {
	  fireOnThis.fireEvent('on'+evt);
	}
}

function printTable(){
	var DocumentContainer = document.getElementById('depositDiv');
	var WindowObject = window.open('', null,"width=740,height=325,top=200,left=250,toolbars=no,scrollbars=yes,status=no,resizable=yes");
	var strHtml = "<html>\n<head>\n<link rel=\"stylesheet\" type=\"text/css\"  href=\"/spsvaultweb/include/css/blue/jquery-ui-1.8.2.custom.css\"> \n</head><body><div>\n" + DocumentContainer.innerHTML + "\n</div>\n</body>\n</html>";
	WindowObject.document.writeln(strHtml);
	WindowObject.document.close(); 
	WindowObject.focus();
	WindowObject.print();
	WindowObject.close();
}

function exportTable(){
	
	/* var branchSel=getActualValue("branchSelect");
	var spsId=trim(document.getElementById("spsId").value);
	var my_window = "inquireRequestsWin";
	url = "missingDocuments.view?action=missDocLoadData&display=excel&branchSelect="+branchSel+"&spsId="+spsId;
 	my_window = window.open (encodeURI(url), my_window, "resizable=yes,scrollbars=yes,width=1000,height=500");	*/
 }

setBoxType=function(){
	if(actionSubType=='dwacDrs' || actionSubType=='dwacDsrq'){
		boxType="DWAC_DRS";
	} else {
		boxType=null;
	}
}

// Need to be before jsp:include
setBoxType();
////////////////
//navigation functions
function navFirst()
{
if (pgNbr==null|| isNaN(pgNbr)||pgNbr==1 )
   {
      alert("In First Page");
      return false;
   }else
   {
    pgNbr=1;
   inquireCerts(false,true);
  }
}
function navPrev()
{
  if (pgNbr==null|| isNaN(pgNbr)||pgNbr==1 )
   {
      alert("No More Previous Pages");
      return false;
   }else
   {
     pgNbr=pgNbr-1;
     inquireCerts(false,true);
   }

}
function navNext()
{   var pagesCount =  Math.floor(totalRecords / pageSize) + ((totalRecords % pageSize > 0) ? 1 : 0);
  if (pgNbr==null||isNaN(pgNbr)||pgNbr>pagesCount-1 )
   {
      alert("No Next Page");
      return false;
   }else
   {
     pgNbr=parseInt(pgNbr)+1;
     inquireCerts(false,true);
   }
}
function navLast()
{

   var pagesCount =  Math.floor(totalRecords / pageSize) + ((totalRecords % pageSize > 0) ? 1 : 0);
 if (pgNbr==null||isNaN(pgNbr)||pgNbr>pagesCount-1 )
   {
      alert("no more  pages");
      return false;
   }else
   {
     pgNbr=pagesCount;
     inquireCerts(false,true);
   }

}
function navigation()
{
if (pgNbr==null || isNaN(pgNbr))
{
pgNbr=1;
startRow=1;
endRow=pageSize;
//alert("1");
}
else
{
     if (pgNbr==1)
      {
      startRow=1;
      endRow=pageSize
       }else{
       startRow=((pgNbr-1)*pageSize)+1;
       endRow=(pgNbr*pageSize);
         }
}

}
function displayForPage()
{
var pageNbr=document.getElementById("pageSelect").value;
//do validation for page number
var pagesCount =  Math.floor(totalRecords / pageSize) + ((totalRecords % pageSize > 0) ? 1 : 0);
 if (pageNbr==null||isNaN(pgNbr)||pageNbr>pagesCount ||pageNbr<1)
 { 
   alert("invalid page selection");
      return false;
 
 }
 else{
    pgNbr=pageNbr;
    inquireCerts(false,true);
  }
}

////
//navdisplay
function navDisplay(pageNbrCalled)
{

var totalpages = Math.floor(totalRecords / pageSize) + ((totalRecords % pageSize > 0) ? 1 : 0);

 if (totalpages==null ||isNaN(totalpages) || totalpages<=1)
 {
 hideDiv("navigationDiv",true);
 }else{
 hideDiv("navigationDiv",false);
 }
document.getElementById("selectedPageValue").value=pageNbrCalled;
document.getElementById("totalPageValue").value=totalpages;

}
function  bearerChange()
{
//checking the client visablity of bearer ind
if (allowBearerInd=='Y')
{
//
var ele=document.getElementById("certBody");
var e=document.getElementById("bearerInd");
var tmpValue=e.options[e.selectedIndex].value;

for(var i=ele.rows.length-1;i>=0;i--){
           
          //  var certRegName=document.getElementById("regName"+i).value;
		
			if (tmpValue=='Y')
			{document.getElementById("certRegName"+i).value='';
			document.getElementById("certRegName"+i).disabled=true;
			document.getElementById("certOfac"+i).value='N';
			}
			if (tmpValue=='N')
			{
			document.getElementById("certRegName"+i).disabled=false;
			
			}
		}

}
}

function changeSort(sortType) {
	hideshowSortSymbols(false);
	if (sortType.indexOf('Ascending') != -1) {
		sortOrder = 'ASC';
	} else {
		sortOrder = 'DESC';
	}

	if (sortType.indexOf('Branch') != -1) {
		sortColumn = 'BRANCH';
	} else if (sortType.indexOf('Account') != -1) {
		sortColumn = 'ACCOUNT';
	} else if (sortType.indexOf('Destination') != -1) {
		sortColumn = 'DESTINATION';
	} else if (sortType.indexOf('Status') != -1) {
		sortColumn = 'STATUS';
	} else if (sortType.indexOf('DaysAged') != -1) {
		sortColumn = 'AGED_DAYS';
	} else if (sortType.indexOf('CreateDate') != -1) {
		sortColumn = 'CREATE_DT';
	}
	inquireCertsSubmit();
}

daysAgedOpChange=function() {
	document.getElementById("daysAged").focus();
}


function disableButtons()
{
	var entitled= document.getElementById('entitled').value;	
	var approveEntitled=document.getElementById('isapproveEntitled').value;
	var updateEntitled=document.getElementById('isupdateEntitled').value;
	if(actionSubType =='dwacDrs') {
		if((updateEntitled=="true" && approveEntitled=="true") || (Apprrjt=="true" && MarginUpd=="true") || approveEntitled=="true" )
		{
		document.getElementById("acptMultBut1").disabled=false;
		document.getElementById("acptMultBut").disabled=false;
		}
		else
			{
			document.getElementById("acptMultBut1").disabled="disabled";
			document.getElementById("acptMultBut").disabled="disabled";

			}
	
		
}
}



function hideshowSortSymbols(showOrHide) {
	if (showOrHide) {
		$('#AscendingBranch').show();
		$('#DescendingBranch').show();
		$('#AscendingBranch1').show();
		$('#DescendingBranch1').show();
		$('#AscendingBranch2').show();
		$('#DescendingBranch2').show();
		$('#AscendingBranch3').show();
		$('#DescendingBranch3').show();
		$('#AscendingDestination').show();
		$('#DescendingDestination').show();
		$('#AscendingAccount').show();
		$('#DescendingAccount').show();
		$('#AscendingAccount1').show();
		$('#DescendingAccount1').show();
		$('#AscendingAccount2').show();
		$('#DescendingAccount2').show();
		$('#AscendingAccount3').show();
		$('#DescendingAccount3').show();
		$('#AscendingStatus').show();
		$('#DescendingStatus').show();
		$('#AscendingDaysAged').show();
		$('#DescendingDaysAged').show();
		$('#AscendingCreateDate').show();
		$('#DescendingCreateDate').show();
	} else {
		$('#AscendingBranch').hide();
		$('#DescendingBranch').hide();
		$('#AscendingBranch1').hide();
		$('#DescendingBranch1').hide();
		$('#AscendingBranch2').hide();
		$('#DescendingBranch2').hide();
		$('#AscendingBranch3').hide();
		$('#DescendingBranch3').hide();	
		$('#AscendingDestination').hide();
		$('#DescendingDestination').hide();
		$('#AscendingAccount').hide();
		$('#DescendingAccount').hide();
		$('#AscendingAccount1').hide();
		$('#DescendingAccount1').hide();
		$('#AscendingAccount2').hide();
		$('#DescendingAccount2').hide();
		$('#AscendingAccount3').hide();
		$('#DescendingAccount3').hide();
		$('#AscendingStatus').hide();
		$('#DescendingStatus').hide();
		$('#AscendingDaysAged').hide();
		$('#DescendingDaysAged').hide();
		$('#AscendingCreateDate').hide();
		$('#DescendingCreateDate').hide();
	}
}

function disableenablecert(value) {
	var ele=document.getElementById("certBody");
	for(var i=0;i<ele.rows.length;i++){
			document.getElementById("certPrefix"+i).disabled=value;
			document.getElementById("certNbr"+i).disabled=value;
			document.getElementById("certRegName"+i).disabled=value;
			document.getElementById("certQty"+i).disabled=value;
			document.getElementById("certIssueDate"+i).disabled=value;
			document.getElementById("certSic"+i).disabled=value;
			if (document.getElementById("totUserQuantity") != null) {
				document.getElementById("totUserQuantity").disabled=value;
			}
			if (document.getElementById('updButton') != null){
				document.getElementById('updButton').disabled=value;
			}
			if (document.getElementById('ibUpdButton') != null){
				document.getElementById('ibUpdButton').disabled=value;
			}
	}
}

function exportCSV(){	
	document.inquireForm.action = "/spsvaultweb/mySecurity.view?excel=true";
	document.inquireForm.submit();
}


//// function Check  rstrIndChkBox
rstrIndCheck=function()
{
	var chkRstr=(document.getElementById("rstrIndChkBox").checked)?'R':'N';
	var inputSecText = document.getElementById('secText').value;
	if (chkRstr == "R" && inputSecText!= null && trim(inputSecText) != "") {
		if (  trim(rstrSecurityNbrValue)!=null && trim(rstrSecurityNbrValue)!=''){
			var newRstrInd = (document.getElementById("rstrIndChkBox").checked)?'R':'N';
			if (restrictedSecIndOnInquire=="Y" && newRstrInd=='R') 
			{
		   		var conf=window.confirm("You have a Restricted Security number do you want to use it?");
			   	if (conf)
	   			{
	   				restrictedSecIndOnInquire="Y";
	   				document.getElementById("rstrIndChkBox").checked=true;
	   				bwADPNum=trim(rstrSecurityNbrValue);
	   			}
	   			else{
	   				bwADPNum=brdSecurityNbrValue;
	   			}
			}else
			{
				bwADPNum=trim(brdSecurityNbrValue);
			}
		} else {
			alert("Restricted Security Number Not Found on MSD, Please contact MSD dept.");
			document.getElementById("secDecText").className="cErrors";
			document.getElementById('secText').focus();
			hideDiv("certfs",true);
			disableenablecert(true);
			hideDiv("updButDiv",true);
			hideDiv("inquireBut",false);
			hideDiv("goBack",true);
		}
	}else{
		bwADPNum=trim(brdSecurityNbrValue);
	}
}

// This cibc updaet script is only specifically used for cibc screens only
// this function is for checking cibc update or cibc receive

function cibcUpdate(elementName)
{
	cibcActionElement = elementName;
	ibUpdate();

}

function chillVsDTCDstnCheck() {
    if (chkChillDepIndBlk!=null && chkChillDepIndBlk=='Y' && chkBoxTypeCd=="D") {
		alert("Invalid CUSIP, cannot be deposited to DTC - Please select different destination.");
	}
}

function dwacValidate(){
	document.getElementById('certErrorDiv').innerHTML="";
	errorString="";
	var qtyVal;
	var br=document.getElementById("branch").value;
    var acc=document.getElementById("account").value;
	//checkAcctFreeze(br,acc);
	
	if(checkAcctFreeze(br,acc)){
		errorString=errorString+"Account is Frozen <br>";
		}
	
	var tmpVal=document.getElementById('destination').selectedIndex;
	if(tmpVal==1 && document.getElementById("quantityTransmission").value=="S")
	{
		tmpVal=getActualValue("quantity");
		tmpVal=trim(tmpVal);
		if(tmpVal<=0){errorString=errorString+"please enter valid quantity.<br>";}
	}
	else if(tmpVal==2)
		{
		tmpVal=getActualValue("quantity");
		tmpVal=trim(tmpVal);
		if(tmpVal==''){errorString=errorString+"please enter valid quantity.<br>";}
		}
	
	qtyVal=getActualValue("quantity");
	
	if (trim(qtyVal).length > 9) {
		errorString=errorString+"Invalid quantity entered, please enter quantity to not exceed 9 digits.<br>";
	}
	
	var suretyNum= $("#suretyNumber").val();
	var desObj = $("#destination").val();
	if(desObj=="DRS" && (suretyNum=="" || suretyNum==null))
	{
		errorString=errorString+"Required field missing.  Surety Number is required for  a DRS transaction.<br>";
	}
	
	//account type Indicator mandating
	if (allowAccountTypeInq=='Y' && accountTypeDisplay)	
	{
		tmp=trim(getActualValue("accountTypeCd"));
	  	if(tmp==""){
			errorString=errorString+"Please enter Account Type Cd<br>";
	   	}
	}
		
	//alert("allowAltBranch:"+allowAltBranch+" altBranchRqd:"+ altBranchRqd+"userType: "+userType);
	if (allowAltBranch=="Y") {
		if (document.getElementById("altbranchtxt") != null) {
			var altBranch=(document.getElementById("altbranchtxt").value == null ? '':document.getElementById("altbranchtxt").value);
			if (trim(altBranch).length != 5) {
				errorString=errorString+"Alternate Branch is Invalid. This should contain 5 characters.<br>";
			}
		}
	}	
	
	if(!showErrors(errorString)){return false;};
	return true;
}

function dwacDtcAcptRequest() {
    if (getActualValue("destination") != 'DWAC') {
        alert("DTC Accept applicable to DWAC only");
        return;
    }
	var status=getActualValue("status"+depositRId);
    if (status != 'TRANSIT'  && status != 'PENDING') {
        alert("DWAC status is not TRANSIT/PENDING");
        return;
    }
    dwacAcptRejRequest('DA');
}

 function setBrFaUserInqLabels() {
    if (isBrFaUser()) {
        document.getElementById("DestHdrLabel").innerHTML="Hold Location";
    }
 }
////////////////
</script>
</head>
<body id="inquireBody" name="inquireBody">




<div align="center">

</div>

<form name="inquireForm" id="inquireForm" method="POST">
<input type="hidden" name="uType" id="uType" value='op' />
<input type="hidden" id="spsIdFromNew" name="spsIdFromNew" value=''  />
<input type="hidden" id="transId" name="transId" value=''  />
<input type="hidden" id="trnType" name="trnType" value=''  />
<input type="hidden" id="startDt" name="startDt" value=''  />
<input type="hidden" id="endDt" name="endDt" value=''  />
<input type="hidden" id="frozenDescVal" name="frozenDescVal" value="" />
 <center>
 <table width="100%" border="0"  cellspacing="1" cellpadding="1"> 
 	<tr>
 	<td width='85%' align="center"><label class="cErrorMsg"  id="guiMsgLabel" name="guiMsgLabel" ></label></td>
 	<td width='15%' align="center"><label class="cHidden"  id="inProgMsg" name="inProgMsg">Please wait .....</label></td>
 	</tr>
 </table>
 
 <fieldset>
   <legend>
  		<input type="button" class="ui-button" id="goBack" name="goBack" value="GoBack" onClick="resetSearch();"/>
 	</legend>
 	
 <table width="100%">
	<tr>
		<td style="vertical-align:top" >
			<script src="spsJs/vpScripts.js"  type="text/javaScript" ></script>

<script type="text/javascript" language="javascript">
var branchExistance=false;
var priceExistance=false;
var bwADPNum="";
var bwCUSIP="";
var bwSymbol="";
var acctFrzInd="";
var bwCurrencyCd="";
var tmpSecurityAdp="";
var tmpRstrSecurity="";
var rrCode="000";
var altBranchVal="";
var iraAcctInd="";
var validateUser="";
var allowAltBranch="";
var branchSecObj={branch:null,security:null,price:null};
var isPreviousBranch250=false;

function populateBranches(){
	if(branchAsTextInput=='Y' || (typeof allowDwacDrsBranchText!='undefined' && allowDwacDrsBranchText=='Y')){   
         var value= $('#branch').val();
         $('#branch').attr('id', 'branchtemp');
         var stringElement="<input type=text name=branch id=branch onkeyup=moveOnMax(this,'account'); onchange=toUpper(this);branchCheck(); size=3 maxlength=3/>";
         $(stringElement).insertAfter('#branchtemp');
         $('#branchtemp').remove();
        $('#250Acc').hide();
         $('#branch').focus(); 
       } else {
    	      secCont.retrieveBrs(function(result){
                     dwr.util.addOptions("branch",result);
                     checkBranch250();
                     if (userType != null && trim(userType) == 'cbibinq') {
                           populateBoxesForBranches(result);
                     }
              });
       }
}
function isAlphaNumeric (inputStr) {
	 var alphNumRegEx = /^[0-9a-zA-Z]+$/;
	 var res = inputStr.match(alphNumRegEx);
	   if(res) {
	    return true;
	   } else {
		   return false;
	   }
 }
 function isBrFaUser() {
       var brUserVal=document.getElementById("brUser").value;
       var faUserVal=document.getElementById("faUser").value;
       if (brUserVal=='true' || faUserVal=='true') {
            return true;
        } else {
            return false;
        }
 }
 function setBrFaUserLabels() {
    if (isBrFaUser()) {
        document.getElementById("destLabel").innerHTML="Hold Location";
    }
 }

function branchCheck(){
       var branchNum=$('#branch').val();
       var branchNumLen=trim(branchNum).length;
       var booleanFlag="false";
       var isBrFaUserVal=isBrFaUser();
       $('#account').val("");
        if (isBrFaUserVal && !(branchNumLen==2 || branchNumLen==3)) {
            alert("Branch needs to be 2 or 3 digits");
            $('#branch').val("");
            return false;
		} else if (!isBrFaUserVal && branchNumLen != 3) {
			alert("Branch needs to be 3 digits");
			$('#branch').val("");
			return false;
		}else if(!isAlphaNumeric(branchNum)){
			alert("Branch needs to be alphanumeric");
			$('#branch').val("");
			return false;
		}
       document.getElementById("accDesc").innerHTML="";
       document.getElementById("accDesc").className="cSmallLabel";
       if (userType != null && trim(userType) != 'cbibdep' && trim(userType) != 'cbopdep') {
              if(branchNum != null && branchNum !='') {
                     secCont.retrieveBrs(function(result) {
                           if(null != result) {
                              for(var i=0;i<result.length;i++){
                                  if(branchNum==result[i]){
                                    booleanFlag="true";
                                    $("#statusCodes").prepend("<option value='ALL'>ALL</option>").val('ALL');
                                  }
                              }
                              if(booleanFlag=="false"){
                                  document.getElementById("accDesc").innerHTML=branchNum+" is an invalid Branch   ";
                                  document.getElementById("accDesc").className="cErrors";         
                              }
                           }
                     });
              } else {
                     $("#statusCodes").find('[value="ALL"]').remove();
              }
       } else if (userType != null && trim(userType) == 'cbopdep') {
              populateBox();
       }
} 

function checkBranch250(){

       var ele=document.getElementById('branch');
       var brVal=dwr.util.getValue("branch");
       if(branch250FuncEnbl=='Y' && brVal=="250"){
              dwr.util.removeAllOptions("250Acc");
              for(var i=0;i<ele.options.length;i++){
                     if(ele.options[i].value!="250"){
                           dwr.util.addOptions("250Acc",[ele.options[i].value]);  
                     }
              }
              if(typeof hideFunc!="undefined"){
                     hideFunc("u");
              }
              isPreviousBranch250 = true;
       }else {
              if(typeof hideFunc!="undefined"){
                     hideFunc("h");
              }
              if (null == selectedDepositRId || isPreviousBranch250 || !((trim(actionType)=='inquire' && (trim(userType)=="ib" || trim(userType)=="op" || trim(userType)=="rb" || trim(userType)=="margin" || trim(userType)=="cbibinq")) || (trim(actionType)=='history' && trim(userType)=="op"))) {
                     document.getElementById("account").value="";
              }
              document.getElementById("account").focus();
              document.getElementById("accDesc").innerHTML="";
              document.getElementById("accFrzDesc").className="cHidden";

              isPreviousBranch250 = false;
       }
}


function hideFunc(flag){
       if(flag=="h"){
              document.getElementById("account").maxLength=5;
              document.getElementById("account").size=7;
              if(document.getElementById("250Acc")!=null) {
                     document.getElementById("250Acc").style.visibility="hidden";
              }
       }else{
              document.getElementById("account").maxLength=2;
              document.getElementById("account").size=4;
              document.getElementById("account").value=document.getElementById("account").value.substring(0,2);
              if(branch250FuncEnbl=='Y') {
                     document.getElementById("250Acc").style.visibility="visible";
              }
       }
}

function checkOfacvalue(val,id){


       

       //val=trim(val).replace(/[&<>]/g," ");
       val=trim(val).replace(/[&]/g,"&amp;").replace(/[<]/g,"&lt;").replace(/[>]/g,"&gt;"); //Convert the special char to escape seq
       if(val=="") 
              return false;

       secCont.ofacCheck(val,function(check){

              /*alert(rowNum);
              for(var i=0;i<=ele.rows.length-1;i++) {
                     alert("Ofac id - "+ele.rows[i].cells[5].firstChild.id)
              }*/
              document.getElementById(id).value=check;
              alert(check);
              
       });
}

function branchChangeEvent(){
       var accountVal=document.getElementById("account").value;
       if (null != accountVal && accountVal != '') {
              accChangeEvent();
       }
}

function accChangeEvent(){
	
//var secValue=document.getElementById('secVal').value;
	
	var secValue=bwADPNum;
	//var cusipvalue=document.getElementById('cusipVal').value;
	var cusipvalue=bwCUSIP;
	var acVal="";
	acVal=document.getElementById("account").value;

	 var branch= $('#branch').val();
	 var bracc=branch+acVal;
	  $("#frozenDescVal").val("");
       var ele=document.getElementById("branch");
       var brval="";
       if(ele.type=='text'){
              brval=ele.value;
       }else{
              brval=ele.options[ele.selectedIndex].value;
       }
       var isBrFaUserVal = isBrFaUser();
       var brvalLen=trim(brval).length;
       if(trim(brval)==""){
    	   alert("Please enter branch details");
			return false;
       } else if (isBrFaUserVal && (brvalLen != 2 && brvalLen != 3)) {
       			alert("Branch needs to be 2 or 3 digits");
       			$('#branch').val("");
       			return false;
       } else if (!isBrFaUserVal && brvalLen != 3) {
			alert("Branch needs to be 3 digits");
			$('#branch').val("");
			return false;
		}else if(!isAlphaNumeric(brval)){
			alert("Branch needs to be alphaNumeric");
			$('#branch').val("");
			return false;
		}
       var acVal=accounStr();
       if (trim(acVal)=="" || trim(acVal).length != 5) {
    	   $('#account').val("");
    	   return false;
       }else if(!isAlphaNumeric(acVal)){
			alert("Account needs to be alphaNumeric");
			$('#account').val("");
			return false;
		}
       var statusCodes=$('#statusCodes').val();
       var dwacInd=$('#dwacInOut');
       var dwacIndVal="";

       if(dwacInd!=null){
       
       dwacIndVal=$('#dwacInOut').val();
       if(statusCodes=='INITIAL' && dwacIndVal=='I'){
       
       secCont.getAccountDec(brval,acVal,function(result){
                     var resultName=result[0];         
              rrCode=result[1];
              altBranchVal=result[2];
              //alert(rrCode);
                     checkOfacvalue(resultName,'checkOfac');
                     
              });
          
       
       }
       
       }
       
       
       if(null!=brval && brval !='' && 'ALL'!=brval && null!=acVal){
       //dwr.util.useLoadingMessage();
		//dwr.engine.beginBatch();
       secCont.getAccountDec(brval,acVal,function(result){
       
        /// cont acct Desc logic
                     var rsStr=result[0];
                           rrCode=result[1];
                           altBranchVal=result[2];
                           iraAcctInd=result[3];
                     validateUser=result[4];
                     //validateUser='Y';
                     //alert("validateUser"+validateUser);
                     branchSecObj['branch']=rsStr;
       
              //for account freeze to be shown only for Security In and FULL
      
              if (accountFreezeProcess == 'Y') {
	             // dwr.util.useLoadingMessage();
	             $("#frozenDescVal").val("");
                     secCont.getAccountFreezeInd(brval,acVal,userType,actionType,function(result){
                     
                           
                           if(null!=result[0] && result[0]=='Y'){

                          if (allowAltBranch=="Y" && validateUser=="N" && userType=='ib')
                      	   {
                                  //not to display message as Alternate branch takes precidence ove account freeze to be shown or not
                                  
                           } else
                          {
                            if(result[1].indexOf("SECURITY OUT")!=-1 && userType!='rb'){
		                     $("#frozenDescVal").val("SECOUT");
		                      acctFrzInd = 'N';
		                      document.getElementById("accFrzDesc").innerHTML="";
                              document.getElementById("accFrzDesc").className="cHidden";
		                     }else{
		                        document.getElementById("accFrzDesc").className="cErrors";
                                document.getElementById("accFrzDesc").innerHTML=result[1];
		                     	acctFrzInd = 'Y';
		                     }
                           		  //document.getElementById("accFrzDesc").className="cErrors";
                                  //document.getElementById("accFrzDesc").innerHTML=result[1];
                          }
                            } else {
                           		  document.getElementById("accFrzDesc").innerHTML="";
                                  document.getElementById("accFrzDesc").className="cHidden";
                                  acctFrzInd = 'N';
                           }
                           branchSecCheck();
                     });
              }
              
                     if(rsStr=="" || null==rsStr){
                           branchExistance=false;
                     }else{
                           branchExistance=true;
                     }
                     if (userType=='cbibdep') {
                           // Hiding the messages like "YOU ARE NOT AUTHORIZED TO ACCESS BR" for cbibdep
                           document.getElementById("accDesc").innerHTML=/YOU ARE NOT AUTHORIZED TO ACCESS BR/gi.test(rsStr)?"":rsStr;
                     } else {
                           document.getElementById("accDesc").innerHTML=rsStr;
                     }
                     //document.getElementById("accDesc").innerHTML=(/Account Not Found/gi.test(rsStr))?"":"";
                     document.getElementById("altbranchtxt").value=altBranchVal;
                     document.getElementById("iraAcctDesc").value=iraAcctInd;
                     document.getElementById("accDesc").className=((/Account Not Found/gi.test(rsStr)) || (/ERROR/gi.test(rsStr,0,5)) )?"cErrors":"cSmallLabel";
                     
                     
                     
                     //alert("allowAltBranch"+allowAltBranch+"---"+validateUser+"---"+userType);
                     // for alternate branch check valdity of user /type and client has alt branch functionality
                     if (allowAltBranch=="Y" && validateUser=="N" && userType=='ib')
                {document.getElementById("altBrUserDesc").className="cErrors";
              // if alt Branch is not authorized then do not show the account name
               document.getElementById("accDesc").innerHTML="";
                     document.getElementById("altbranchtxt").value="";
                     //document.getElementById("altbranchtxt").title="";
                     document.getElementById("accFrzDesc").innerHTML="";
                     document.getElementById("iraAcctDesc").value="";
                     }else {
                                  document.getElementById("altBrUserDesc").className="cHidden";
                           }
                     //branchSecCheck();
                     if(allowOfacCheckBySec!="" && allowOfacCheckBySec=='Y' )
             		{
                    	 if(secValue!="" && cusipvalue!=""){
             		ofacCheckBySecurity(secValue,cusipvalue,"0",bracc);
                    	 }
             		}
              });
              
        //   dwr.engine.endBatch();   
     
       }
}
/*
checkAcctFreeze=function(brval,acVal)
{
secCont.getAccountFreezeInd(brval,acVal,function(result){
                     //alert ("freeze ind"+result[0]);
                           acctFrzInd = result[0];
                           if(null!=result[0] && result[0]=='Y'){
                     //alert ("freeze ind reason"+result[1]);
                                  document.getElementById("accFrzDesc").className="cErrors";
                                  document.getElementById("accFrzDesc").innerHTML=result[1];
                           } else {
                           document.getElementById("accFrzDesc").innerHTML="";
                                  document.getElementById("accFrzDesc").className="cHidden";
                            }
                     });
}

*/



secActionChg=function(){
       var selInd=document.getElementById('secType').selectedIndex;
       document.getElementById('secText').value="";
       if(selInd==0){
              if(bwCUSIP==""){retrieveSecDesc();}
       }else if(selInd==1){
              if(bwSymbol==""){retrieveSecDesc();}
       }else if(selInd==2){
              if(bwADPNum==""){retrieveSecDesc();}
       }
       secPopData();
       
}

secPopData=function(){
       var selInd=document.getElementById('secType').selectedIndex;
       if(selInd==0){
              document.getElementById('secText').maxLength=9;
              document.getElementById('secText').value=bwCUSIP;
       }else if(selInd==1){
              document.getElementById('secText').maxLength=12;
              document.getElementById('secText').value=bwSymbol;
       }else if(selInd==2){
              document.getElementById('secText').maxLength=7;
              document.getElementById('secText').value=bwADPNum;
       }
       
       document.getElementById('secText').focus();
       
}

secCleanData=function(){

       document.getElementById('secType').selectedIndex=0;
       document.getElementById('secText').value=="";
       document.getElementById('secText').maxLength=9;
       bwSymbol="";
       bwCUSIP=bwADPNum="";
       bwCUSIP="";bwCurrencyCd="";
}

clearSecProp=function(){
       bwADPNum="";
       bwCUSIP="";
       bwSymbol="";bwCurrencyCd="";
}

accounStr=function(){
       var ele=document.getElementById("branch");
       var brval="";
       
       if(ele.type=='text'){
       brval=ele.value;
       }else{
       brval=ele.options[ele.selectedIndex].value;
       }
       
       var acVal;
       acVal=document.getElementById("account").value;
       if(branch250FuncEnbl=='Y' && brval=="250" && ele.type!='text'){
              ele=document.getElementById("250Acc");
              acVal=ele.options[ele.selectedIndex].value+acVal;
       }
       if (trim(acVal).length > 1 && trim(acVal).length != 5) {
              alert('Account needs to be 5 digits');
              $('#account').val("");
       }else if(!isAlphaNumeric(acVal)){
			//alert("Account need to be alphanumeric");
			$('#account').val("");
		}
       return acVal;
}

function moveOnMax(field,nextFieldID){
    if(field.value.length >= field.maxLength){
    // Focus the element only if it's not disabled
       if(document.getElementById(nextFieldID).disbled=="disabled") {
              //
       } else {
              document.getElementById(nextFieldID).focus();
       }
       }
}

function isNumber(evt) {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    if (charCode > 31 && (charCode < 48 || charCode > 57)) {
        return false;
    }
    return true;
}

function showSort() {
              $('#AscendingBranch').hide();
              $('#DescendingBranch').hide();
              $('#AscendingBranch1').hide();
              $('#DescendingBranch1').hide();
              $('#AscendingBranch2').hide();
              $('#DescendingBranch2').hide();
              $('#AscendingBranch3').hide();
              $('#DescendingBranch3').hide();   
              $('#AscendingDestination').hide();
              $('#DescendingDestination').hide();
              $('#AscendingAccount').hide();
              $('#DescendingAccount').hide();
              $('#AscendingAccount1').hide();
              $('#DescendingAccount1').hide();
              $('#AscendingAccount2').hide();
              $('#DescendingAccount2').hide();
              $('#AscendingAccount3').hide();
              $('#DescendingAccount3').hide();
}
</script>
<form name="newcertf1" id="newcertf1" method="POST">
    <input type="hidden" id="brUser" name="brUser" value="null" />
    <input type="hidden" id="faUser" name="faUser" value="null" />

<table width="100%" align="left" class="ui-widget-content"  border="0" cellspacing="2" cellpadding="0">
       <tr>
              <td style="vertical-align:top" width="38%">
                     <table width="100%" border="0" cellspacing="0" cellpadding="0" >
                           <thead class="cGrid ui-widget-header">
                                  <tr>
                                         <td nowrap="nowrap">
                                                <label class="ui-label" id="BrLabel1"  >
                                                       Branch 
                                                       <img title="Sort Branch Asc" alt="Ascending" id="AscendingBranch" src="images/btn_up1.gif" onclick="changeSort('AscendingBranch')"/>
                                                       <img title="Sort Branch Desc" alt="Descending" id="DescendingBranch" src="images/btn_up2.gif" onclick="changeSort('DescendingBranch')"/>
                                                       - Account 
                                                       <img title="Sort Account Asc" alt="Ascending" id="AscendingAccount" src="images/btn_up1.gif" onclick="changeSort('AscendingAccount')"/>
                                                       <img title="Sort Account Desc" alt="Descending" id="DescendingAccount" src="images/btn_up2.gif" onclick="changeSort('DescendingAccount')"/>
                                                </label>
                                                <label class="ui-label" id="BrLabel2" style="display:none">
                                                       Branch 
                                                       <img title="Sort Branch Asc" alt="Ascending" id="AscendingBranch1" src="images/btn_up1.gif" onclick="changeSort('AscendingBranch')"/>
                                                       <img title="Sort Branch Desc" alt="Descending" id="DescendingBranch1" src="images/btn_up2.gif" onclick="changeSort('DescendingBranch')"/>
                                                       - Account 
                                                       <img title="Sort Account Asc" alt="Ascending" id="AscendingAccount1" src="images/btn_up1.gif" onclick="changeSort('AscendingAccount')"/>
                                                       <img title="Sort Account Desc" alt="Descending" id="DescendingAccount1" src="images/btn_up2.gif" onclick="changeSort('DescendingAccount')"/>
                                                       / Acct Type Code 
                                                </label>
                                                <label class="ui-label" id="BrLabel3" style="display:none" >
                                                       Branch 
                                                       <img title="Sort Branch Asc" alt="Ascending" id="AscendingBranch2" src="images/btn_up1.gif" onclick="changeSort('AscendingBranch')"/>
                                                       <img title="Sort Branch Desc" alt="Descending" id="DescendingBranch2" src="images/btn_up2.gif" onclick="changeSort('DescendingBranch')"/>
                                                       - Account 
                                                       <img title="Sort Account Asc" alt="Ascending" id="AscendingAccount2" src="images/btn_up1.gif" onclick="changeSort('AscendingAccount')"/>
                                                       <img title="Sort Account Desc" alt="Descending" id="DescendingAccount2" src="images/btn_up2.gif" onclick="changeSort('DescendingAccount')"/>
                                                       / Alternate Branch </label>
                                                <label class="ui-label" id="BrLabel4" style="display:none">
                                                       Branch 
                                                       <img title="Sort Branch Asc" alt="Ascending" id="AscendingBranch3" src="images/btn_up1.gif" onclick="changeSort('AscendingBranch')"/>
                                                       <img title="Sort Branch Desc" alt="Descending" id="DescendingBranch3" src="images/btn_up2.gif" onclick="changeSort('DescendingBranch')"/>
                                                       - Account 
                                                       <img title="Sort Account Asc" alt="Ascending" id="AscendingAccount3" src="images/btn_up1.gif" onclick="changeSort('AscendingAccount')"/>
                                                       <img title="Sort Account Desc" alt="Descending" id="DescendingAccount3" src="images/btn_up2.gif" onclick="changeSort('DescendingAccount')"/>
                                                       / Acct Type Code / Alternate Branch
                                                </label>
                                                
                                         </th>
                                         
                                         
                                  </tr>
                           </thead>
                           <tbody>
                                  <tr>
                                         <td nowrap="nowrap">
                                         <table><td><select id="branch" name="branch" onChange="branchChange();branchChangeEvent();">
                                                </select><select     id="250Acc" name="250Acc" /></td> <td id="accountId"><input id="account" name="account" type="" maxlength="5" size="5" onChange="toUpper(this);accChangeEvent();" onkeyup="moveOnMax(this,'secType');" /></td>
                                                <td><input id="accountTypeCd" name="accountTypeCd" title="" maxlength="1" size="2" style="display:none" onkeypress="return isNumber(event)"/></td>
                                                <td><input id="altbranchtxt" name="altbranchtxt" title=""  type="" maxlength="5" size="5" style="display:none"/> </td>

                                         </table>
                                                
                                                
                                                
                                                
                                         </td>
                                  </tr>
                                  <tr>
                                         <td>
                                             <span id="branchDesc" name="branchDesc" class="cSmallLabel"></span> 
                                                <span id="accDesc" name="accDesc" class="cSmallLabel"></span> 
                                                <!--  Description used for frozen accounts -->  
                                                <span id="accFrzDesc" name="accFrzDesc" class="cHidden"> </span>       
                                                <span id="altBrUserDesc" name="altBrUserDesc" class="cHidden"> ( USER ID not ENTITLED to ALTERNATE BRANCH )</span> 
                                                <input type="text" id="iraAcctDesc" name="iraAcctDesc" class="cHidden" />
                                         </td>
                                  </tr>
                           </tbody>
                     </table>
              </td>
              
              <td style="vertical-align:top" width="30%">
                     <table width="100%" border="0" cellspacing="0" cellpadding="0">
                           <thead class="cGrid ui-widget-header" >
                                  <tr>
                                         <th colspan="3"><label class="ui-label">Security</label></th>
                                  </tr>
                           </thead>
                           <tbody>
                                  <tr>
                                         <td nowrap="nowrap">
                                                <select id="secType" onchange="secActionChg();">
                                                       <option value="C" selected>CUSIP</option>
                                                       <option value="S">SYMBOL</option>
                                                       <option value="A">SECURITY NUMBER</option>      
                                                </select>
                                                <input type="text" id="secText" name="secText" size=15 maxlength="9" onchange="retrieveSecDesc();" onkeyup="moveOnMax(this,'destination');">
                                         </td>
                                         <td width="10%">
                                                <input type="text" id="currencyCode" title="" name="currencyCode" class="cHidden" size=2 maxlength=2 onChange="toUpper(this);checkCurrencyCd();"  />
                                                <!-- onMouseOver="javascript:showTip(this, event,'Currency Code for Market Value')" onMouseOut="javascript:hideTip()" -->
                                         </td>
                                         <td width="40%">
                                                <div id="bondRegTypeDiv" name="bondRegTypeDiv" class="cHidden" > 
                                                       <select id="bondRegType" name="bondRegType"> 
                                                       <option value="" selected>Select Bond Type</option> 
                                                       <option value="BR">Bearer Coupon</option> 
                                                       <option value="RC">Regd Corporate</option>      
                                                       <option value="IN">Interchangeable</option>     
                                                       <option value="RM">Regd to Municipal</option>   
                                                       <option value="RP">Regd to Principal</option>   
                                                       <option value="BE">Book Entry</option>   
                                                       <option value="CL">Partial Call</option>
                                                       <option value="WI">When Issue</option>   
                                                       </select> 
                                                </div>
                                         </td>
                                  </tr>
                                  <tr>
                                         <td colspan="2">
                                                <span id="dtcEligInd" name="dtcEligInd" class="cHidden"></span>
                                                <span id="dtcEligText" name="dtcEligText" class="cSmallLabel"></span>
                                                <span id="reorgText" name="reorgText" class="cSmallLabel"></span>
                                         </td>
                                         <td>
                                                <div id="rstrIndDiv" name="rstrIndDiv" class="cHidden">
                                                       <label class="cInfoText">Restricted: </label>
                                                       <input type="checkbox" id="rstrIndChkBox" id="rstrIndChkBox" onClick="rstrIndCheck();"/> <!-- onClick="rstrIndCheck();" -->
                                                </div>
                                         </td>
                                  </tr>
                                  <tr>
                                         <td colspan="3">
                                                <span id="secDecText" name="secDecText" class="cSmallLabel"></span>&nbsp;
                                                <span id="price" name="price" class="cSmallLabel"></span>
                                                &nbsp;&nbsp;&nbsp;<span id="currencyChk" name="currencyChk" class="cSmallLabel" visibility="hidden"></span>
                                                <span id="bondDecText" name="bondDecText" class="cSmallLabel"></span>
                                                <span id="recordDtText" name="recordDtText" class="cErrors"></span>
                                                <div><span id="chillIndText" name="chillIndText" class="cErrors"></span></div>
                                         </td>
                                         
                                  </tr>  
                           </tbody>
                     </table>
              </td>
              
              <td style="vertical-align:top"  align="left" width="30%" >
                     <table width="100%" border="0" cellspacing="0" cellpadding="0" >
                           <thead class="cGrid ui-widget-header" >
                                  <tr>
                                         <th>
                                                <label id = "destLabel" class="ui-label">Destination
                                                       <img title="Sort Destination Asc" alt="Ascending" id="AscendingDestination" src="images/btn_up1.gif" onclick="changeSort('AscendingDestination')"/>
                                                       <img title="Sort Destination Desc" alt="Descending" id="DescendingDestination" src="images/btn_up2.gif" onclick="changeSort('DescendingDestination')"/>    
                                                </label>
                                         </th>
                                  </tr>
                           </thead>
                           <tbody>
                                  <tr>
                                         <td align="center"><select id="destination" name="destination" onChange="boxMovement();memSegDisplay();"></select></td>
                                  </tr>
                                  <tr>
                                         <td>
                                                <span class="cSmallLabel">&nbsp;</span>  
                                         </td>
                                  </tr>  
                                  
                           </tbody>
                     </table>
              </td>
       </tr>
</table>
<script type="text/javascript" language="javascript">
populateBranches();
if (userType != null && trim(userType) != 'cbibinq') {
       populateBox();
}
showSort();
function memSegDisplay(){
 var desObj = $("#destination").val();
 var inOutIndObj = $("#inOutInd").val();
	if(desObj==="DWAC" && inOutIndObj==="I"){
	$("#memSegThId").show();
	$("#memSegTdId").show();
		/* $("#memSegThId").removeClass("hiddenvariable");
		$("#memSegTdId").removeClass("hiddenvariable"); */
	} else {
	$("#memSegThId").hide();
	$("#memSegTdId").hide();
		/* $("#memSegThId").addClass("hiddenvariable");
		$("#memSegTdId").addClass("hiddenvariable"); */
	}
}
setBrFaUserLabels();
</script>

		</td>
	</tr>
 </table>
 
 <table id="inqTabField" name="inqTabField" class="ui-widget-content" width="100%">
	<tr>
		<td id="pouchTd"  name="pouchTd" ><th align="left" class="ui-label">Pouch ID</th>
		<th id="vpsIdField" name="vpsIdField" class="ui-label">VPS ID</th>
		<td id="statusTd" name="statusTd" align="right">
			<th class="ui-label">
				Status
				<img title="Sort Status Asc" alt="Ascending" id="AscendingStatus" src="images/btn_up1.gif" onclick="changeSort('AscendingStatus')"/>
				<img title="Sort Status Desc" alt="Descending" id="DescendingStatus" src="images/btn_up2.gif" onclick="changeSort('DescendingStatus')"/>
			</th>
		</td>
		<th class="ui-label" colspan="2">Quantity&nbsp;</th>
		<th class="ui-label" colspan="2">Amount&nbsp;</th>
		<th class="ui-label" colspan="2">
			Days Aged
			<img title="Sort Days Aged Asc" alt="Ascending" id="AscendingDaysAged" src="images/btn_up1.gif" onclick="changeSort('AscendingDaysAged')"/>
			<img title="Sort Days Aged Desc" alt="Descending" id="DescendingDaysAged" src="images/btn_up2.gif" onclick="changeSort('DescendingDaysAged')"/>
			&nbsp;
			
			</th>
		<td id="cdateTd" name="cdateTd" align="right">
			<th class="ui-label" >Create Date
				<img title="Sort Create Date Asc" alt="Ascending" id="AscendingCreateDate" src="images/btn_up1.gif" onclick="changeSort('AscendingCreateDate')"/>
				<img title="Sort Create Date Desc" alt="Descending" id="DescendingCreateDate" src="images/btn_up2.gif" onclick="changeSort('DescendingCreateDate')"/>
			</th>
		</td>
		<td>&nbsp;</td>

	</tr>
	<tr>
		
		<td align="left" colspan="2"><input type="text" id="pouchId" name="pouchId"  value="" onChange="pouchIdFieldChange();" ></td>
		<td align="middle"><input type="text" id="vpsId" name="vpsId" value="" size="19" maxlength="16"></td>
		<td align="middle" width="12%"  colspan="2"><select id="statusCodes" name="statusCodes"></select></td>
		<td id="quantTd" name="quantTd" align="right">
			<select id="quantOp" name="quantOp" onChange="qtyOpChange();">
				<option value="=">=</option>
				<option value=&lt >&lt</option>
				<option value=&gt  >&gt</option>
			</select>
		</td>
		<td align="left"> <input type="text" id="quantity" name="quantity" value="" size="10"></td>
		<td id="amtTd" name="amtTd" align="right">
			<select id="amtOp" name="amtOp" onChange="amtOpChange();">
				<option value="=">=</option>
				<option value=&lt >&lt</option>
				<option value=&gt >&gt</option>
			</select>
		</td>
		<td align="left"> <input type="text" id="amount" name="amount" value="" size="16"  ></td>
				
		<td id="daysAgedTd" name="daysAgedTd" align="right">
			<select id="daysAgedOp" name="daysAgedOp" onChange="daysAgedOpChange();">
				<option value="=">=</option>
				<option value=&lt >&lt</option>
				<option value=&gt >&gt</option>
			</select>
		</td>
		<td align="left"> <input type="text" id="daysAged" name="daysAged" value="" size="16"  ></td>

		<td align="left" colspan="2">
		<input type="text" id="cdate" name="cdate"  value="" size="11" maxlength="10">
		<input type="hidden" id="todaysServerDate" value="03/14/2024" />
		</td>
		<td align="center"><input type="button" id="inquireBut" name="inquireBut" class='ui-button' value="SEARCH" onclick="inquireCertsSubmit();"></td> 
	</tr>
 </table>
</fieldset>

<fieldset id="depositfs" name="depositfs">
	<legend>
	<img src="/spsvaultweb/imgs/iconPrint_dis.gif" alt="Print Table" title="Print Table" onClick="printTable();"/>&nbsp;
	<img src="/spsvaultweb/imgs/excel.gif" alt="Excel" title="Excel" onClick="exportCSV();"/>&nbsp;
		Requests
	</legend>
<div id="depositDiv" name="depositDiv" style="height:300;overflow:auto">
<table id="inquiredCerts" name="inquiredCerts" class="sortable" width="100%" border="0" cellspacing="1" cellpadding="1">
	
		
		
			<thead  class="cGrid ui-widget-header" id="inqHeader">
				<tr id="RecsFound" name="RecsFound" style="position:relative;top:expression(this.offsetParent.scrollTop);">
					<td align="center">VPS ID</td>
					<td align="center" >Branch</td>
					<td align="center" >Account</td>
					<td align="center" >Security</td>
					
						
					 	
							<td id="DestHdrLabel" align="center" ><strong>Destination</strong></td>
						
					
					<td align="center" >Quantity</td>
					<td align="center" >Market Value</td>
					<td align="center" >CUSIP</td>
					<td align="center" >Symbol</td>
					<td align="center" >Msg Type</td>
					<td align="center" >Status</td>
					<td align="center" >Days Aged</td>
					<td align="center" >Create Dt</td>
					<td align="center" >Update Dt</td>
					
					
						<td align="center" class="ui-button" id="receiveTd"></td>
					 
					
				</tr>
			</thead>
		
	
	<tbody id="inqBody" name="inqBody" class="cGrid" >
	</tbody>

</table>

</div>
<table width="100%">
<tr>
	<td>	<div id="navigationDiv" name="navigationDiv" style="overflow:auto">
<center>
     <Label id="navFirstLbl" onclick="navFirst();" class="hoverPointer" > &nbsp;&nbsp;&nbsp;&nbsp;    First</Label>
      <Label id="navFirstLbl" onclick="navPrev();" class="hoverPointer" > &nbsp;&nbsp;&nbsp;&nbsp;    Previous</Label>
   [ Showing Page <input type="text" disabled="disabled"    id="selectedPageValue" value="" size="9"/> of <input type="text"  disabled="disabled"   id="totalPageValue" value=""  size="9"/> ] &nbsp;&nbsp; 
       <Label id="navFirstLbl" onclick="navNext();" class="hoverPointer" > &nbsp;&nbsp;&nbsp;&nbsp;    Next</Label>
        <Label id="navFirstLbl" onclick="navLast();" class="hoverPointer" > &nbsp;&nbsp;&nbsp;&nbsp;    Last</Label>


    
    &nbsp;&nbsp; 
    
    <B>Show Page:</B> <input type="text" id="pageSelect" value="" size="9" maxlength="9"/>&nbsp;
                      <input type="button" id="getPage" value="GO" onclick="displayForPage();"/>


 
</center>   
</div></td>
	</tr>
</table>
<table width="100%" class= >
	
	<tr>
		<td align="right" class= >
			<input type="button" class="ui-button" id="receiveBut" name="receiveBut" value="Receive" onClick="receiveDeposits();"> </input>
		</td>
		<td align="right" class="cHidden" >
			<input type="button" class="ui-button" id="acptMultBut" name="acptMultBut" value="Accept" onClick="acceptMultipleDeposits();"> </input>
		</td> 
	 	<td align="right" class="cHidden" > 
			<input type="button" class="ui-button" id="acptMultBut1" name="acptMultBut" value="Margin Accept" onClick="acceptMultipleDeposits();"> </input>
		</td>
		
	</tr>
</table>
</fieldset>

<fieldset id="certfs" name="certfs">
	<legend>Request Details <b><label id="requestSpsId"></label></b><label>&nbsp;</label><label id="requestSpsIdMsgType" class="cInfoText"></label><label id="requestSpsIdStatus" class="cInfoText"></label> </legend>
	<table width="98%" name="miscFields" border="0" cellspacing="0" cellpadding="0" class="ui-widget-content">
		<tr>
			<td width="14%" align="left">
				<div id="negoIndDiv" class="cHidden">
					<label class="cLabel">&nbsp;&nbsp;&nbsp;&nbsp;Negotiable:</label>&nbsp;
					<select id="negotiableInd"> <option value='' >Please Select</option> <option value='Y'>Yes</option> <option value='N' selected>No</option> </select>
						
				</div>
			</td>
			
			<td width="14%" align="left">
				<div id="bearerIndDiv" class="cHidden">
					<label class="cLabel">&nbsp;&nbsp;&nbsp;&nbsp;Bearer:</label>&nbsp;
					<select id="bearerInd" onChange="bearerChange()"> <option value='' >Please Select</option> <option value='Y'>Yes</option> <option value='N' selected>No</option> </select>
						
				</div>
			</td>
			
			<td width="20%" align="left">
				<div id="deliverToBranchDiv" class="cHidden">
					<label class="cLabel">&nbsp;&nbsp;&nbsp;&nbsp;Deliver To Branch:</label>&nbsp;
					
					<select id="deliverToBranch"> <option value='' >Please Select</option> <option value='Y'>Yes</option> <option value='N' selected>No</option> </select>
					
				</div>
			</td>
			<td width="14%" id="suspIndDivTd" align="left">
				<div id="suspIndDiv" class="cHidden">
					<label class="cLabel">Aged Days:</label>&nbsp;<label id="agedDays" id="agedDays" class="cLabel">&nbsp;</label>
					&nbsp;&nbsp;
					<label class="cInfoText">Suspense:</label>&nbsp;<label id="suspInd" id="suspInd" class="cLabel">N</label>
				</div>
			</td>
			<td width="8%" align="left">
				<div id="giftInhIndDiv" class="cHidden">
					<label class="cInfoText">Gift/Inheritance:</label>&nbsp;
					<select id="giftInhInd"> 
						<option value='N' Selected>Normal</option> 
						<option value='G'>Gift</option> 
						<option value='I'>Inheritance</option>
					</select>
				</div>
			</td>
			<td width="8%" align="left">
				<div id="restrictedIndicatorDiv">
					<label class="cInfoText">Restricted Ind:</label>&nbsp;
					<select id="restrictedStockInd"> 
						<option value=''>Please Select</option> 
						<option value='Y'>Yes</option> 
						<option value='N'>No</option>
					</select>
				</div>
			</td>	
			<td width="8%" align="left">
				<div id="dtcByPassDiv" class="cHidden">
					<label class="cInfoText">Bypass to DTC:</label>&nbsp;
					<select id="dtcByPassInd"> 
						<option value='Y' >Yes</option> 
						<option value='N' Selected>No</option>
					</select>
				</div>
			</td>
			<!-- <td width="8%" align="left">
				<div id="bkpgByPassDiv" class="cHidden">
					<label class="cInfoText">Bypass BKPG:</label>&nbsp;
					<select id="bkpgByPassInd"> 
						<option value='Y' >Yes</option> 
						<option value='N' Selected>No</option>
					</select>
				</div>
			</td> -->
			<td width="14%">
				<div id="bkpgCurrDiv" class="cHidden">
					<label class="cLabel">Book-Keeping Currency:</label>&nbsp;
						<input type="text" id="bkpgCurrCode" name="bkpgCurrCode" size=2 maxlength=2 value="" onChange="toUpper(this);checkBkpgCurrencyCd();" />
				</div>
			</td>
		<!-- 	<td width="14%" align="left">
				<div id="blankDiv" class="cHidden">
				</div>
			</td>-->
		</tr>
	 </table>	
<table id="SpsTabs" name="SpsTabs" width="98%" >
	<tr>
		<td valign="top">
		<!--  for tabbed tanels we need to add 'var TabbedPanels2 = new Spry.Widget.TabbedPanels("TabbedPanels2");' under javascript -->
		<div id="TabbedPanels2"  name="TabbedPanels2" class="TabbedPanels">
			<ul class="TabbedPanelsTabGroup">
				<li class="TabbedPanelsTab" tabindex="0" id="tab1"><label
					onClick="selectedTabFunc(1);">Certificates</label></li>
				<li class="TabbedPanelsTab" tabindex="0" id="tab2"><label id="dwaclblName"
					onClick="selectedTabFunc(2);"></label></li>
				<li class="TabbedPanelsTab" tabindex="0" id="tab3"><label
					onClick="selectedTabFunc(3);">Specify Doc</label></li>
				<li class="TabbedPanelsTab" tabindex="0" id="tab4"><label
					onClick="selectedTabFunc(4);">Book-keeping</label></li>
				<li class="TabbedPanelsTab" tabindex="0" id="tab5"><label
					onClick="selectedTabFunc(5);">Audit trail</label></li>
				<li class="TabbedPanelsTab" tabindex="0" id="tab6"><label
					onClick="selectedTabFunc(6);">VPS Imaging</label></li>
				<li class="TabbedPanelsTab" tabindex="0" id="tab7"><label
					onClick="selectedTabFunc(7);">Comments</label></li>
				<li class="TabbedPanelsTab" tabindex="0" id="tab8"><label
					onClick="selectedTabFunc(8);">Questionnaire</label></li>
				<li class="TabbedPanelsTab" tabindex="0" id="tab9"><label
					onClick="selectedTabFunc(9);">DSRQ Questions</label></li>
				<li class="TabbedPanelsTab" tabindex="0" id="tab10"><label 
					onClick="selectedTabFunc(10);">Trailer Desc</label></li>
				<li class="TabbedPanelsTab" tabindex="0" id="tab11"><label 
					onClick="selectedTabFunc(11);">Foreign Address</label></li>
				<li class="TabbedPanelsTab" tabindex="0" id="tab12"><label 
					onClick="selectedTabFunc(12);">Contact information</label></li>
			</ul>
			<div class="TabbedPanelsContentGroup">
			
			<div class="TabbedPanelsContent" style="height:230;overflow:auto">
			<table  class="ui-widget-content" width="100%" id="certTable" name="certTable" border="0" cellspacing="1" cellpadding="1">
				<thead>
			<tr></tr>
			 	<tr  class="cGrid ui-widget-header">
						<td align="center" id="certPrefId">Cert Prefix</td>
						<td align="center">Cert Number</td>
						<td align="center" id="regNameTd" width="20%">Reg Name</td>
						<td align="center">Quantity</td>
						<td align="center">Market Value</td>
						<td align="center">Issue Date</td>
						<td align="center">OFAC</td>
						<td align="center">SIC</td> 
					<!-- 	 -->
						<!-- Delivery, Delete and Add not applicable for 'repair' action and for user types 'sp' -->
						
						
						  <td id="dlvCertThDiv" name="dlvCertThDiv" class="cHidden" align="center">Delivery<input type="checkBox" name="deliverChkBox" id="deliverChkBox"  onClick="deliveryCheck();"/></td>
						
				    	  <td id="delCertThDiv" name="delCertThDiv" class="cHidden" align="center"><label class="ui-label">Clean Up</label></td>
						  <td id="newCertButDiv" name="newCertButDiv" class="cHidden" align="center"><button type="button" id="addnewBut" class='ui-button'  name="addnewBut"  onClick="addNewCert();"  >+</button></td>
						
					
					</tr></thead>
				<tbody id="certBody" name="certBody" ></tbody>							
			</table>
			</div>
			
			<div class="TabbedPanelsContent" style="height:230;overflow:auto">
			
			<table class="ui-widget-content" width="100%" id="dwacDepositsTab" name="dwacDepositsTab" border="0" cellspacing="1" cellpadding="1">
				<thead class="cGrid ui-widget-header"><tr>
					<td align="center">VPS Id</td>
					<td align="center">Quantity</td>
					<td align="center">Transfer Account</td>
					<td id="ssnTh" align="center">Social Security Number</td>
					<td id="regNameTh"  align="center">Registration Name</td>
					<td align="center">Incoming/Outgoing</td>
					<td align="center">OFAC</td>
					<td align="center" id="incMemSegTh">Increase Mem Seg</td>
					<td  id="suretyNumberTh" align="center">Surety Number</td>
					<td  id="quantityTransmissionTh" align="center">Quantity Transmission</td>
					<!-- <td align="center">Comments</td>-->
				</tr></thead>
				<tbody id="dwacDepositsBody" name="dwacDepositsBody">
		<!--  		-->
				
				
				
				
				
				</tbody>
			</table>
			</div>		
			
			<div class="TabbedPanelsContent"> 
			<table  id="specDocs" name="specDocs" width="70%" >
				<tr>
					
					
					<td><label class="ui-label" id="newEvents" name="newEvents" >Event</label></td>
					<td><select id="specEvent" name="specEvent" onChange="populateDocs()"></select></td>
					
					
					<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
					<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
					<td><label class="ui-label" id="newDocs" name="newDocs">New Docs </label></td>
					<td><select id="allDocs" name="allDocs" onChange="addTOexisting();"></select></td>
					<td></td>
				</tr>
			</table>
			<div style="height:190;overflow:auto"> 
			<table id="reqDocs" name="reqDocs" class="ui-widget-content" width="100%" border="0" cellspacing="1" cellpadding="1">
				<thead class="cGrid ui-widget-header"><tr>
					<td align="center">Document</td>
					<td align="center">Received Date</td>
					
					<td align="center">Additional Text</td>
				<td align="center">Specify Date</td>
					<td align="center">Delete</td>
				</tr></thead>
				<tbody id="docBody" name="docBody" class="cLabel"></tbody>
			</table>
			<table width="45%">
				<tr><td><div id="docInfoDiv" name="docInfoDiv" class="cInfoText"></div></td></tr>
			</table>
			</div>
			</div>
			
			<div class="TabbedPanelsContent" style="height:230;overflow:auto" >
			<table id='bkTable' name='bkTable' class="sortable;ui-widget-content" width="100%"  border="0" cellspacing="1" cellpadding="1">
				<thead class="cGrid ui-widget-header"><tr>
					<td align="center">Create Date</td>
					<td align="center">Account</td>
					<td align="center">Batch</td>
					<td align="center">Entry Cd</td>
					<td align="center">DR/CR</td>
					<td align="center">CUSIP</td>
					<td align="center">Quantity</td>
					<td align="center">Amount</td>
					<td align="center">Description</td>
					<td align="center" id="statusTDId">Status</td></tr>
				</thead>
				<tbody id="bkBody" name="bkBody" class="cLabel" ></tbody>	
			</table>
			</div>
			
			<div class="TabbedPanelsContent" style="height:230;overflow:auto">
			<table class="ui-widget-content;sortable" width="80%" id="auditTrailTab" name="auditTrailTab" border="0" cellspacing="1" cellpadding="1" >
				<thead class="cGrid ui-widget-header"><tr>
					<td align="center">Activity</td>
					<td align="center">Creation Date</td>
					<td align="center">Created By</td>
					<td align="center">Status</td>
				</tr></thead>
			<tbody id="auditTrailBody" name="auditTrailBody" class="cLabel"></tbody>
			</table>
			</div>		
			
			<div class="TabbedPanelsContent" style="height:230;overflow:auto">
			<table class="ui-widget-content;sortable" width="100%" id="spsImagingTab" name="spsImagingTab" border="0" cellspacing="1" cellpadding="1">
				<thead class="cGrid ui-widget-header">
					<tr>
						<td align="center">Document</td>  
						<td align="center">Branch</td>
						<td align="center">Account</td>
						<td align="center">Representative</td>
						<td align="center">Doc Saved Date</td>
						<td align="center">VPS Id</td>
						<td align="center">Client Nbr</td>
						<td align="center">Cusip</td>
						<td align="center">Document Id</td>
					</tr>
	
				 </thead>
				 <tbody id="spsImagingBody" name="spsImagingBody" class="cLabel"></tbody>
			</table>	
			</div>
					
			<div class="TabbedPanelsContent" style="height:230;overflow:auto">
			<table class="ui-widget-content" id="newCommentDiv">
				<tr><td class="cSmallLabel">Enter new comments below (<500 chars)</td></tr>
				<tr>
					<td><textarea id="newComment" name="newComment" cols="150" rows="2" maxlength="500" data-maxsize="500" data-output="statusCmnt" wrap="virtual" title="Enter the comments here"></textarea>
						<div id="statusCmnt" cols="3" style="visibility: hidden;text-align:right"  ></div>
					</td>
				</tr>
			</table>
			
			<table class="sortable;ui-widget-content" width="100%" id="commentsTab" name="commentsTab" border="0" cellspacing="1" >
				<thead class="cGrid ui-widget-header"><tr>
					<td align="center">S.No</td>
					<td align="center">Comments</td>
					<td align="center">Updated By</td>
					<td align="center">Update Date</td>
				</tr></thead>
				<tbody id="commentsBody" name="commentsBody" class="cLabel" align="left"></tbody>
			</table>
			</div>	
			<div class="TabbedPanelsContent" style="height:230;overflow:auto">
			<table width="60%">
				<tr><td><div id="questInfoDiv" name="questInfoDiv" class="cInfoText"></div></td></tr>
			</table>
			<table class="ui-widget-content" width="100%" id="questionsTab" name="questionsTab" border="0" cellspacing="1" cellpadding="1" >
				<thead class="cGrid ui-widget-header"><tr>
					<td width="2%" align="center">#</td>
					<td width="40%" align="center">Question</td>
					<td width="10%" align="center">Answer</td>
					<td width="28%" align="center">Notes</td>
					<td width="10%" align="center">Updated By</td>
					<td width="10%" align="center">Update Date</td>
				</tr></thead>
				<tbody id="questionsBody" name="questionsBody" class="cLabel"></tbody>
			</table>
			</div>	
				
			<div class="TabbedPanelsContent" style="height:230;overflow:auto">
			<table class="ui-widget-content" width="75%" id="dsrqQuestionsTab" name="dsrqQuestionsTab" border="0" cellspacing="1" cellpadding="1" >
				<thead class="cGrid ui-widget-header"><tr>
					<td width="5%" align="center">#</td>
					<td width="40%" align="center">Question</td>
					<td width="5%" align="center">Answer</td>
				</tr></thead>
				<tbody id="dsrqQuestionsBody" name="dsrqQuestionsBody" class="cLabel"></tbody>
			</table>
			</div>
			<div class="TabbedPanelsContent" style="height:300">
				<table class="ui-widget-content" id="trailerDiv">
					<tr><td class="cSmallLabel">Enter free-form Trailer description below (<90 chars)</td></tr>
					<tr>
						<td>
							<textarea id="trailerDesc" name="trailerDesc" cols="150" rows="2"  maxlength="90" data-maxsize="90" data-output="statusTrl" wrap="virtual" title="Enter Trailer Description here" onChange="toUpper(this);" ></textarea> <br />  
							<div id="statusTrl" cols="3" style="text-align:right"></div>
						</td>
					</tr>
				</table>
	   		</div>
	   		<div class="TabbedPanelsContent" style="height:300">
				<table class="ui-widget-content" id="foreignAddressDiv">
					<tbody id="foreignAddressBody" name="foreignAddressBody" class="cLabel"></tbody>
					
				</table>
	   		</div>
			<div class="TabbedPanelsContent" style="height:230;overflow:auto">
			<table class="ui-widget-content" id="newContactDiv" border="0" cellspacing="1" cellpadding="1" >
				<tr>
				<td><label class="ui-label" id="newContactLabel">Contact </label></td>
					<td><input type="text" id="newContact" name="newContact"   wrap="virtual" title="Enter Contact details here"></input></td>
				</tr>
				<tr>
					<td><label class="ui-label" id="newPhnNbrLabel">Contact Phone Number </label></td><td><input type="text" id="newPhoneNbr" name="newPhoneNbr" maxlength="12" wrap="virtual" title="Enter Phone Number here"></input></td>
				</tr>
			</table>
			
			<table class="sortable;ui-widget-content" width="100%" id="contactsTab" name="contactsTab" border="0" cellspacing="1" >
				<thead class="cGrid ui-widget-header"><tr>
					<td align="center">#</td>
					<td align="center">Contact</td>
					<td align="center">Contact Phone Number</td>
					<td align="center">Updated By</td>
				</tr></thead>
				<tbody id="contactsBody" name="contactsBody" class="cLabel" align="left"></tbody>
			</table>
			</div>	
			</div>
		</div>
		<div id="confirmIndDev">
		<input class="ui-label" type="radio" name="confirmInd" value="Y"> Confirm</input>
		<input class="ui-label" type="radio" name="confirmInd" value="N"> Un-Confirm</input>
		</div>
		</td>
	</tr>
</table>
<table width="100%">
	<tr><td><div id="certErrorDiv" name="certErrorDiv" class="cErrors"></div></td></tr>
</table>
</fieldset>

<div id="updButDiv" name="updButDiv" >
<table align="center">
	<tr>
	   
		  
			
				
				
				
				
				
				
				
					<td><input type="button" value="Update" onClick="saveUpdate()" id='updButton' name='updButton' class='ui-button' /></td>
			
				
					<td><input type="button" value="Cancel Deposit" onClick="cancelDeposit()" id='cancelDepositButton' name='cancelDepositButton' class='ui-button' /></td>
				
					
						<td><input type="button" value="Print Receipt" onClick="callPrintReceiptData()" id='printRepBut' name='printRepBut' class='cGrid ui-widget-header' /></td>
					
					<td><input type="button" value="DLV Cover Letter" onClick="callPrintDeliveryCoverLetter()" id='printDlvCoverBut' class='CGrid ui-widget-header' /></td>
					<td><input type="button" value="Cover Letter" onClick="callPrintDtcCoverLetter()" id='printDtcCoverBut' class='CGrid ui-widget-header' /></td>
					
					<td align="right" class= >
		         	<input type="button" class="ui-button" id="receiveButInq" name="receiveButInq" value="Receive" onClick="receiveIndiDeposits();"> </input>
		           </td>
				
			
		
		
		
		
		
		
		
		
		
		
	  
	</tr>
</table>
</div>
<input type="hidden" id="tokId" name="tokId" value="0010S0212390219007210865114629364" />
<input type="hidden" id="entitled" name="entitled" value="true" />

<input type="hidden" id="branchUser" name="branchUser" value="null" />
<input type="hidden" id="isapproveEntitled" name="isapproveEntitled" value="true" />

<input type="hidden" id="isReTrnsEntitled" name="isReTrnsEntitled" value="false" />

<input type="hidden" id="isupdateEntitled" name=isupdateEntitled value="true" />
<input type="hidden" id="marginentitled" name=marginentitled value="true" />

<input type="hidden" id="brUser" name="brUser" value="null" />
<input type="hidden" id="faUser" name="faUser" value="null" />

<input type="hidden" id="secVal" name="secVal" value="" />
			<input type="hidden" id="cusipVal" name="cusipVal" value="" />
			<input type="hidden" id="rowidofac" name="rowidofac" value="" />
			<input type="hidden" id="ofachitind" name="ofachitind" value="" />
				<input type="hidden" id="ofachittype" name="ofachittype" value="" />
				<input type="hidden" id="isUbsUser" name="isUbsUser" value="null" />

</form>

<form id="dsrqForm" name="dsrqForm" method="POST">
<center>
<div id="dsrqEligQuesDiv" name="dsrqEligQuesDiv">
	
	<div id="questInfoDiv" name="questInfoDiv" class="cInfoText">
		<label>Please answer all the questions  below and click on 'Submit' button to proceed further </label>
	</div>
	<table width="70%" class="ui-widget-content" id="dsrqEligQuesTable" name="dsrqEligQuesTable" border="0" cellspacing="1" cellpadding="1">
		<thead class="cGrid ui-widget-header">
			<tr>
				<td width="10%" align="center">#</td>
				<td width="60%" align="center">Question</td>
				<td width="30%" align="center">Answer</td>
			</tr>
		</thead>		
		<tbody id="dsrqEligQuesBody" name="dsrqEligQuesBody"  class="cLabel" align="center">
		</tbody>
	</table>
	<table>
		<tr>
			<td style="text-align:center;"><input type="button" value="Submit" id="dsrqQuesSubBut" name="dsrqQuesSubBut" class="ui-button" onclick="validateDsrqAnswers();" ></td>	
		</tr>
	</table>
</div>
</center>

<input type="hidden" id="clientid" name="clientid" value="0010" />
</form>

<form id="questForm" name="questForm" >
	<div id="questionDiv" name="questionDiv">
		<label class="cInfoText">According to compliance you should fill Questionnaire. Once you complete Questionnaire you will be redirected to main screen</label>
	</div>
</form>

</body>
<script type="text/javaScript" lanaguage="javaScript" >
//var cal = Calendar.setup({
 //         onSelect: function(cal) { cal.hide() },
 //         showTime: true
 //     });
 //cal.manageFields("inqDatebut", "cdate", "%m/%d/%Y"); 
$(function() {
	var inputDate = $("#cdate");
	var changeYearButtons = function() {
   	changeMonthAndYear(inputDate);
	};
	$("#cdate").datepicker({
	beforeShow: changeYearButtons,
   	onChangeMonthYear: changeYearButtons,
	showOn: 'button',
	buttonImage: 'images/calendar.png'});
	
getSecoutValue=function(eleName){
	var ele=document.getElementById(""+eleName);
	var eleVal;
	if(ele!=null && ele.tagName =="LABEL"){
		eleVal=ele.innerHTML;
	}else if(ele!=null && ele.tagName =="INPUT"){
		eleVal=ele.value;
	}else if(ele!=null && ele.tagName =="DIV"){
		eleVal=ele.innerHTML;
	}else if(ele!=null && ele.tagName =="SPAN"){
		eleVal=ele.innerHTML;
	}else if(ele!=null && ele.tagName=="SELECT"){
		var localEle =$("#"+eleName).val();
		eleVal=localEle != null ? localEle :null;
	}else if(ele!=null && ele.tagName=="TEXTAREA"){
		if(ele.value.length > ele.getAttribute("maxlength")) {
			eleVal=trim(ele.value).substring(0,ele.getAttribute("maxlength"));
		} else {
			eleVal=ele.value;
		}
	}
	eleVal=trim(eleVal);
	return eleVal;
}

});
var TabbedPanels2 = new Spry.Widget.TabbedPanels("TabbedPanels2");
onLoadInialize();
hideDiv("dsrqEligQuesDiv",true);
hideDiv("questionDiv",true);
hideshowSortSymbols(false);
</script>
</html>